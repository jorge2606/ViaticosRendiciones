{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_helpers/error.interceptor.ts","webpack:///./src/app/_helpers/fake-backend.ts","webpack:///./src/app/_helpers/index.ts","webpack:///./src/app/_helpers/jwt.interceptor.ts","webpack:///./src/app/_models/category.ts","webpack:///./src/app/_models/destiny.ts","webpack:///./src/app/_models/distributions.ts","webpack:///./src/app/_models/expenditureType.ts","webpack:///./src/app/_models/holiday.ts","webpack:///./src/app/_models/notifications.ts","webpack:///./src/app/_models/organism.ts","webpack:///./src/app/_models/passwords.ts","webpack:///./src/app/_models/register.ts","webpack:///./src/app/_models/reset-password.ts","webpack:///./src/app/_models/role-claim-permission.ts","webpack:///./src/app/_models/roles.ts","webpack:///./src/app/_models/solicitationSubsidy.ts","webpack:///./src/app/_models/transport.ts","webpack:///./src/app/_models/update-role-claim-permission.ts","webpack:///./src/app/_services/asp-net-users-roles.service.ts","webpack:///./src/app/_services/audits/users-audit.service.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/category.service.ts","webpack:///./src/app/_services/city.service.ts","webpack:///./src/app/_services/code-liquidation.service.ts","webpack:///./src/app/_services/country.service.ts","webpack:///./src/app/_services/destiny.service.ts","webpack:///./src/app/_services/distribution.service.ts","webpack:///./src/app/_services/expenditure.service.ts","webpack:///./src/app/_services/expenditures-user.service.ts","webpack:///./src/app/_services/holidays.service.ts","webpack:///./src/app/_services/mess-between-comp.service.ts","webpack:///./src/app/_services/motive.service.ts","webpack:///./src/app/_services/notifications.service.ts","webpack:///./src/app/_services/organism.service.ts","webpack:///./src/app/_services/place.service.ts","webpack:///./src/app/_services/province.service.ts","webpack:///./src/app/_services/recovery-password.service.ts","webpack:///./src/app/_services/role.service.ts","webpack:///./src/app/_services/roles-permissions.service.ts","webpack:///./src/app/_services/solicitation-subsidy.service.ts","webpack:///./src/app/_services/supervisor-user-agent.service.ts","webpack:///./src/app/_services/transport.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app-routes.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/audits/audit-users/audit-users.component.css","webpack:///./src/app/audits/audit-users/audit-users.component.html","webpack:///./src/app/audits/audit-users/audit-users.component.ts","webpack:///./src/app/audits/audits.component.css","webpack:///./src/app/audits/audits.component.html","webpack:///./src/app/audits/audits.component.ts","webpack:///./src/app/category/category.component.css","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/category/create/create.component.css","webpack:///./src/app/category/create/create.component.html","webpack:///./src/app/category/create/create.component.ts","webpack:///./src/app/category/modify/modify.component.css","webpack:///./src/app/category/modify/modify.component.html","webpack:///./src/app/category/modify/modify.component.ts","webpack:///./src/app/distributions/create/create-distributions.component.css","webpack:///./src/app/distributions/create/create-distributions.component.html","webpack:///./src/app/distributions/create/create-distributions.component.ts","webpack:///./src/app/distributions/distributions.component.css","webpack:///./src/app/distributions/distributions.component.html","webpack:///./src/app/distributions/distributions.component.ts","webpack:///./src/app/distributions/modify/modify-distribution.component.css","webpack:///./src/app/distributions/modify/modify-distribution.component.html","webpack:///./src/app/distributions/modify/modify-distribution.component.ts","webpack:///./src/app/expenditures-users/expenditures-users.component.css","webpack:///./src/app/expenditures-users/expenditures-users.component.html","webpack:///./src/app/expenditures-users/expenditures-users.component.ts","webpack:///./src/app/expenditures/create/create-expenditure.component.css","webpack:///./src/app/expenditures/create/create-expenditure.component.html","webpack:///./src/app/expenditures/create/create-expenditure.component.ts","webpack:///./src/app/expenditures/expenditures.component.css","webpack:///./src/app/expenditures/expenditures.component.html","webpack:///./src/app/expenditures/expenditures.component.ts","webpack:///./src/app/expenditures/update/update-expenditure.component.css","webpack:///./src/app/expenditures/update/update-expenditure.component.html","webpack:///./src/app/expenditures/update/update-expenditure.component.ts","webpack:///./src/app/holidays/create/create-holidays.component.css","webpack:///./src/app/holidays/create/create-holidays.component.html","webpack:///./src/app/holidays/create/create-holidays.component.ts","webpack:///./src/app/holidays/holidays.component.css","webpack:///./src/app/holidays/holidays.component.html","webpack:///./src/app/holidays/holidays.component.ts","webpack:///./src/app/holidays/modify/modify-holidays.component.css","webpack:///./src/app/holidays/modify/modify-holidays.component.html","webpack:///./src/app/holidays/modify/modify-holidays.component.ts","webpack:///./src/app/holidays/ngb-parseFormatter.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.ts","webpack:///./src/app/manage-password/manage-password.component.css","webpack:///./src/app/manage-password/manage-password.component.html","webpack:///./src/app/manage-password/manage-password.component.ts","webpack:///./src/app/manage-password/reset-password/reset-password.component.css","webpack:///./src/app/manage-password/reset-password/reset-password.component.html","webpack:///./src/app/manage-password/reset-password/reset-password.component.ts","webpack:///./src/app/modals/add-destiny/add-destiny.component.css","webpack:///./src/app/modals/add-destiny/add-destiny.component.html","webpack:///./src/app/modals/add-destiny/add-destiny.component.ts","webpack:///./src/app/modals/add-new-expenditure/add-new-expenditure.component.css","webpack:///./src/app/modals/add-new-expenditure/add-new-expenditure.component.html","webpack:///./src/app/modals/add-new-expenditure/add-new-expenditure.component.ts","webpack:///./src/app/modals/add-supervisor/add-supervisor.component.css","webpack:///./src/app/modals/add-supervisor/add-supervisor.component.html","webpack:///./src/app/modals/add-supervisor/add-supervisor.component.ts","webpack:///./src/app/modals/list-notifications/list-notifications.component.css","webpack:///./src/app/modals/list-notifications/list-notifications.component.html","webpack:///./src/app/modals/list-notifications/list-notifications.component.ts","webpack:///./src/app/modals/modals.component.html","webpack:///./src/app/modals/modals.component.ts","webpack:///./src/app/navar/navar.component.css","webpack:///./src/app/navar/navar.component.html","webpack:///./src/app/navar/navar.component.ts","webpack:///./src/app/organisms/create/create-organism.component.css","webpack:///./src/app/organisms/create/create-organism.component.html","webpack:///./src/app/organisms/create/create-organism.component.ts","webpack:///./src/app/organisms/modify/modify-organism.component.css","webpack:///./src/app/organisms/modify/modify-organism.component.html","webpack:///./src/app/organisms/modify/modify-organism.component.ts","webpack:///./src/app/organisms/organisms.component.css","webpack:///./src/app/organisms/organisms.component.html","webpack:///./src/app/organisms/organisms.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/roles/create/create.component.css","webpack:///./src/app/roles/create/create.component.html","webpack:///./src/app/roles/create/create.component.ts","webpack:///./src/app/roles/roles-permissions/roles-permissions.component.css","webpack:///./src/app/roles/roles-permissions/roles-permissions.component.html","webpack:///./src/app/roles/roles-permissions/roles-permissions.component.ts","webpack:///./src/app/roles/roles.component.css","webpack:///./src/app/roles/roles.component.html","webpack:///./src/app/roles/roles.component.ts","webpack:///./src/app/solicitation-subsidy/create/create-solicitation.component.css","webpack:///./src/app/solicitation-subsidy/create/create-solicitation.component.html","webpack:///./src/app/solicitation-subsidy/create/create-solicitation.component.ts","webpack:///./src/app/solicitation-subsidy/detail/solicitation-subsidydetail.component.css","webpack:///./src/app/solicitation-subsidy/detail/solicitation-subsidydetail.component.html","webpack:///./src/app/solicitation-subsidy/detail/solicitation-subsidydetail.component.ts","webpack:///./src/app/solicitation-subsidy/solicitation-subsidy.component.css","webpack:///./src/app/solicitation-subsidy/solicitation-subsidy.component.html","webpack:///./src/app/solicitation-subsidy/solicitation-subsidy.component.ts","webpack:///./src/app/transports/create/create-transport.component.css","webpack:///./src/app/transports/create/create-transport.component.html","webpack:///./src/app/transports/create/create-transport.component.ts","webpack:///./src/app/transports/modify/modify-transport.component.css","webpack:///./src/app/transports/modify/modify-transport.component.html","webpack:///./src/app/transports/modify/modify-transport.component.ts","webpack:///./src/app/transports/transports.component.css","webpack:///./src/app/transports/transports.component.html","webpack:///./src/app/transports/transports.component.ts","webpack:///./src/app/users/create/create.component.css","webpack:///./src/app/users/create/create.component.html","webpack:///./src/app/users/create/create.component.ts","webpack:///./src/app/users/modify/modify.component.css","webpack:///./src/app/users/modify/modify.component.html","webpack:///./src/app/users/modify/modify.component.ts","webpack:///./src/app/users/photo-profile/photo-profile.component.css","webpack:///./src/app/users/photo-profile/photo-profile.component.html","webpack:///./src/app/users/photo-profile/photo-profile.component.ts","webpack:///./src/app/users/setting/settingofuser.component.css","webpack:///./src/app/users/setting/settingofuser.component.html","webpack:///./src/app/users/setting/settingofuser.component.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/users/users.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n        \r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n\r\n    ifLogged(){\r\n        let result : boolean = false;\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            result = true;\r\n        } \r\n        return result;       \r\n    }\r\n}","import { AuthenticationService } from './../_services/authentication.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            return throwError(err);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n\r\n    constructor() { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let testUser = { id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User' };\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null).pipe(mergeMap(() => {\r\n\r\n            // authenticate\r\n            if (request.url.endsWith('/api/User/Auth') && request.method === 'POST') {\r\n                if (request.body.username === testUser.username && request.body.password === testUser.password) {\r\n                    // if login details are valid return 200 OK with a fake jwt token\r\n                    let body = {\r\n                        id: testUser.id,\r\n                        username: testUser.username,\r\n                        firstName: testUser.firstName,\r\n                        lastName: testUser.lastName,\r\n                        token: 'fake-jwt-token'\r\n                    };\r\n                    return of(new HttpResponse({ status: 200, body }));\r\n                } else {\r\n                    // else return 400 bad request\r\n                    return throwError({ error: { message: 'Username or password is incorrect' } });\r\n                }\r\n            }\r\n\r\n            // get users\r\n            if (request.url.endsWith('/api/User/') && request.method === 'GET') {\r\n                // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    return of(new HttpResponse({ status: 200, body: [testUser] }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return throwError({ error: { message: 'Unauthorised' } });\r\n                }\r\n            }\r\n\r\n            // pass through any requests not handled above\r\n            return next.handle(request);\r\n            \r\n        }))\r\n\r\n        // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n        .pipe(materialize())\r\n        .pipe(delay(500))\r\n        .pipe(dematerialize());\r\n    }\r\n}\r\n\r\nexport let fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","﻿export * from './error.interceptor';\nexport * from './jwt.interceptor';\nexport * from './fake-backend';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export class Category{\r\n    id : number;\r\n    name : string;\r\n    description : string;\r\n    isDeleted : Date;\r\n    advance : number;\r\n}\r\n\r\nexport class CreateCategoryDto extends Category{}\r\n\r\nexport class UpdateCategoryDto extends Category{}\r\n\r\nexport class FindByIdCategoryDto extends Category{}\r\n\r\nexport class AllCategoryDto extends Category{}","export class DestinyDto{\r\n    id : number;\r\n    placeId : number;\r\n    provinceId : number;\r\n    provinceName : string;\r\n    cityId : number; \r\n    cityName : string;\r\n    countryId : number;\r\n    countryName : string;\r\n    codeLiquidationPercentage : number;\r\n    startDate : any;\r\n    days : number;\r\n    categoryId : number;\r\n    codeLiquidationId : number;\r\n    transportId : number;\r\n    transportBrand : string;\r\n    transportModel : string;\r\n}","import { OrganismBaseDto } from \"./organism\";\r\nimport { User } from \"../users/users\";\r\n\r\nexport class DistributionBaseDto{\r\n    id : number;\r\n    name : string;\r\n    description : string;\r\n    organismId : number;\r\n    organism : OrganismBaseDto;\r\n    users : User[];\r\n}\r\n\r\nexport class CreateDistributionDto extends DistributionBaseDto{}\r\n\r\nexport class UpdateDistributionDto extends DistributionBaseDto{}\r\n\r\nexport class DeleteDistributionDto extends DistributionBaseDto{}\r\n\r\nexport class FindByIdDistributionDto extends DistributionBaseDto{}","export class ExpenditureTypeBaseDto {\r\n    id : number;\r\n    name : string;\r\n}\r\n\r\nexport class CreateExpenditureDto extends ExpenditureTypeBaseDto{}\r\n\r\nexport class UpdateExpenditureDto extends ExpenditureTypeBaseDto{}\r\n\r\nexport class DeleteExpenditureDto extends ExpenditureTypeBaseDto{}\r\n\r\nexport class FindByIdExpenditureDto extends ExpenditureTypeBaseDto{}\r\n\r\nexport class AllExpenditureDto extends ExpenditureTypeBaseDto{}","export class HolidayBaseDto{\r\n    id : number;\r\n    description : string;\r\n    date : any;\r\n}\r\n\r\nexport class CreateHolidayDto extends HolidayBaseDto{}\r\n\r\nexport class UpdateHolidayDto extends HolidayBaseDto{}\r\n\r\nexport class DeleteHolidayDto extends HolidayBaseDto{}\r\n\r\nexport class FindByIdHolidayDto extends HolidayBaseDto{}","export class Notifications{\r\n    id : number;\r\n    textData : string;\r\n    tittle : string;\r\n    read : boolean;\r\n    colapse : boolean;\r\n}\r\n","export class OrganismBaseDto{\r\n    id : number;\r\n    name : string;\r\n    description : string;\r\n}\r\n\r\nexport class CreateOrganismDto extends OrganismBaseDto {}\r\n\r\nexport class UpdateOrganismDto extends OrganismBaseDto {}\r\n\r\nexport class FindByIdOrganismDto extends OrganismBaseDto {}","export class ForgotPassword{\r\n    email : string;\r\n}","export class Register{\r\n    id : number;\r\n    dni : number;\r\n    email : string;\r\n    phoneNumber : number;\r\n    userName : string;\r\n    password : string;\r\n}","export class ResetPassword{\r\n    password : string;\r\n    passwordConfirm : string;\r\n    userId : number;\r\n    passwordResetToken : string;\r\n}","export class RoleClaimPermission {\n    text : string;\n    value : string;\n    checked : boolean;\n    children : RoleClaimPermission[];\n}\n","export class Roles{\r\n    id : string;\r\n    name : String;\r\n}\r\n\r\nexport class RoleUserDto{\r\n    rolId : number;\r\n    userId : number;\r\n}","import { AllPlaceDto } from './place';\r\nimport { DestinyDto } from './destiny';\r\n\r\nexport class Expenditure {\r\n    id : number;\r\n    description : string;\r\n    amount : number;\r\n    expenditureTypeId : number; \r\n    expenditureTypeName : string;   \r\n}\r\n\r\nexport class SolicitationSubsidyBaseDto{\r\n    id : number;\r\n    motive : string;\r\n    userId : number;\r\n    destinies : DestinyDto[];\r\n    expenditures : Expenditure[];\r\n    total : number;\r\n    createDate : any;\r\n}\r\n\r\n\r\nexport class CreateSolicitationSubsidyDto{\r\n    id : number;\r\n    motive : string;\r\n    userId : number;\r\n    destinies : DestinyDto[];\r\n    expenditures : Expenditure[];\r\n    total : number;\r\n    createDate : any;\r\n}\r\n\r\nexport class AllSolicitationSubsidyDto extends SolicitationSubsidyBaseDto{\r\n    user : any;\r\n}\r\n\r\nexport class DetailSolicitationSubsidyDto{\r\n    id : number;\r\n    motive : string;\r\n    user : any;\r\n    destinies : DestinyDto[];\r\n    expenditures : Expenditure[];\r\n    total : number;\r\n    createDate : any;\r\n}\r\n","export class TransportBaseDto{\r\n    id : number;\r\n    type : string;\r\n    model : string;\r\n    brand : string;\r\n    carPlate : string;\r\n}\r\n\r\nexport class CreateTransportDto extends TransportBaseDto{}\r\n\r\nexport class UpdateTransportDto extends TransportBaseDto{}\r\n\r\nexport class DeleteTransportDto extends TransportBaseDto{}\r\n\r\nexport class FindByIdTransportDto extends TransportBaseDto{}\r\n\r\nexport class AllTransportDto extends TransportBaseDto{}","import { RoleClaimPermission } from \"./role-claim-permission\";\n\nexport class UpdateRoleClaimPermission {\n    id : string;\n    Claims : RoleClaimPermission[];\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserRoles } from '../_models/userRoles';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AspNetUsersRolesService {\n\n  constructor(private http : HttpClient) { }\n\n  getAllUsersRoles(){\n    return this.http.get<UserRoles[]>(\"http://localhost:63098/api/AspNetUserRoles/AllRoles\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersAuditService {\n\n  constructor(private http: HttpClient) { }\n\n  fetchModifiedOfUser(userId : number){\n    return this.http.get<any>('http://localhost:63098/api/Audit/UserAudits/' + userId);\n  }\n  \n}\n","import { Login } from './../login/login';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n\n    private loggedIn = new BehaviorSubject<boolean>(false); // {1}\n\n    constructor(private http: HttpClient,\n        private router: Router) {\n        if (localStorage.getItem('currentUser')) {\n            // logged in so return true\n            this.loggedIn.next(true);\n        }\n    }\n\n    login(user: Login) {\n        return this.http.post<any>('http://localhost:63098/api/User/Auth', user)\n            .pipe(map(this.saveToken));\n    }\n\n    saveToken = user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.token) {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            this.loggedIn.next(true);\n        }\n        return user;\n    };\n\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.loggedIn.next(false);\n\n        this.router.navigate(['login']);\n    }\n\n    get isLoggedIn() {\n        return this.loggedIn.asObservable(); // {2}\n    }\n\n    userId(key : string){\n        let current = localStorage.getItem('currentUser');\n        if (current != null){\n            var currentUserJSON = JSON.parse(current);\n            return  currentUserJSON[key];\n        }\n    }\n\n    ifLogged(){\n        let result : boolean = false;\n        if (localStorage.getItem('currentUser')) {\n            // logged in so return true\n            result = true;\n        } \n        return result;       \n    }\n\n    urlFile(userId : number, width : number, height: number){\n        return \"http://localhost:63098/api/File/\"+userId+\"/\"+width+\"/\"+height;\n    }\n\n}","import { FindByIdCategoryDto } from 'src/app/_models/category';\nimport { CreateCategoryDto, UpdateCategoryDto } from './../_models/category';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private http: HttpClient) { }\n\n  createCategory(createCategoryDto : CreateCategoryDto){\n      return this.http.post<CreateCategoryDto>('http://localhost:63098/api/Category/CreateCategory', createCategoryDto);\n  }\n\n  getPaginator(filters: any) {\n    return this.http.get<any>('http://localhost:63098/api/Category/page/', {params: filters});\n  }\n\n  getallCategories() {\n    return this.http.get<any>('http://localhost:63098/api/Category/GetAllCategories/');\n  }\n\n  deleteCategory(idCategory : number){\n    return this.http.delete('http://localhost:63098/api/Category/Delete/'+idCategory);\n  }\n\n  findByIdCategory(idCategory : number){\n    return this.http.get<FindByIdCategoryDto>('http://localhost:63098/api/Category/FindByIdCategory/'+idCategory)\n  }\n  updateCategory(updateCategory :UpdateCategoryDto){\n    return this.http.put<any>('http://localhost:63098/api/Category/UpdateCategory',updateCategory);\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CityBaseDto } from '../_models/city';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService {\n\n  constructor(private http : HttpClient) { }\n\n  getAll(){\n    return this.http.get<any>(\"http://localhost:63098/api/City/GetAll/\");\n  }\n\n  GetByIdCity(cityId : number){\n    return this.http.get<CityBaseDto[]>(\"http://localhost:63098/api/City/GetByIdCity/\"+cityId);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodeLiquidationService {\n\n  constructor(\n    private http : HttpClient\n  ) { }\n\n  getAll(){\n    return this.http.get<any>(\"http://localhost:63098/api/CodeLiquidation/\");\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryService {\n\n  constructor(private http : HttpClient) { }\n\n  getAllCountries(){\n    return this.http.get<any>('http://localhost:63098/api/Country/GetAllCountry');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { DestinyDto } from 'src/app/_models/destiny';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DestinyService {\n\n  private subject = new Subject<DestinyDto[]>();\n \n  constructor(private http : HttpClient) { }\n  \n  delete(id : number){\n      return this.http.delete<any>(\"http://localhost:63098/api/Destiny/Delete/\"+id);\n  }\n  sendMessage(message: DestinyDto[]) {\n      this.subject.next(message);\n  }\n\n  clearMessage() {\n      this.subject.next();\n  }\n\n  getMessage(): Observable<DestinyDto[]> {\n      return this.subject.asObservable();\n  }\n  \n}\n","import { FindByIdDistributionDto, UpdateDistributionDto, CreateDistributionDto } from './../_models/distributions';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DistributionService {\n\n  constructor(private http: HttpClient) { }\n\n  getPaginator(filters: any) {\n    return this.http.get<any>('http://localhost:63098/api/Distribution/page/',{params : filters});\n  }\n\n  allDistribution(){\n    return this.http.get<any>('http://localhost:63098/api/Distribution/AllDistributions');\n  }\n  findByIdDistribution(distributionId : number){\n    return this.http.get<FindByIdDistributionDto>('http://localhost:63098/api/Distribution/FindByIdDistribution/'+distributionId)\n  }\n\n  updateDistribution(updateDistribution : UpdateDistributionDto){\n    return this.http.put('http://localhost:63098/api/Distribution/UpdateDistribution',updateDistribution);\n  }\n  \n  deleteDistribution(distributionId : number){\n    return this.http.delete('http://localhost:63098/api/Distribution/DeleteDistribution/'+distributionId);\n  }\n\n  creteDistribution(createDistribution : CreateDistributionDto){\n      return this.http.post('http://localhost:63098/api/Distribution/CreateDistribution',createDistribution);\n  }\n\n}\n","import { CreateExpenditureDto, UpdateExpenditureDto } from '../_models/expenditureType';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { Expenditure } from '../_models/solicitationSubsidy';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpenditureService {\n\n  private subject = new Subject<any[]>();\n  \n  constructor(private http : HttpClient) { }\n\n  getPaginator(page: number) {\n    return this.http.get<any>('http://localhost:63098/api/ExpenditureType/page/' + page);\n  }\n\n  createExpenditure(createExpenditure : CreateExpenditureDto){\n      return this.http.post<any>('http://localhost:63098/api/ExpenditureType/Create',createExpenditure);\n  }\n\n  findByIdExpenditure(id : number){\n    return this.http.get<any>('http://localhost:63098/api/ExpenditureType/FindById/'+id);\n  }\n\n  findByIdSolicitationSubsidy(solicitationId : number){\n    return this.http.get<any>('http://localhost:63098/api/ExpenditureType/FindBysolicitationId/'+solicitationId);\n  }\n\n  updateExpenditure(updateExpenditure : UpdateExpenditureDto){\n    return this.http.put<any>('http://localhost:63098/api/ExpenditureType/Update/',updateExpenditure);\n  }\n\n  deleteExpenditure(id : number){\n    return this.http.delete<any>('http://localhost:63098/api/ExpenditureType/Delete/'+id);\n  }\n\n  getAll(){\n    return this.http.get<any>(\"http://localhost:63098/api/ExpenditureType/GetAll/\");\n  }\n\n  sendMessage(message: any[]) {\n    this.subject.next(message);\n  }\n\n  clearMessage() {\n    this.subject.next();\n  }\n\n  getMessage(): Observable<any[]> {\n    return this.subject.asObservable();\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpendituresUserService {\n\n  constructor(private http : HttpClient) { }\n\n  getByIdSolicitationSubsidy(id : number){\n    return this.http.get<any>(\"http://localhost:63098/api/Expenditure/GetByIdSolicitationSubsidy/{id}\"+id);\n  }\n\n  delete(id : number){\n    return this.http.delete<any>(\"http://localhost:63098/api/Expenditure/Delete/\"+id);\n  }\n}\n","import { CreateHolidayDto, FindByIdHolidayDto, UpdateHolidayDto } from './../_models/holiday';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HolidaysService {\n\n  constructor(private http : HttpClient) { }\n\n  getPageHoliday(filters : any){\n    return this.http.get<any>(\"http://localhost:63098/api/Holiday/GetPageHoliday\", {params : filters});\n  }\n\n  createHoliday(newHoliday : CreateHolidayDto){\n    return this.http.post<any>(\"http://localhost:63098/api/Holiday/create\",newHoliday);\n  }\n\n  getByIdHoliday(id : number) {\n    return this.http.get<FindByIdHolidayDto>(\"http://localhost:63098/api/Holiday/getById/\"+id);\n  }\n\n  updateHoliday(updateHoliday : UpdateHolidayDto){\n    return this.http.put<any>(\"http://localhost:63098/api/Holiday/update/\",updateHoliday);\n  }\n\n  deleteHoliday(id : number){\n    return this.http.delete<any>(\"http://localhost:63098/api/Holiday/Delete/\"+id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessBetweenCompService {\n\n  private subject = new Subject<any>();\n \n  sendMessage(message: string) {\n      this.subject.next({ text: message });\n  }\n\n  clearMessage() {\n      this.subject.next();\n  }\n\n  getMessage(): Observable<any> {\n      return this.subject.asObservable();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MotiveService {\n\n  constructor(private http :HttpClient) { }\n\n  getAll(){\n    return this.http.get<any>(\"http://localhost:63098/api/Motive/GetAll/\");\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Notifications } from '../_models/notifications';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  constructor(private http : HttpClient) { }\n\n  getAllNotifications(){\n    return this.http.get<Notifications[]>(\"http://localhost:63098/api/Notification/GetSomeNotifications\");\n  }\n\n  notificationRidden(id : Notifications){\n    return this.http.put<Notifications>(\"http://localhost:63098/api/Notification/NotificationRidden/\",id);\n  }\n\n  getPaginator(page: number) {\n    return this.http.get<any>('http://localhost:63098/api/Notification/page/' + page);\n  }\n\n  delete(id : number){\n    return this.http.delete<any>('http://localhost:63098/api/Notification/Delete/'+id);\n  }\n\n}\n","import { CreateOrganismDto, UpdateOrganismDto } from './../_models/organism';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrganismService {\n\n  constructor(private http : HttpClient) { }\n\n  getAllOrganism(){\n    return this.http.get<any>('http://localhost:63098/api/Organism/GetAll');\n  }\n\n  getPaginator(filters: any) {\n    return this.http.get<any>('http://localhost:63098/api/Organism/page/', {params : filters});\n  }\n\n  createOrganism(createOrganism : CreateOrganismDto){\n      return this.http.post<any>('http://localhost:63098/api/Organism/Create',createOrganism);\n  }\n\n  updateOrganism(updateOrganism : UpdateOrganismDto){\n    return this.http.put<any>('http://localhost:63098/api/Organism/Update',updateOrganism);\n  }\n\n  findById(id : number){\n    return this.http.get<any>('http://localhost:63098/api/Organism/FindById/'+id);\n  }\n\n  deleteOrganism(id : number){\n    return this.http.delete('http://localhost:63098/api/Organism/Delete/'+id);\n  }\n}\n","import { AllPlaceDto } from './../_models/place';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n\n  constructor(private http : HttpClient) { }\n\n  getAll(){\n    return this.http.get<AllPlaceDto[]>(\"http://localhost:63098/api/Place/GetAll/\");\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProvinceService {\n\n  constructor(private http : HttpClient) { }\n\n  getAll(){\n    return this.http.get<any>(\"http://localhost:63098/api/Province/GetAll/\");\n  }\n\n  getByIdPlace(placeId : number){\n    return this.http.get<any>(\"http://localhost:63098/api/Province/PlaceId/\"+placeId);\n  }\n\n  getProvincesByDistrictCity(districtCity : string){\n    return this.http.get<any>(\"http://localhost:63098/api/Province/DistrictCity/\"+districtCity);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ForgotPassword } from 'src/app/_models/passwords';\nimport { ResetPassword } from '../_models/reset-password';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecoveryPasswordService {\n\n  constructor(private http : HttpClient) { }\n\n  ForgotPassword(passwordObj : ForgotPassword){\n    this.http.post(\"http://localhost:63098/api/User/ForgotPassword/\",passwordObj).subscribe(x =>\n    console.log(x.toString())\n    );\n  }\n\n  ResetPassword(passwordObj : ResetPassword){\n    this.http.post(\"http://localhost:63098/api/User/ResetPassword/\",passwordObj).subscribe(x =>\n    console.log(x.toString())\n    );\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Roles } from '../_models/roles';\nimport { rolesBelongUser } from '../users/users';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(){\n    return this.http.get<rolesBelongUser[]>(\"http://localhost:63098/api/Role/getAll\");\n  }\n\n  getAllRoles(){\n    return this.http.get<Roles>(\"http://localhost:63098/api/Role/AllRoles\");\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UpdateRoleClaimPermission } from '../_models/update-role-claim-permission';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesPermissionsService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllRoleClaims(id: string) {\n    return this.http.get<any[]>('http://localhost:63098/api/Role/getallClaims?id=' + id);\n  }\n\n  saveRoleClaims(model: UpdateRoleClaimPermission) {\n    this.http.put('http://localhost:63098/api/Role/UpdateClaims/', model).subscribe(\n      data => {\n\n      },\n      error => {\n        console.log(\"Error\", error);\n      }\n    );\n  }\n}\n","import { SolicitationSubsidyBaseDto } from './../_models/solicitationSubsidy';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CreateSolicitationSubsidyDto } from '../_models/solicitationSubsidy';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SolicitationSubsidyService {\n\n  constructor(private http : HttpClient) { }\n\n  getAllSolicitationSubsidies(filter : any){\n    return this.http.get<any>(\"http://localhost:63098/api/SolicitationSubsidy/page/\",{params : filter});\n  }\n\n  createSolicitation(createSolicitationSubsidy : CreateSolicitationSubsidyDto){\n    return this.http.post<any>(\"http://localhost:63098/api/SolicitationSubsidy/Create/\",createSolicitationSubsidy);\n  }\n\n  updateSolicitation(solicitation : SolicitationSubsidyBaseDto){\n      return this.http.put<any>(\"http://localhost:63098/api/SolicitationSubsidy/Update\", solicitation);\n  }\n\n  getByIdSolicitation(solicitationSubsidyId : number){\n    return this.http.get<any>(\"http://localhost:63098/api/SolicitationSubsidy/getBySolicitationId/\"+solicitationSubsidyId);\n  }\n\n  delete(id : number){\n     return this.http.delete<any>(\"http://localhost:63098/api/SolicitationSubsidy/Delete/\"+id);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SupervisorUserAgentBaseDto } from '../_models/supervisorUserAgent';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupervisorUserAgentService {\n\n  constructor(private http : HttpClient) { }\n\n  create(supervisorAgent : User[]){\n    return this.http.post<any>(\"http://localhost:63098/api/SupervisorUserAgent/Create/\",supervisorAgent);\n  }\n}\n","import { CreateTransportDto } from 'src/app/_models/transport';\nimport { UpdateTransportDto } from './../_models/transport';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransportService {\n\n  constructor(private http : HttpClient) { }\n\n  getPaginator(page: number) {\n    return this.http.get<any>('http://localhost:63098/api/Transport/page/' + page);\n  }\n\n  findByIdTransport(id : number){\n    return this.http.get<any>('http://localhost:63098/api/Transport/FindByIdTransport/'+id);\n  }\n\n  updateTransport(updateTransport : UpdateTransportDto){\n    return this.http.put<any>('http://localhost:63098/api/Transport/Update/',updateTransport);\n  }\n\n  createTransport(CreateTransport : CreateTransportDto){\n    return this.http.post<any>('http://localhost:63098/api/Transport/Create/',CreateTransport);\n  }\n\n  deleteTransport(id : number){\n    return this.http.delete<any>('http://localhost:63098/api/Transport/Delete/'+id);\n  }\n\n  getAll(){\n    return this.http.get<any>('http://localhost:63098/api/Transport/GetAll/');\n  }\n\n\n}\n","import { Register } from './../_models/register';\r\nimport { RoleUserDto } from './../_models/roles';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { User, modifyUser, createUser } from '../users/users';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient, private authenticationService : AuthenticationService) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>('http://localhost:63098/api/User/getall');\r\n    }\r\n\r\n    getPaginator(filters: any) {\r\n        return this.http.get<any>('http://localhost:63098/api/User/page/',{params: filters});\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get<modifyUser>('http://localhost:63098/api/User/getbyid/' + id);\r\n    }\r\n\r\n    updateUsers(user: User) : Observable<any> {\r\n        return this.http.put('http://localhost:63098/api/User/UpdateProfileAsAdmin/', user);\r\n    }\r\n\r\n    updateProfileUsers(user: modifyUser) : Observable<any> {\r\n        return this.http.put('http://localhost:63098/api/User/UpdateMyProfile', user);\r\n    }\r\n\r\n    createWithObjectUser(user: createUser): Observable<any> {\r\n        return this.http.post('http://localhost:63098/api/User/', user)\r\n        .pipe(\r\n            map(this.authenticationService.saveToken),\r\n            catchError(error => this.handleError(error))\r\n          );\r\n    }\r\n\r\n    deleteUser(id: number) {\r\n        return this.http.delete('http://localhost:63098/api/User/' + id);\r\n    }\r\n\r\n    register(user: Register): Observable<any> {\r\n        return this.http.post<any>('http://localhost:63098/api/User/register',user)\r\n        .pipe(\r\n            map(this.authenticationService.saveToken),\r\n            catchError(error => this.handleError(error))\r\n          );\r\n    }\r\n    \r\n    handleError(err : any){\r\n        return throwError(err);\r\n    }\r\n\r\n    SaveUserRoles(RoleUserDto: RoleUserDto) {\r\n        this.http.post('http://localhost:63098/api/User/SaveRolUser/', RoleUserDto).subscribe(\r\n            data => {\r\n                console.log(\"POST Request is successful \", data);\r\n            },\r\n            error => {\r\n                console.log(\"Rrror\", error);\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteProfilePhoto(id: number) {\r\n        return this.http.delete('http://localhost:63098/api/File/removePhoto/' + id);\r\n    }\r\n\r\n}","import { SolicitationSubsidydetailComponent } from './solicitation-subsidy/detail/solicitation-subsidydetail.component';\nimport { ExpendituresUsersComponent } from './expenditures-users/expenditures-users.component';\nimport { CreateHolidaysComponent } from './holidays/create/create-holidays.component';\nimport { HolidaysComponent } from './holidays/holidays.component';\nimport { CreateSolicitationComponent } from './solicitation-subsidy/create/create-solicitation.component';\nimport { SolicitationSubsidyComponent } from './solicitation-subsidy/solicitation-subsidy.component';\nimport { CreateOrganismComponent } from './organisms/create/create-organism.component';\nimport { CreateExpenditureComponent } from './expenditures/create/create-expenditure.component';\nimport { ModifyTransportComponent } from './transports/modify/modify-transport.component';\nimport { CreateTransportComponent } from './transports/create/create-transport.component';\nimport { CreateDistributionsComponent } from './distributions/create/create-distributions.component';\nimport { ModifyDistributionComponent } from './distributions/modify/modify-distribution.component';\nimport { DistributionsComponent } from './distributions/distributions.component';\nimport { ModifyCategoryComponent } from './category/modify/modify.component';\nimport { CreateCategoryComponent } from './category/create/create.component';\nimport { CategoryComponent } from './category/category.component';\nimport { PhotoProfileComponent } from './users/photo-profile/photo-profile.component';\nimport { ManagePasswordComponent } from './manage-password/manage-password.component';\nimport { RolesPermissionsComponent } from './roles/roles-permissions/roles-permissions.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { ModifyuserComponent } from './users/modify/modify.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { CreateuserComponent } from './users/create/create.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UsersComponent } from './users/users.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ResetPasswordComponent } from './manage-password/reset-password/reset-password.component';\nimport { SettingofuserComponent } from './users/setting/settingofuser.component';\nimport { TransportsComponent } from './transports/transports.component';\nimport { ExpendituresComponent } from './expenditures/expenditures.component';\nimport { UpdateExpenditureComponent } from './expenditures/update/update-expenditure.component';\nimport { OrganismsComponent } from './organisms/organisms.component';\nimport { ModifyOrganismComponent } from './organisms/modify/modify-organism.component';\nimport { ModifyHolidaysComponent } from './holidays/modify/modify-holidays.component';\n\nconst routes: Routes = [\n  //canActivate : Interface that a class can implement to be a guard deciding if a route can be activated.\n  { path: '', component: HomeComponent, canActivate : [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent},\n  { path: 'users', component: UsersComponent, canActivate : [AuthGuard] },\n  { path: 'users/create', component: CreateuserComponent, canActivate : [AuthGuard] },\n  { path: 'users/:distributionId', component: UsersComponent, canActivate : [AuthGuard] },\n  { path: 'users/update/:id', component: ModifyuserComponent, canActivate : [AuthGuard] },\n  { path: 'settingUser/:id', component: SettingofuserComponent, canActivate : [AuthGuard] },\n  { path: 'photoProfile/:id', component: PhotoProfileComponent, canActivate : [AuthGuard] },\n\n  { path: 'roles', component: RolesComponent, canActivate : [AuthGuard] },\n  { path: 'roles/permissions/:id', component: RolesPermissionsComponent, canActivate : [AuthGuard] },\n  { path: 'RecuperarContraseña', component: ManagePasswordComponent},\n  { path: 'CambiarPassword', component: ResetPasswordComponent},\n  { path: 'category', component : CategoryComponent, canActivate : [AuthGuard]},\n  { path: 'category/create', component : CreateCategoryComponent},\n  { path: 'category/update/:id', component : ModifyCategoryComponent, canActivate : [AuthGuard]},\n  { path: 'distribution', component : DistributionsComponent, canActivate : [AuthGuard]},\n  { path: 'distribution/create', component : CreateDistributionsComponent, canActivate : [AuthGuard]},\n  { path: 'distribution/:organismId', component : DistributionsComponent, canActivate : [AuthGuard]},\n  { path: 'distribution/update/:id', component : ModifyDistributionComponent, canActivate : [AuthGuard]},\n  { path: 'transport', component : TransportsComponent, canActivate : [AuthGuard]},\n  { path: 'transport/create', component : CreateTransportComponent, canActivate : [AuthGuard]},\n  { path: 'transport/update/:id', component : ModifyTransportComponent, canActivate : [AuthGuard]},\n  { path: 'expenditure', component : ExpendituresComponent, canActivate : [AuthGuard]},\n  { path: 'expenditure/create', component : CreateExpenditureComponent, canActivate : [AuthGuard]},\n  { path: 'expenditure/update/:id', component : UpdateExpenditureComponent, canActivate : [AuthGuard]},\n  { path: 'expenditureUsers/:id', component : ExpendituresUsersComponent, canActivate : [AuthGuard]},\n  { path: 'organism', component : OrganismsComponent, canActivate : [AuthGuard]},\n  { path: 'organism/create', component : CreateOrganismComponent, canActivate : [AuthGuard]},\n  { path: 'organism/update/:id', component : ModifyOrganismComponent, canActivate : [AuthGuard]},\n  { path: 'SolicitationSubsidy', component : SolicitationSubsidyComponent, canActivate : [AuthGuard]},\n  { path: 'SolicitationSubsidy/create', component : CreateSolicitationComponent, canActivate : [AuthGuard]},\n  { path: 'SolicitationSubsidy/detail/:id', component : SolicitationSubsidydetailComponent, canActivate : [AuthGuard]},\n  { path: 'SolicitationSubsidy/modify/:id', component : CreateSolicitationComponent, canActivate : [AuthGuard]},  \n  { path: 'holidays', component : HolidaysComponent, canActivate : [AuthGuard]},\n  { path: 'holidays/create', component : CreateHolidaysComponent, canActivate : [AuthGuard]},\n  { path: 'holidays/update/:id', component : ModifyHolidaysComponent, canActivate : [AuthGuard]},\n  \n  \n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  exports : [\n    RouterModule\n  ], \n  imports : [\n    RouterModule.forRoot(routes)\n  ]\n})\nexport class AppRoutesModule { }\n","module.exports = \".navarStyle {\\r\\n  font-size : 13px;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n  padding: 8px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7RUFDakIseUlBQXlJO0VBQ3pJLGFBQWE7Q0FDZCIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmFyU3R5bGUge1xyXG4gIGZvbnQtc2l6ZSA6IDEzcHg7XHJcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCAnT3BlbiBTYW5zJywgJ0hlbHZldGljYSBOZXVlJywgc2Fucy1zZXJpZjtcclxuICBwYWRkaW5nOiA4cHg7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container pt-1 small\\\">\\n    <app-navar [urlImage]=\\\"urlImage\\\"></app-navar>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './_services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  urlImage = \"\";\n  idUser : number;\n\n  constructor(private authService : AuthenticationService){}\n  \n  ngOnInit(){\n    this.idUser = this.authService.userId('id');\n    this.urlImage = this.authService.urlFile(this.idUser, 25,25)+ \"r=\" + (Math.random() * 100) + 1;\n  }\n}\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CreateuserComponent } from './users/create/create.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { AppRoutesModule } from './app-routes.module';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { JwtInterceptor , ErrorInterceptor} from './_helpers/';\r\nimport { ModifyuserComponent } from './users/modify/modify.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport {NgbModule, NgbDatepickerModule, NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdModalContent } from './modals/modals.component';\r\n//Paginator\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { NavarComponent } from './navar/navar.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { CreateRolesComponent } from './roles/create/create.component';\r\nimport { TreeviewModule } from 'ngx-treeview';\r\nimport { RolesPermissionsComponent } from './roles/roles-permissions/roles-permissions.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ManagePasswordComponent } from './manage-password/manage-password.component';\r\nimport { ResetPasswordComponent } from './manage-password/reset-password/reset-password.component';\r\nimport { SettingofuserComponent } from './users/setting/settingofuser.component';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { PhotoProfileComponent } from './users/photo-profile/photo-profile.component';\r\nimport { ListNotificationsComponent } from './modals/list-notifications/list-notifications.component';\r\nimport { AuditsComponent } from './audits/audits.component';\r\nimport { AuditUsersComponent } from './audits/audit-users/audit-users.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { CreateCategoryComponent } from './category/create/create.component';\r\nimport { ModifyCategoryComponent } from './category/modify/modify.component';\r\nimport { DistributionsComponent } from './distributions/distributions.component';\r\nimport { ModifyDistributionComponent } from './distributions/modify/modify-distribution.component';\r\nimport { CreateDistributionsComponent } from './distributions/create/create-distributions.component';\r\nimport { TransportsComponent } from './transports/transports.component';\r\nimport { CreateTransportComponent } from './transports/create/create-transport.component';\r\nimport { ModifyTransportComponent } from './transports/modify/modify-transport.component';\r\nimport { ExpendituresComponent } from './expenditures/expenditures.component';\r\nimport { CreateExpenditureComponent } from './expenditures/create/create-expenditure.component';\r\nimport { UpdateExpenditureComponent } from './expenditures/update/update-expenditure.component';\r\nimport { OrganismsComponent } from './organisms/organisms.component';\r\nimport { CreateOrganismComponent } from './organisms/create/create-organism.component';\r\nimport { ModifyOrganismComponent } from './organisms/modify/modify-organism.component';\r\nimport { SolicitationSubsidyComponent } from './solicitation-subsidy/solicitation-subsidy.component';\r\nimport { CreateSolicitationComponent } from './solicitation-subsidy/create/create-solicitation.component';\r\nimport { HolidaysComponent } from './holidays/holidays.component';\r\nimport { CreateHolidaysComponent } from './holidays/create/create-holidays.component';\r\nimport { ModifyHolidaysComponent } from './holidays/modify/modify-holidays.component';\r\nimport { NgbDateFRParserFormatter } from './holidays/ngb-parseFormatter';\r\nimport { AddNewExpenditureComponent } from './modals/add-new-expenditure/add-new-expenditure.component';\r\nimport { AddDestinyComponent } from './modals/add-destiny/add-destiny.component';\r\nimport { ExpendituresUsersComponent } from './expenditures-users/expenditures-users.component';\r\nimport { SolicitationSubsidydetailComponent } from './solicitation-subsidy/detail/solicitation-subsidydetail.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { AddSupervisorComponent } from './modals/add-supervisor/add-supervisor.component';\r\n\r\n\r\nlibrary.add(fas);\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UsersComponent,\r\n    CreateuserComponent,\r\n    HomeComponent,\r\n    ModifyuserComponent,\r\n    RegisterComponent,\r\n    NgbdModalContent,\r\n    NavarComponent,\r\n    RolesComponent,\r\n    CreateRolesComponent,\r\n    RolesPermissionsComponent,\r\n    ManagePasswordComponent,\r\n    ResetPasswordComponent,\r\n    SettingofuserComponent,\r\n    PhotoProfileComponent,\r\n    ListNotificationsComponent,\r\n    AuditsComponent,\r\n    AuditUsersComponent,\r\n    CategoryComponent,\r\n    CreateCategoryComponent,\r\n    ModifyCategoryComponent,\r\n    DistributionsComponent,\r\n    ModifyDistributionComponent,\r\n    CreateDistributionsComponent,\r\n    TransportsComponent,\r\n    CreateTransportComponent,\r\n    ModifyTransportComponent,\r\n    ExpendituresComponent,\r\n    CreateExpenditureComponent,\r\n    UpdateExpenditureComponent,\r\n    OrganismsComponent,\r\n    CreateOrganismComponent,\r\n    ModifyOrganismComponent,\r\n    SolicitationSubsidyComponent,\r\n    CreateSolicitationComponent,\r\n    HolidaysComponent,\r\n    CreateHolidaysComponent,\r\n    ModifyHolidaysComponent,\r\n    AddNewExpenditureComponent,\r\n    AddDestinyComponent,\r\n    ExpendituresUsersComponent,\r\n    SolicitationSubsidydetailComponent,\r\n    AddSupervisorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutesModule,\r\n    HttpModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgxPaginationModule,\r\n    NgbDatepickerModule,  \r\n    FontAwesomeModule,\r\n    TreeviewModule.forRoot(),\r\n    FileUploadModule,\r\n    BrowserAnimationsModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter}\r\n\r\n    // provider used to create fake backend\r\n    //fakeBackendProvider    \r\n  ],\r\n  entryComponents: [NgbdModalContent, ListNotificationsComponent,AddNewExpenditureComponent,\r\n    AddDestinyComponent, AddSupervisorComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".danger{\\r\\n    background-color:#F2D7D5;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.warning{\\r\\n    background-color:#FCF3CF;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.success{\\r\\n    background-color:#D5F5E3;\\r\\n    color: black;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXVkaXRzL2F1ZGl0LXVzZXJzL2F1ZGl0LXVzZXJzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsYUFBYTtDQUNoQjs7QUFFRDtJQUNJLHlCQUF5QjtJQUN6QixhQUFhO0NBQ2hCOztBQUVEO0lBQ0kseUJBQXlCO0lBQ3pCLGFBQWE7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC9hdWRpdHMvYXVkaXQtdXNlcnMvYXVkaXQtdXNlcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYW5nZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiNGMkQ3RDU7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi53YXJuaW5ne1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojRkNGM0NGO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4uc3VjY2Vzc3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6I0Q1RjVFMztcclxuICAgIGNvbG9yOiBibGFjaztcclxufSJdfQ== */\"","module.exports = \"<table class=\\\"table\\\">\\n    <thead>\\n      <tr style=\\\"font-weight: bold;\\\">\\n        <td>Usuario Actual</td>\\n        <td>Acción</td>\\n        <td>Fecha</td>\\n        <td>Ult. Cambios</td>\\n      </tr>\\n    </thead>\\n    <tbody> \\n      <tr *ngFor=\\\"let user of userAudit\\\"\\n          [ngClass]=\\\"{'danger': user.auditAction == 'Delete',\\n                      'warning' : user.auditAction == 'Update',\\n                      'success' : user.auditAction == 'Insert'}\\\">\\n        <td>{{user.auditUser}}</td>\\n        <td>{{user.auditAction}}</td>\\n        <td>{{user.auditDate | date:'dd/MM/yyyy (H:mm:ss) a'}}</td>\\n        <td>\\n            <ul>\\n              <li *ngIf=\\\"user.current.dni != user.previous.dni && user.previous.dni\\\">\\n                 Dni: {{user.previous.dni}} --> {{user.current.dni}}\\n              </li>\\n              <li *ngIf=\\\"user.current.dni != user.previous.dni && !user.previous.dni\\\">\\n                Dni: {{user.current.dni}}\\n             </li>\\n              <li *ngIf=\\\"user.current.userName != user.previous.userName && user.previous.userName\\\">\\n                 Usuario: {{user.previous.userName}} --> {{user.current.userName}}\\n              </li>\\n              <li *ngIf=\\\"user.current.userName != user.previous.userName && !user.previous.userName\\\">\\n                Usuario: {{user.current.userName}}\\n             </li>\\n              <li *ngIf=\\\"user.current.phoneNumber != user.previous.phoneNumber && user.previous.phoneNumber\\\">\\n                Telefóno: {{user.previous.phoneNumber}} --> {{user.current.phoneNumber}}\\n             </li>\\n             <li *ngIf=\\\"user.current.phoneNumber != user.previous.phoneNumber && !user.previous.phoneNumber\\\">\\n              Telefóno: {{user.current.phoneNumber}}\\n           </li>\\n            </ul>          \\n          </td>\\n        <!--<td>\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n            <a class=\\\"pr-3\\\" routerLink=\\\"/update/{{user.id}}\\\">\\n              <fa-icon style=\\\"color:gray;\\\" icon=\\\"edit\\\"></fa-icon>\\n            </a>\\n            <a routerLink=\\\"/users\\\" (click)=\\\"openEliminar(user.id,user.dni,user.userName)\\\">\\n              <fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\n            </a>\\n          </div>\\n        </td>-->\\n      </tr>\\n    </tbody>\\n  </table>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UsersAuditService } from '../../_services/audits/users-audit.service';\nimport { UserAudit } from '../../_models/user-audit';\n\n@Component({\n  selector: 'app-audit-users',\n  templateUrl: './audit-users.component.html',\n  styleUrls: ['./audit-users.component.css']\n})\nexport class AuditUsersComponent implements OnInit {\n\n  @Input() userId : number;\n  userAudit : UserAudit;\n\n  constructor(private userAuditService : UsersAuditService) { }\n\n  ngOnInit() {\n    this.userAuditService.fetchModifiedOfUser(this.userId).subscribe(\n      x => this.userAudit = x,\n      error => console.log(error),\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1ZGl0cy9hdWRpdHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  audits works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-audits',\n  templateUrl: './audits.component.html',\n  styleUrls: ['./audits.component.css']\n})\nexport class AuditsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3J5L2NhdGVnb3J5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container mb-1\\\" >\\t\\n\\t<label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Nombre </label>\\n\\t<div class=\\\"d-inline-block pl-1 pr-1\\\">\\n\\t\\t<input (keyup)=\\\"findWhileWrite()\\\" [(ngModel)]=\\\"filters.name\\\"  type=\\\"text\\\" class=\\\"form-control\\\">\\n\\t</div>\\n</div>\\n\\n<a href=\\\"\\\" class=\\\"btn btn-success mb-3\\\" routerLink=\\\"create\\\">\\n\\t<fa-icon icon=\\\"user-plus\\\"></fa-icon>\\n</a>\\n<table class=\\\"table table-hover\\\">\\n\\t<thead>\\n\\t\\t<tr style=\\\"font-weight: bold;\\\">\\n\\t\\t\\t<td>Nombre</td>\\n\\t\\t\\t<td>Descripción</td>\\n\\t\\t\\t<td>Adelanto</td>\\n\\t\\t\\t<td></td>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let cat of categories\\\">\\n\\t\\t\\t<td>{{cat.name}}</td>\\n\\t\\t\\t<td>{{cat.description}}</td>\\n\\t\\t\\t<td>{{cat.advance | number}}</td>\\n\\t\\t\\t<td>\\n\\t\\t\\t\\t<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"pr-3\\\" routerLink=\\\"/category/update/{{cat.id}}\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:gray;\\\" icon=\\\"edit\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/category\\\" (click)=\\\"openEliminar(cat.id,cat.name,cat.description)\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<ngb-pagination (pageChange)=\\\"loadPage($event)\\\" [collectionSize]=\\\"col_size\\\" [pageSize]=\\\"itemsPerPage\\\" [(page)]=\\\"page\\\"\\n aria-label=\\\"Default pagination\\\"></ngb-pagination>\"","import { CategoryService } from './../_services/category.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgbdModalContent } from '../modals/modals.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n\n  filters = { page: 0, name: \"\" }\n  //paginator\n  col_size : number;\n  page = 0;\n  itemsPerPage : number = 10;\n  //\n  categories : any[];\n  error : any;\n  constructor(private categoryService : CategoryService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getAllCategories(this.filters); \n  }\n\n  loadPage(page : number){\n    if (page > 0){\n      this.filters.page = page - 1;\n      this.getAllCategories(this.filters);\n    }\n  }\n\n  getAllCategories(filters : any){\n    this.categoryService.getPaginator(filters).subscribe(\n      result => {\n        this.categories = result.list,\n        this.col_size = result.totalRecords\n      },\n      error => console.log(error)\n    ); \n  }\n\n  //MODALS\n  openEliminar(idCategory: number, name: string, descp: string) {\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = \"Eliminar\";\n    modalRef.componentInstance.Contenido = \"¿Desea eliminar la Categoría : \" + name + \" \" + descp + \"?\";\n    modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n    modalRef.componentInstance.GuardaroEliminarClass = \"btn-danger\";\n    modalRef.componentInstance.MsgClose = \"Cancelar\";\n    modalRef.result.then(() => {\n      this.categoryService.deleteCategory(idCategory).subscribe(\n        data => {\n            this.getAllCategories(this.filters);\n        },\n        error => {\n            console.log(\"error\", error);\n        }\n    );\n    },\n      () => {\n        console.log('Backdrop click');\n    })\n  }\n\n  findWhileWrite(){\n    this.getAllCategories(this.filters);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3J5L2NyZWF0ZS9jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/category\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Crear</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #CategoryForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" required name=\\\"name\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nombre\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Nombre Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.description\\\" required #description=\\\"ngModel\\\" name=\\\"description\\\" type=\\\"text\\\"\\n              placeholder=\\\"Descripción\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && description.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Descripción Incorrecta\\n      </div>\\n\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.advance\\\" required #advance=\\\"ngModel\\\" name=\\\"advance\\\" \\n            type=\\\"text\\\"\\n                placeholder=\\\"Anticipo\\\">\\n        </div>\\n  \\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && advance.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Anticipo Incorrecta\\n        </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\" ><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"CategoryForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n\\n</div>\\n\\n\\n  \\n\\n\\n\\n\\n\"","import { Category } from './../../_models/category';\nimport { CategoryService } from './../../_services/category.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-Category',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateCategoryComponent implements OnInit {\n\n  model = new Category();\n  error = '';\n  responseSuccess : any;\n  \n  constructor(private categoryService : CategoryService) { }\n\n  ngOnInit() {\n    \n  }\n  \n  onSubmit(){\n    this.categoryService.createCategory(this.model).subscribe(\n      x=>this.responseSuccess = x,\n      error => this.error = error.error.notifications\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3J5L21vZGlmeS9tb2RpZnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/category\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Modificar</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #CategoryForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" required name=\\\"name\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nombre\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Nombre Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.description\\\" required #description=\\\"ngModel\\\" name=\\\"description\\\" type=\\\"text\\\"\\n              placeholder=\\\"Descripción\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && description.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Descripción Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.advance\\\" required #advance=\\\"ngModel\\\" name=\\\"advance\\\" \\n            type=\\\"text\\\"\\n                placeholder=\\\"Anticipo\\\">\\n        </div>\\n  \\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && advance.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Anticipo Incorrecta\\n        </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\"><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"CategoryForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n  \\n</div>\"","import { CategoryComponent } from './../category.component';\nimport { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FindByIdCategoryDto } from 'src/app/_models/category';\n\n@Component({\n  selector: 'app-modify',\n  templateUrl: './modify.component.html',\n  styleUrls: ['./modify.component.css']\n})\nexport class ModifyCategoryComponent implements OnInit {\n\n  id : number;\n  model = new FindByIdCategoryDto;\n  error = '';\n\n  responseSuccess : any;\n\n  constructor(private categoryService : CategoryService, private route: ActivatedRoute,\n    private router : Router) { }\n\n  ngOnInit() {\n    //le asigno el id que extraigo de la url\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n\n    this.categoryService.findByIdCategory(this.id).subscribe(\n      x => {this.model.id = x.id, this.model.name = x.name, this.model.description = x.description, this.model.advance = x.advance}\n    );\n  }\n\n\n  onSubmit() {\n    this.model.id = this.id;\n    this.categoryService.updateCategory(this.model).subscribe(\n      x => {\n        this.responseSuccess = x;\n        this.error = '';\n        this.router.navigate(['/category']);\n      },\n        err => this.error = err.error.notifications\n    );\n    //this.router.navigate([CategoryComponent]);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbnMvY3JlYXRlL2NyZWF0ZS1kaXN0cmlidXRpb25zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/distribution\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Crear</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #DistributionForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" required name=\\\"name\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nombre\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Nombre Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.description\\\" required #description=\\\"ngModel\\\" name=\\\"description\\\" type=\\\"text\\\"\\n              placeholder=\\\"Descripción\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && description.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Descripción Incorrecta\\n      </div>\\n      <select class=\\\"form-control\\\" #organismId=\\\"ngModel\\\" name=\\\"organismId\\\" [(ngModel)]=\\\"model.organismId\\\">\\n            <option *ngIf=\\\"selectedOrganismId == model.organismId\\\" [ngValue]=\\\"selectedOrganismId\\\" disabled>\\n                Seleccione un Organismo...\\n            </option>\\n          <option *ngFor=\\\"let org of organism\\\" value=\\\"{{org.id}}\\\">{{org.name}}</option>\\n      </select>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button [disabled]=\\\"!DistributionForm.valid\\\" class=\\\"btn btn-success navarStyle\\\"><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"DistributionForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n  \\n</div>\"","import { OrganismService } from 'src/app/_services/organism.service';\nimport { DistributionService } from './../../_services/distribution.service';\nimport { CreateDistributionDto } from './../../_models/distributions';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-distributions',\n  templateUrl: './create-distributions.component.html',\n  styleUrls: ['./create-distributions.component.css']\n})\nexport class CreateDistributionsComponent implements OnInit {\n\n  model = new CreateDistributionDto();\n  error : any;\n  responseSuccess : any;\n  selectedOrganismId : number;\n\n  organism : any[];\n\n  constructor(private ditributionService : DistributionService, private organismService : OrganismService) { }\n\n  ngOnInit() {\n\n    this.organismService.getAllOrganism().subscribe(\n      x => this.organism = x,\n      error => this.error = error\n    );\n\n  }\n\n  onSubmit(){\n    this.ditributionService.creteDistribution(this.model).subscribe(\n      x=> this.responseSuccess = x,\n      error => this.error = error.error.notifications\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbnMvZGlzdHJpYnV0aW9ucy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container mb-1\\\" >\\n\\t<label class=\\\"d-inline-block pl-1\\\" for=\\\"\\\">Organismos </label>\\n\\t<div class=\\\"d-inline-block pl-1\\\">\\n\\t\\t<select  (change)=\\\"filterList()\\\" [(ngModel)]=\\\"filters.organismId\\\" class=\\\"form-control d-inline-block pl-1\\\">\\n\\t\\t\\t<option value=\\\"\\\"></option>\\n\\t\\t\\t<option *ngFor=\\\"let org of organisms\\\" value=\\\"{{org.id}}\\\">\\n\\t\\t\\t\\t{{org.name}}\\n\\t\\t\\t</option>\\n\\t\\t</select>\\n\\t</div>\\n\\n\\t<label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Name </label>\\n\\t<div class=\\\"d-inline-block pl-1 pr-1\\\">\\n\\t\\t<input (keyup)=\\\"findWhileWrite()\\\" [(ngModel)]=\\\"filters.name\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n\\t</div>\\n</div>\\n\\n<a href=\\\"\\\" class=\\\"btn btn-success mb-3\\\" routerLink=\\\"/distribution/create\\\">\\n\\t<fa-icon icon=\\\"user-plus\\\"></fa-icon>\\n</a>\\n<table class=\\\"table table-hover\\\">\\n\\t<thead>\\n\\t\\t<tr style=\\\"font-weight: bold;\\\">\\n\\t\\t\\t<td>Name</td>\\n\\t\\t\\t<td>Descripción</td>\\n\\t\\t\\t<td>Organismos</td>\\n\\t\\t\\t<td>Usuarios</td>\\n\\t\\t\\t<td></td>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let dist of distribution\\\">\\n\\t\\t\\t<td>{{dist.name}}</td>\\n\\t\\t\\t<td>{{dist.description}}</td>\\n\\t\\t\\t<td><button class=\\\"btn btn-link\\\" [disabled]=\\\"!dist.organism\\\" (click)=\\\"seeOrganism(dist.organism)\\\">ver</button></td>\\n\\t\\t\\t<td><button class=\\\"btn btn-link\\\" [disabled]=\\\"!dist.users\\\" routerLink=\\\"/users/{{dist.id}}\\\">ver</button></td>\\n\\t\\t\\t<td>\\n\\t\\t\\t\\t<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"pr-3\\\" routerLink=\\\"/distribution/update/{{dist.id}}\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:gray;\\\" icon=\\\"edit\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/distribution\\\" (click)=\\\"openEliminar(dist.id,dist.name,dist.description)\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<ngb-pagination (pageChange)=\\\"loadPage($event)\\\" [collectionSize]=\\\"col_size\\\" [pageSize]=\\\"itemsPerPage\\\" [(page)]=\\\"page\\\"\\n aria-label=\\\"Default pagination\\\"></ngb-pagination>\"","import { Component, OnInit } from '@angular/core';\nimport { DistributionService } from '../_services/distribution.service';\nimport { DistributionBaseDto } from '../_models/distributions';\nimport { NgbdModalContent } from '../modals/modals.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { OrganismBaseDto } from '../_models/organism';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { OrganismService } from '../_services/organism.service';\n\n@Component({\n  selector: 'app-distributions',\n  templateUrl: './distributions.component.html',\n  styleUrls: ['./distributions.component.css']\n})\nexport class DistributionsComponent implements OnInit {\n\n  organisms : any[];\n  filters = { page: 0, name : \"\", organismId: \"\" }\n  //paginator\n  col_size : number;\n  page = 0;\n  itemsPerPage : number = 10;\n  //\n  distribution : DistributionBaseDto[];\n  constructor(\n              private distributionService : DistributionService,\n              private modalService: NgbModal,\n              private organismService : OrganismService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      p => { if (p.organismId){ this.filters.organismId = p.organismId; } }\n    );\n    \n    this.organismService.getAllOrganism().subscribe(\n      x =>{\n          this.organisms = x;\n          this.getAllDistributions(this.filters); \n      } \n    );\n    \n  }\n\n  getAllDistributions(filters : any){\n    this.distributionService.getPaginator(filters).subscribe(\n      result => {\n        this.distribution = result.list,\n        this.col_size = result.totalRecords\n      },\n      error => console.log(error)\n    ); \n\n  }\n\n  loadPage(page : any){\n    if (page > 0){\n      this.filters.page = page - 1;\n      this.getAllDistributions(this.filters);\n    }\n  }\n\n  //MODALS\n  openEliminar(distributionId: number, name: string, descp: string) {\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = \"Eliminar\";\n    modalRef.componentInstance.Contenido = \"¿Desea eliminar la distribución : \" + name + \" \" + descp + \"?\";\n    modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n    modalRef.componentInstance.GuardaroEliminarClass = \"btn-danger\";\n    modalRef.componentInstance.MsgClose = \"Cancelar\";\n    modalRef.result.then(() => {\n      this.distributionService.deleteDistribution(distributionId).subscribe(\n        () => {\n          this.getAllDistributions(this.filters);\n        },\n        error => {\n            console.log(\"error\", error);\n        }\n    );\n    },\n      () => {\n        console.log('Backdrop click');\n    })\n  }\n\n  seeOrganism(org : OrganismBaseDto){\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = org.name;\n    modalRef.componentInstance.Contenido = org.name+\" \"+ org.description;\n    modalRef.componentInstance.GuardaroEliminarHidden = true;\n    modalRef.componentInstance.MsgClose = \"Cancelar\";\n    modalRef.result.then(() => {\n    },\n      () => {\n        console.log('Backdrop click');\n    })\n\n  }\n\n  findWhileWrite(){\n    this.getAllDistributions(this.filters);\n  }\n\n  filterList(){\n    this.getAllDistributions(this.filters);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbnMvbW9kaWZ5L21vZGlmeS1kaXN0cmlidXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/distribution\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Modificar</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #CategoryForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" required name=\\\"name\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nombre\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Nombre Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.description\\\" required #description=\\\"ngModel\\\" name=\\\"description\\\" type=\\\"text\\\"\\n              placeholder=\\\"Descripción\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && description.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Descripción Incorrecta\\n      </div>\\n\\n      <select class=\\\"form-control\\\" #organismId=\\\"ngModel\\\" name=\\\"organismId\\\" [(ngModel)]=\\\"model.organismId\\\" required>\\n        <option *ngIf=\\\"selectedOrganismId == model.organismId\\\" [ngValue]=\\\"selectedOrganismId\\\" disabled>\\n            Seleccione un Organismo...\\n        </option>\\n        <option *ngFor=\\\"let org of organism\\\" value=\\\"{{org.id}}\\\">{{org.name}}</option>\\n      </select>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button [disabled]=\\\"!CategoryForm.valid\\\" class=\\\"btn btn-success navarStyle\\\"><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"CategoryForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n  \\n</div>\"","import { UpdateOrganismDto } from 'src/app/_models/organism';\nimport { UpdateDistributionDto } from './../../_models/distributions';\nimport { DistributionsComponent } from './../distributions.component';\nimport { UpdateCategoryDto } from './../../_models/category';\nimport { DistributionService } from './../../_services/distribution.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Route, Router, ActivatedRoute } from '@angular/router';\nimport { OrganismService } from 'src/app/_services/organism.service';\n\n@Component({\n  selector: 'app-modify-distribution',\n  templateUrl: './modify-distribution.component.html',\n  styleUrls: ['./modify-distribution.component.css']\n})\nexport class ModifyDistributionComponent implements OnInit {\n\n  id : number;\n  model = new UpdateDistributionDto();\n  error = '';\n  responseSuccess : any;\n  selectedOrganismId : number;\n\n  organism :  any[];\n\n  constructor(private route : ActivatedRoute,\n    private router : Router,\n    private distributionService : DistributionService, private organismService : OrganismService) { }\n\n  ngOnInit() {\n    //le asigno el id que extraigo de la url\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n\n    this.distributionService.findByIdDistribution(this.id).subscribe(\n      x => {this.model.id = x.id, this.model.name = x.name, this.model.description = x.description}\n    );\n\n    this.organismService.getAllOrganism().subscribe(\n      x => this.organism = x,\n      error => this.error = error\n    );\n  }\n\n  onSubmit() {\n    this.model.id = this.id;\n    this.distributionService.updateDistribution(this.model).subscribe(\n      x => {\n        this.responseSuccess = x;\n        //this.router.navigate(['/distribution']);\n      },\n        error => {\n          this.error = error.error.notifications\n      }      \n    );\n    //this.router.navigate(['/distribution']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuZGl0dXJlcy11c2Vycy9leHBlbmRpdHVyZXMtdXNlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  expenditures-users works!\\n</p>\\n\"","import { ExpenditureUserBaseDto } from './../_models/expenditureUser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { ExpendituresUserService } from '../_services/expenditures-user.service';\n\n@Component({\n  selector: 'app-expenditures-users',\n  templateUrl: './expenditures-users.component.html',\n  styleUrls: ['./expenditures-users.component.css']\n})\nexport class ExpendituresUsersComponent implements OnInit {\n\n  constructor( ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuZGl0dXJlcy9jcmVhdGUvY3JlYXRlLWV4cGVuZGl0dXJlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/expenditure\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Crear</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #CategoryForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" required name=\\\"name\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nombre\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Nombre Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\" ><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"CategoryForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CreateExpenditureDto } from 'src/app/_models/expenditureType';\nimport { ExpenditureService } from 'src/app/_services/expenditure.service';\n\n@Component({\n  selector: 'app-create-expenditure',\n  templateUrl: './create-expenditure.component.html',\n  styleUrls: ['./create-expenditure.component.css']\n})\nexport class CreateExpenditureComponent implements OnInit {\n\n  model = new CreateExpenditureDto();\n  error = '';\n  responseSuccess : any;\n\n  constructor(private expenditureService : ExpenditureService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    this.expenditureService.createExpenditure(this.model).subscribe(\n      x=>{this.responseSuccess = x;\n          this.error = '';\n        },\n      error => this.error = error.error.notifications\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuZGl0dXJlcy9leHBlbmRpdHVyZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a href=\\\"\\\" class=\\\"btn btn-success mb-3\\\" routerLink=\\\"create\\\">\\n\\t<fa-icon icon=\\\"user-plus\\\"></fa-icon>\\n</a>\\n<table class=\\\"table table-hover\\\">\\n\\t<thead>\\n\\t\\t<tr style=\\\"font-weight: bold;\\\">\\n\\t\\t\\t<td>Name</td>\\n\\t\\t\\t<td></td>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let exp of expenditures\\\">\\n\\t\\t\\t<td>{{exp.name}}</td>\\n\\t\\t\\t<td>\\n\\t\\t\\t\\t<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"pr-3\\\" routerLink=\\\"/expenditure/update/{{exp.id}}\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:gray;\\\" icon=\\\"edit\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/expenditure\\\" (click)=\\\"openEliminar(exp.id,exp.name,exp.description)\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<ngb-pagination (pageChange)=\\\"loadPage($event)\\\" [collectionSize]=\\\"col_size\\\" [pageSize]=\\\"itemsPerPage\\\" [(page)]=\\\"page\\\"\\n aria-label=\\\"Default pagination\\\"></ngb-pagination>\\n\"","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { ExpenditureService } from '../_services/expenditure.service';\nimport { ExpenditureTypeBaseDto } from '../_models/expenditureType';\nimport { NgbdModalContent } from '../modals/modals.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-expenditures',\n  templateUrl: './expenditures.component.html',\n  styleUrls: ['./expenditures.component.css']\n})\nexport class ExpendituresComponent implements OnInit {\n\n  page = 0;\n  col_size : number;\n  expenditures : ExpenditureTypeBaseDto[];\n  error : any;\n  itemsPerPage : number = 10;\n  id : number;\n\n  constructor(\n            private expenditureService : ExpenditureService,\n            private modalService : NgbModal) { }\n\n  ngOnInit() {\n    this.getAllExpenditure(this.page); \n  }\n\n  loadPage(page : number){\n    if (page != 0){\n      this.getAllExpenditure(page-1);\n    }\n  }\n\n  getAllExpenditure(page : number){\n    this.expenditureService.getPaginator(page).subscribe(\n      result => {\n        this.expenditures = result.list,\n        this.col_size = result.totalRecords\n      },\n      error => console.log(error)\n    ); \n  }\n\n  openEliminar(expenditureId: number, name: string, descp: string) {\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = \"Eliminar\";\n    modalRef.componentInstance.Contenido = \"¿Desea eliminar el Gasto : \" + name + \" \" + descp + \"?\";\n    modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n    modalRef.componentInstance.GuardaroEliminarClass = \"btn-danger\";\n    modalRef.componentInstance.MsgClose = \"Cancelar\";\n    modalRef.result.then(() => {\n      this.expenditureService.deleteExpenditure(expenditureId).subscribe(\n        data => {\n            this.getAllExpenditure(this.page);\n        },\n        error => {\n            console.log(\"error\", error);\n        }\n    );\n    },\n      () => {\n        console.log('Backdrop click');\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuZGl0dXJlcy91cGRhdGUvdXBkYXRlLWV4cGVuZGl0dXJlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/expenditure\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Crear</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #ExpenditureForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" required name=\\\"name\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nombre\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Nombre Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\" ><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"ExpenditureForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UpdateExpenditureDto } from 'src/app/_models/expenditureType';\nimport { ExpenditureService } from 'src/app/_services/expenditure.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-expenditure',\n  templateUrl: './update-expenditure.component.html',\n  styleUrls: ['./update-expenditure.component.css']\n})\nexport class UpdateExpenditureComponent implements OnInit {\n\n  model = new UpdateExpenditureDto();\n  error = '';\n  id : number;\n\n  responseSuccess : any;\n\n  constructor(private expenditureService : ExpenditureService,\n    private route : ActivatedRoute,\n    private router : Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n\n    this.expenditureService.findByIdExpenditure(this.id).subscribe(\n      x => {this.model.id = x.id, this.model.name = x.name}\n    );\n  }\n\n  onSubmit(){\n    this.expenditureService.updateExpenditure(this.model).subscribe(\n      x=> this.responseSuccess = x,\n      error => this.error = error.error.notifications\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbGlkYXlzL2NyZWF0ZS9jcmVhdGUtaG9saWRheXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/holidays\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Crear</h2>\\n  \\n  <form (ngSubmit)=\\\"onSubmit()\\\" #holidaysForm=\\\"ngForm\\\">\\n      <div class=\\\"form-group mb-1\\\">\\n          <input class=\\\"form-control col-9\\\" [(ngModel)]=\\\"model.description\\\" \\n            #description=\\\"ngModel\\\" required name=\\\"description\\\"\\n            id=\\\"description\\\" type=\\\"text\\\" placeholder=\\\"Descripción\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && description.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Descripción Incorrecta\\n      </div>\\n\\n      <div class=\\\"d-inline-block mb-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                         name=\\\"dp\\\" [displayMonths]=\\\"displayMonths\\\" required [navigation]=\\\"navigation\\\" \\n                         [outsideDays]=\\\"outsideDays\\\" [showWeekNumbers]=\\\"showWeekNumbers\\\"\\n                         ngbDatepicker #d=\\\"ngbDatepicker\\\" [(ngModel)]=\\\"model.date\\\">\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                        <fa-icon icon=\\\"calendar-alt\\\"></fa-icon>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n      </div>\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && PhoneNumber.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Fecha Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\" [disabled]=\\\"!holidaysForm.form.valid\\\"><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors\\\">\\n      <ul *ngFor=\\\"let e of errors\\\">\\n          <li>{{e}}</li>\\n      </ul>\\n  </div>\\n  <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"holidaysForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>\\n</div>\"","import { Notifications } from './../../_models/notifications';\nimport { HolidaysService } from './../../_services/holidays.service';\nimport { CreateHolidayDto } from './../../_models/holiday';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-holidays',\n  templateUrl: './create-holidays.component.html',\n  styleUrls: ['./create-holidays.component.css']\n})\nexport class CreateHolidaysComponent implements OnInit {\n\n  model = new CreateHolidayDto();\n  errors = '';\n\n  constructor(private holidayService : HolidaysService) { }\n\n  ngOnInit() {\n    \n  }\n\n  onSubmit(){\n    let dataSend = this.model.date.day+\"/\"+this.model.date.month+\"/\"+this.model.date.year;\n    this.model.date = dataSend;\n    this.holidayService.createHoliday(this.model).subscribe(\n      x=> console.log(\"Create succesful\"),\n      errors =>this.errors = errors.error.date\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbGlkYXlzL2hvbGlkYXlzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container mb-1\\\" >\\n    <label class=\\\"d-inline-block pl-1\\\" for=\\\"\\\">Fecha </label>\\n    <div class=\\\"d-inline-block pl-1\\\">\\n        <form class=\\\"form-inline\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group\\\">\\n                <input (dateSelect)=\\\"filter()\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                       name=\\\"dp\\\" [displayMonths]=\\\"displayMonths\\\" [navigation]=\\\"navigation\\\" \\n                       [outsideDays]=\\\"outsideDays\\\" [showWeekNumbers]=\\\"showWeekNumbers\\\"\\n                       ngbDatepicker #d=\\\"ngbDatepicker\\\" \\n                       [(ngModel)]=\\\"filters.date\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                      <fa-icon icon=\\\"calendar-alt\\\"></fa-icon>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n    </div>\\n  \\n    <label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Descripción </label>\\n    <div class=\\\"d-inline-block pl-1 pr-1\\\">\\n      <input (keyup)=\\\"filter()\\\" [(ngModel)]=\\\"filters.description\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n  </div>\\n  <a href=\\\"\\\" class=\\\"btn btn-success mb-3\\\" routerLink=\\\"/holidays/create\\\">\\n    <fa-icon icon=\\\"user-plus\\\"></fa-icon>\\n  </a>\\n  <table class=\\\"table table-hover\\\">\\n    <thead>\\n      <tr style=\\\"font-weight: bold;\\\">\\n        <td>Fecha</td>\\n        <td>Descripción</td>  \\n        <td>Acción</td>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let holiday of holidays\\\">\\n        <td>{{holiday.date | date:'dd/MM/yyyy'}}</td>\\n        <td>{{holiday.description}}</td>\\n        <td>\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n            <a class=\\\"pr-3\\\" routerLink=\\\"/holidays/update/{{holiday.id}}\\\">\\n              <fa-icon style=\\\"color:gray;\\\" icon=\\\"edit\\\"></fa-icon>\\n            </a>\\n            <a routerLink=\\\"/holidays\\\" (click)=\\\"openEliminar(holiday)\\\">\\n              <fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\n            </a>\\n          </div>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  \\n  <ngb-pagination (pageChange)=\\\"loadPage($event)\\\"\\n      [collectionSize]=\\\"col_size\\\" \\n      [pageSize]=\\\"itemsPerPage\\\"\\n      [(page)]=\\\"filters.page\\\"\\n      aria-label=\\\"Default pagination\\\"></ngb-pagination>\"","import { HolidayBaseDto } from './../_models/holiday';\nimport { HolidaysService } from './../_services/holidays.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbdModalContent } from '../modals/modals.component';\n\n@Component({\n  selector: 'app-holidays',\n  templateUrl: './holidays.component.html',\n  styleUrls: ['./holidays.component.css']\n})\n\nexport class HolidaysComponent implements OnInit {\n\n  filters = { page : 0, description : \"\", date : null}\n  holidays : HolidayBaseDto[];\n  \n  //paginator\n  col_size : number;\n  itemsPerPage : number = 10;\n    //\n  constructor(\n    private holidayService : HolidaysService,\n    private modalService: NgbModal,\n  ) {}\n\n  ngOnInit() {\n    this.filters.date = \"\";\n    this.getAllHolidays(this.filters);\n  }\n\n  getAllHolidays(filters : any){\n    this.holidayService.getPageHoliday(filters).subscribe(\n      x => {\n            this.holidays = x.list;\n            this.col_size = x.totalRecords;\n            }\n    );\n  }\n\n  filter(){    \n      if (this.filters.date == null \n            || this.filters.date.day === undefined \n            || this.filters.date.month === undefined \n            || this.filters.date.year === undefined)\n            {\n              this.filters.date = \"\";\n              this.getAllHolidays(this.filters);\n              return;\n            }\n    let dataSend = \"\";\n    let auxDate = {\n        day : this.filters.date.day,\n        month : this.filters.date.month,\n        year : this.filters.date.year\n    };\n    dataSend = this.filters.date.month+\"/\"+this.filters.date.day+\"/\"+this.filters.date.year;\n    this.filters.date = dataSend;\n    this.getAllHolidays(this.filters);\n    this.filters.date = auxDate;\n  }\n\n  loadPage(page : any) {\n      if (page > 0) {\n        this.filters.page = page - 1;\n        this.getAllHolidays(this.filters);\n      }\n  }\n\n    //MODALS\n    openEliminar(holiday : HolidayBaseDto) {\n      const modalRef = this.modalService.open(NgbdModalContent);\n      modalRef.componentInstance.Encabezado = \"Eliminar\";\n      let dateToShow = new Date(Date.parse(holiday.date));\n\n      modalRef.componentInstance.Contenido = \"¿Desea eliminar feriado : \" + holiday.description + \" \" + \n      dateToShow.getDate()+\"/\"+ (dateToShow.getMonth() + 1)+\"/\"+ dateToShow.getFullYear()+ \"?\";\n\n      modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n      modalRef.componentInstance.GuardaroEliminarClass = \"btn-danger\";\n      modalRef.componentInstance.MsgClose = \"Cancelar\";\n      modalRef.result.then(() => {\n        this.holidayService.deleteHoliday(holiday.id).subscribe(\n          () => {\n           this.getAllHolidays(this.filters);\n           debugger\n          },\n          error => {\n              console.log(\"error\", error);\n          }\n      );\n      },\n        () => {\n          console.log('Backdrop click');\n      })\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbGlkYXlzL21vZGlmeS9tb2RpZnktaG9saWRheXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/holidays\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Crear</h2>\\n  \\n  <form (ngSubmit)=\\\"onSubmit()\\\" #holidaysForm=\\\"ngForm\\\">\\n      <div class=\\\"form-group mb-1\\\">\\n          <input class=\\\"form-control col-9\\\" [(ngModel)]=\\\"model.description\\\" \\n            #description=\\\"ngModel\\\" required name=\\\"description\\\"\\n            id=\\\"description\\\" type=\\\"text\\\" placeholder=\\\"Descripción\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && description.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Descripción Incorrecta\\n      </div>\\n\\n      <div class=\\\"d-inline-block mb-1\\\">\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\"\\n                         name=\\\"dp\\\" [displayMonths]=\\\"displayMonths\\\" required [navigation]=\\\"navigation\\\" \\n                         [outsideDays]=\\\"outsideDays\\\" [showWeekNumbers]=\\\"showWeekNumbers\\\"\\n                         ngbDatepicker #d=\\\"ngbDatepicker\\\" [(ngModel)]=\\\"model.date\\\">\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                        <fa-icon icon=\\\"calendar-alt\\\"></fa-icon>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n      </div>\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && PhoneNumber.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Fecha Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\" [disabled]=\\\"!holidaysForm.form.valid\\\"><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors\\\">\\n      <ul *ngFor=\\\"let e of errors\\\">\\n          <li>{{e}}</li>\\n      </ul>\\n  </div>\\n  <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"holidaysForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>\\n</div>\\n\"","import { HolidaysComponent } from './../holidays.component';\nimport { UpdateHolidayDto } from './../../_models/holiday';\nimport { HolidaysService } from './../../_services/holidays.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modify-holidays',\n  templateUrl: './modify-holidays.component.html',\n  styleUrls: ['./modify-holidays.component.css']\n})\nexport class ModifyHolidaysComponent implements OnInit {\n\n  id : number;\n  model = new UpdateHolidayDto();\n  date : Date;\n\n  constructor(private route : ActivatedRoute, \n              private holidayService : HolidaysService,\n              private router : Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      x => this.id = x.id\n    );\n\n    this.holidayService.getByIdHoliday(this.id).subscribe(\n      x => {\n              this.model = x;\n              let dateToShow = new Date(Date.parse(x.date));\n              this.model.date = {day : dateToShow.getDate(), month : dateToShow.getMonth()+1, year : dateToShow.getFullYear() }\n            }\n    );\n  }\n\n  onSubmit() {\n    this.model.id = this.id;\n    this.model.date = this.model.date.day+\"/\"+this.model.date.month+\"/\"+this.model.date.year;\n    this.holidayService.updateHoliday(this.model).subscribe(\n      () => {\n        this.router.navigate(['/holidays']);\n      },\n        () => {\n      }      \n    );\n  }\n  \n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { NgbDateParserFormatter, NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n\r\n@Injectable()\r\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('/');\r\n            if (dateParts.length === 1 && this.isNumber(dateParts[0])) {\r\n                return {year: this.toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && this.isNumber(dateParts[0]) && this.isNumber(dateParts[1])) {\r\n                return {year: this.toInteger(dateParts[1]), month: this.toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && this.isNumber(dateParts[0]) && this.isNumber(dateParts[1]) && this.isNumber(dateParts[2])) {\r\n                return {year: this.toInteger(dateParts[2]), month: this.toInteger(dateParts[1]), day: this.toInteger(dateParts[0])};\r\n            }\r\n        }   \r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate: string = \"\"; \r\n        if(date) {\r\n            stringDate += this.isNumber(date.day) ? this.padNumber(date.day) + \"/\" : \"\";\r\n            stringDate += this.isNumber(date.month) ? this.padNumber(date.month) + \"/\" : \"\";\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n\r\n    padNumber(value: number) {\r\n        if (this.isNumber(value)) {\r\n            return `0${value}`.slice(-2);\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n    \r\n    isNumber(value: any): boolean {\r\n        return !isNaN(this.toInteger(value));\r\n    }\r\n    \r\n    toInteger(value: any): number {\r\n        return parseInt(`${value}`, 10);\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n    Home\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  id: number;\n  constructor(private userService: UserService, private route : ActivatedRoute) {}\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n","module.exports = \"\\r\\n.login {\\r\\n    margin : 50px;\\r\\n    background-color: aliceblue;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0NBQy9CIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4ubG9naW4ge1xyXG4gICAgbWFyZ2luIDogNTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGFsaWNlYmx1ZTtcclxufVxyXG4iXX0= */\"","module.exports = \"<nav *ngIf=\\\"!isLogged.value\\\" class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\r\\n        <form class=\\\"form-inline my-2 my-lg-0 ml-auto\\\" (ngSubmit)=\\\"LoginForm.form.valid && onSubmit()\\\" #LoginForm=\\\"ngForm\\\">\\r\\n\\r\\n            <input matInput [(ngModel)]=\\\"model.Usuario\\\" class=\\\"form-control mr-1\\\" type=\\\"text\\\" name=\\\"username\\\" #username=\\\"ngModel\\\"\\r\\n                placeholder=\\\"Usuario\\\">\\r\\n\\r\\n            <div *ngIf=\\\"username.invalid\\\">\\r\\n                Usuario Incorrecto\\r\\n            </div>\\r\\n\\r\\n            <input matInput [(ngModel)]=\\\"model.Password\\\" class=\\\"form-control mr-1\\\" type=\\\"password\\\" placeholder=\\\"Contraseña\\\"\\r\\n                name=\\\"Password\\\" #password=\\\"ngModel\\\">\\r\\n\\r\\n            <div *ngIf=\\\"password.invalid\\\">\\r\\n                Contraseña Incorrecta\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <button mat-button [disabled]=\\\"LoginForm.form.invalid\\\" class=\\\"btn btn-primary mr-1\\\">\\r\\n                <fa-icon icon=\\\"sign-in-alt\\\"></fa-icon>\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success mr-1\\\" href=\\\"\\\" routerLink=\\\"/register\\\">Registrar</button>\\r\\n            <a class=\\\"text-white small\\\" routerLink=\\\"/RecuperarContraseña\\\">olvide mi contraseña</a>\\r\\n            <div *ngIf=\\\"!LoginForm.form.valid\\\">\\r\\n                Formulario Incorrecto\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n<div *ngIf=\\\"!isLogged.value\\\">\\r\\n    <ul style=\\\"margin-top : 15px;\\\" *ngIf=\\\"notifications\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <li *ngFor=\\\"let e of notifications\\\">{{ e.value }}</li>\\r\\n    </ul>\\r\\n</div>\"","import { AuthGuard } from './../_guards/auth.guard';\nimport { User } from './../users/users';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Login } from './login';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { first } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  notifications = '';  \n  \n\n  constructor(private http : HttpClient,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService) { }\n\n    model = new Login();\n    isLogged : Observable<boolean>;\n\n   // convenience getter for easy access to form fields\n   get f() { return this.loginForm.controls; }\n\n   onSubmit() {\n       //this.addUserPassword();\n       this.submitted = true;\n\n       // stop here if form is invalid\n       //if (this.loginForm.invalid) {\n       //  alert(this.loginForm.invalid);\n       //    return;\n       //}\n\n       this.loading = true;\n       this.authenticationService.login(this.model)\n           .pipe(first())\n           .subscribe(\n               data => {\n                   this.router.navigate([this.returnUrl]);\n               },\n               error => {\n                   this.notifications = error.error.notifications;\n                   this.loading = false;\n               });\n   }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n          username: ['', Validators.required],\n          Password: ['', Validators.required]\n        });\n\n        //this.isLogged = this.authenticationService.isLoggedIn;\n        this.isLogged = of(this.authenticationService.ifLogged());\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n}\n","export class Login {\r\n  usuario: string;\r\n  password : string;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZS1wYXNzd29yZC9tYW5hZ2UtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container col-7\\\" style=\\\"padding-left : 30px;\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #RecoveryForm=\\\"ngForm\\\">\\n    <div class=\\\"row\\\" style=\\\"padding : 5px;\\\">\\n          <label style=\\\"padding-top : 7px;padding-right: 3px;\\\" for=\\\"\\\">Email</label>\\n              <input style=\\\"width : 40%;\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\">\\n              <button style=\\\"padding-left : 8px;\\\" type=\\\"submit\\\" class=\\\"btn btn-success navarStyle\\\">Recuperar</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ForgotPassword } from '../_models/passwords';\nimport { RecoveryPasswordService } from '../_services/recovery-password.service';\n\n@Component({\n  selector: 'app-manage-password',\n  templateUrl: './manage-password.component.html',\n  styleUrls: ['./manage-password.component.css']\n})\nexport class ManagePasswordComponent implements OnInit {\n\n  model = new ForgotPassword();\n  constructor(private managePassword : RecoveryPasswordService) { }\n\n  onSubmit(){\n    console.log(this.model);\n    this.managePassword.ForgotPassword(this.model);\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZS1wYXNzd29yZC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container col-4\\\" style=\\\"padding-left : 30px;\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #ResetForm=\\\"ngForm\\\">\\n    <label for=\\\"\\\">Nueva Contraseña</label>\\n    <input class=\\\"form-control\\\" type=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\">\\n    <label for=\\\"\\\">Confirmar Contraseña</label>\\n    <input class=\\\"form-control\\\" type=\\\"password\\\" [(ngModel)]=\\\"model.passwordConfirm\\\" name=\\\"passwordConfirm\\\" #passwordConfirm=\\\"ngModel\\\">\\n    <button style=\\\"padding-top : 6px;\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\">Recuperar</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ResetPassword } from '../../_models/reset-password';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RecoveryPasswordService } from '../../_services/recovery-password.service';\nimport { LoginComponent } from '../../login/login.component';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  model = new ResetPassword();\n  idUserParam : number;\n  codeParam : string;\n\n  constructor(private route: ActivatedRoute, private resetPass : RecoveryPasswordService,\n    private router : Router) { }\n\n  ngOnInit() {\n      //le asigno el id que extraigo de la url\n      this.route.queryParams.subscribe(\n        x => {\n          this.idUserParam = x.userId,\n          this.codeParam = x.code\n        }\n      );\n      \n      console.log(\"user : \"+ this.idUserParam);\n      console.log(\"code : \"+ this.codeParam);\n  }\n\n  onSubmit(){\n    this.model.userId = this.idUserParam;\n    this.model.passwordResetToken = this.codeParam;\n    this.resetPass.ResetPassword(this.model);\n    this.router.navigate([LoginComponent]);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9hZGQtZGVzdGlueS9hZGQtZGVzdGlueS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Nuevo Destino</h4>\\n</div>\\n<form (ngSubmit)=\\\"onSubmit()\\\" #formAddDestiny=\\\"ngForm\\\" >\\n    <div class=\\\"modal-body\\\">\\n        \\n\\n            <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">    \\n                <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n                    <ul *ngFor=\\\"let place of places\\\" class=\\\"navbar-nav mr-auto\\\">\\n                        <li class=\\\"nav-item custom-control custom-radio\\\">\\n                            <input type=\\\"radio\\\" \\n                            id=\\\"customRadio{{place.id}}\\\" \\n                            [(ngModel)]=\\\"model.placeId\\\"\\n                            name=\\\"customRadio\\\" class=\\\"custom-control-input\\\" \\n                            required [value]=\\\"place.id\\\"\\n                            #customRadio=\\\"ngModel\\\" required\\n                            (click)=\\\"toogle(place)\\\"\\n                            [attr.aria-expanded]=\\\"place.checked\\\"\\n                            aria-controls=\\\"place.id\\\"\\n                            >\\n                            <label class=\\\"custom-control-label small\\\" for=\\\"customRadio{{place.id}}\\\">\\n                                {{place.description}}\\n                            </label>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </nav>\\n            \\n            <div class=\\\"container\\\">\\n        \\n                <div class=\\\"custom-control custom-radio form-group col m-0\\\">\\n                    <div class=\\\"row\\\">\\n                    <ul class=\\\"pl-1 container\\\">\\n                        <li *ngFor=\\\"let place of places\\\" style=\\\"list-style:none\\\">\\n                            <div class=\\\"container\\\">\\n        \\n                                <div id=\\\"{{place.id}}\\\" [ngbCollapse]=\\\"!place.checked\\\">\\n                                        <div *ngIf=\\\"countries.length > 0\\\">\\n                                            <label for=\\\"\\\">Pais</label>\\n                                            <select class=\\\"form-control\\\"\\n                                                #countryId=\\\"ngModel\\\" name=\\\"countryId\\\"\\n                                                aria-placeholder=\\\"Selecciones un Pais\\\"\\n                                                [ngClass]=\\\"{'is-invalid' : countryId.invalid && (countryId.dirty || countryId.touched)}\\\"\\n                                                [(ngModel)]=\\\"model.countryId\\\" required>\\n                                                <option [ngValue]=\\\"selectedCountry\\\" disabled>Seleccione un Pais...</option>\\n                                                <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.id\\\">{{country.name}}</option>\\n                                            </select>\\n                                            <div *ngIf=\\\"countryId.invalid && (countryId.dirty || countryId.touched)\\\" class=\\\"alert alert-danger mt-1\\\">\\n                                                <div *ngIf=\\\"countryId.errors.required\\\">\\n                                                    Campo requerido.\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n        \\n                                        <div *ngIf=\\\"countries.length == 0\\\" class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col\\\">\\n                                                <label for=\\\"\\\">Provincia</label>\\n                                                <select class=\\\"form-control\\\"\\n                                                    #provinceId=\\\"ngModel\\\" name=\\\"provinceId\\\"\\n                                                    (change)=\\\"citiesThisProvince(provinceId.value, place)\\\"\\n                                                    [ngClass]=\\\"{'is-invalid' : provinceId.invalid && (provinceId.dirty || provinceId.touched)}\\\"\\n                                                    [(ngModel)]=\\\"model.provinceId\\\" required>\\n                                                    <option *ngIf=\\\"selectedProvince == model.provinceId\\\" [ngValue]=\\\"selectedProvince\\\" disabled>Seleccione una Provincia...</option>\\n                                                    <option *ngFor=\\\"let prov of provinces\\\" [ngValue]=\\\"prov.id\\\">{{prov.name}}</option>\\n                                                </select>\\n                                \\n                                                <div *ngIf=\\\"provinceId.invalid && (provinceId.dirty || provinceId.touched)\\\" class=\\\"alert alert-danger mt-1\\\">\\n                                                    <div *ngIf=\\\"provinceId.errors.required\\\">\\n                                                        Campo requerido.\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>    \\n\\n                                        <div *ngIf=\\\"countries.length == 0\\\" class=\\\"form-group row\\\">\\n                                            <div class=\\\"form-group col\\\">\\n                                                <label for=\\\"\\\">Localidades</label>\\n                                                <select class=\\\"form-control\\\" #cityId=\\\"ngModel\\\" \\n                                                    name=\\\"cityId\\\" [(ngModel)]=\\\"model.cityId\\\"\\n                                                    [ngClass]=\\\"{'is-invalid' : cityId.invalid && (cityId.dirty || cityId.touched)}\\\"\\n                                                    required>\\n                                                    <option *ngIf=\\\"model.cityId == selectedCity\\\" [ngValue]=\\\"selectedCity\\\" disabled>Seleccione una Localidad...</option>\\n                                                    <option *ngFor=\\\"let city of cities\\\" [ngValue]=\\\"city.id\\\">{{city.name}}</option>\\n                                                </select>\\n                                            \\n                                                <div *ngIf=\\\"cityId.invalid && (cityId.dirty || cityId.touched)\\\" class=\\\"alert alert-danger mt-1\\\">\\n                                                    <div *ngIf=\\\"cityId.errors.required\\\">\\n                                                        Campo requerido.\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n        \\n                                        <div class=\\\"form-row\\\">\\n                                                <div class=\\\"form-group col\\\">\\n                                                    <label for=\\\"\\\">Fecha </label>\\n                                                        <div class=\\\"input-group\\\">\\n                                                        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                                                                name=\\\"dp\\\" [displayMonths]=\\\"displayMonths\\\" [navigation]=\\\"navigation\\\" \\n                                                                [outsideDays]=\\\"outsideDays\\\" [showWeekNumbers]=\\\"showWeekNumbers\\\"\\n                                                                [ngClass]=\\\"{'is-invalid' : dp.invalid && (dp.dirty || dp.touched) || (dp.startDate == null && dp.touched && !dp.dirty)}\\\"\\n                                                                ngbDatepicker #d=\\\"ngbDatepicker\\\" #dp=\\\"ngModel\\\" minlength=\\\"8\\\" maxlength=\\\"8\\\"\\n                                                                [(ngModel)]=\\\"model.startDate\\\" required>\\n        \\n                                                            <div class=\\\"input-group-append\\\">\\n                                                                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                                                                    <fa-icon icon=\\\"calendar-alt\\\"></fa-icon>\\n                                                                </button>\\n                                                            </div>\\n                                                        </div>\\n                                    \\n                                                        <div *ngIf=\\\"dp.invalid && (dp.dirty || dp.touched)\\\" class=\\\"alert alert-danger mt-1\\\">\\n                                                            <div *ngIf=\\\"dp.errors.required\\\">\\n                                                                Campo requerido.\\n                                                            </div>\\n                                                            <div *ngIf=\\\"dp.errors.minlength\\\">\\n                                                                Debe contener al menos 8 digítos\\n                                                            </div>\\n                                                            <div *ngIf=\\\"dp.errors.maxlength\\\">\\n                                                                No debe contener mas de 8 digítos\\n                                                            </div>\\n                                                        </div>\\n                                                </div>     \\n                                                \\n                                                <div class=\\\"form-group col\\\">\\n                                                        <label for=\\\"\\\">Cantidad de dias</label>\\n                                                    <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.days\\\" #days=\\\"ngModel\\\"\\n                                                        name=\\\"days\\\" id=\\\"days\\\" minlength=\\\"1\\\" maxlength=\\\"4\\\"\\n                                                        [ngClass]=\\\"{'is-invalid' : days.invalid && (days.dirty || days.touched) || (model.days == null && days.touched)}\\\"\\n                                                        type=\\\"number\\\" placeholder=\\\"Dias\\\" required>\\n                                                        \\n                                                        <div *ngIf=\\\"days.invalid && (days.dirty || days.touched)\\\" class=\\\"alert alert-danger mt-1\\\">\\n\\n                                                            <div *ngIf=\\\"days.errors.required\\\">\\n                                                                Campo requerido.\\n                                                            </div>\\n                                                            <div *ngIf=\\\"days.errors.minlength\\\">\\n                                                                Debe contener al menos un digíto\\n                                                            </div>\\n                                                            <div *ngIf=\\\"days.errors.maxlength\\\">\\n                                                                No debe contener mas de 4 digítos\\n                                                            </div>\\n                                                        </div>            \\n                                                </div>\\n\\n                                                <div class=\\\"form-group col\\\">\\n                                                        <label for=\\\"\\\">Codígo de liquidación</label>\\n                                                        <select class=\\\"form-control\\\" #codeLiquidationId=\\\"ngModel\\\" \\n                                                            name=\\\"codeLiquidationId\\\" [(ngModel)]=\\\"model.codeLiquidationId\\\"\\n                                                            [ngClass]=\\\"{'is-invalid' : codeLiquidationId.invalid && (codeLiquidationId.dirty || codeLiquidationId.touched)}\\\" required>\\n                                                            <option *ngIf=\\\"selectedCodeLiquidation == model.codeLiquidationId\\\" [ngValue]=\\\"selectedCodeLiquidation\\\" disabled>\\n                                                                Seleccione un Codígo de Liquidación...\\n                                                            </option>\\n                                                            <option *ngFor=\\\"let codeLiq of codeLiquidations\\\" value=\\\"{{codeLiq.id}}\\\">{{codeLiq.percentage}}</option>\\n                                                        </select>\\n                                        \\n                                                        <div *ngIf=\\\"codeLiquidationId.invalid && (codeLiquidationId.dirty || codeLiquidationId.touched)\\\" class=\\\"alert alert-danger mt-1\\\">\\n                                                            <div *ngIf=\\\"codeLiquidationId.errors.required\\\">\\n                                                                Campo requerido.\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                \\n                                        </div>\\n            \\n                                        \\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col\\\">\\n                                                    <label for=\\\"\\\">Categoría</label>\\n                                                    <select required class=\\\"form-control\\\" #categoryId=\\\"ngModel\\\"\\n                                                        [ngClass]=\\\"{'is-invalid' : categoryId.invalid && (categoryId.dirty || categoryId.touched) \\n                                                        }\\\"\\n                                                        name=\\\"categoryId\\\" [(ngModel)]=\\\"model.categoryId\\\">\\n                                                        <option *ngIf=\\\"selectedCategory == model.codeLiquidationId\\\" [ngValue]=\\\"selectedCategory\\\" disabled>\\n                                                            Seleccione una Categoría...\\n                                                        </option>\\n                                                        <option *ngFor=\\\"let cat of categories\\\" value=\\\"{{cat.id}}\\\">\\n                                                                {{cat.name}} - {{cat.description}}\\n                                                        </option>\\n                                                    </select>\\n                                    \\n                                                    <div *ngIf=\\\"categoryId.invalid && (categoryId.dirty || categoryId.touched)\\n                                                    \\\" class=\\\"alert alert-danger mt-1\\\">\\n                                                        <div *ngIf=\\\"categoryId.errors.required\\\">\\n                                                            Campo requerido.\\n                                                        </div>\\n                                                    </div>\\n                                            </div>\\n                                        </div>\\n        \\n                                        <div class=\\\"form-row\\\">\\n                                            <label for=\\\"\\\">Transporte</label>\\n                                            <select class=\\\"form-control\\\" #transportId=\\\"ngModel\\\" name=\\\"transportId\\\" [(ngModel)]=\\\"model.transportId\\\"\\n                                            [ngClass]=\\\"{'is-invalid' : transportId.invalid && (transportId.dirty || transportId.touched)}\\\" required>\\n                                            <option *ngIf=\\\"selectedTransport == model.transportId\\\" [ngValue]=\\\"selectedTransport\\\" disabled>\\n                                                    Seleccione un Transporte...\\n                                            </option>\\n                                                <option *ngFor=\\\"let trans of transports\\\" value=\\\"{{trans.id}}\\\">\\n                                                    {{trans.model}} - {{trans.brand}}\\n                                                </option>\\n                                            </select>\\n                                \\n                                            <div *ngIf=\\\"transportId.invalid && (transportId.dirty || transportId.touched)\\\" class=\\\"alert alert-danger mt-1\\\">\\n                                                <div *ngIf=\\\"transportId.errors.required\\\">\\n                                                    Campo requerido.\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                </div>\\n        \\n                            </div>\\n                        </li>  \\n                    </ul>\\n                    </div>    \\n                </div>\\n        \\n            <div *ngIf=\\\"error\\\">\\n                <ul class=\\\"alert alert-danger\\\">\\n                    <li>{{error}}</li>\\n                </ul>\\n            </div>\\n        \\n            </div>     \\n    </div>\\n    \\n    <ngx-spinner \\n    bdColor=\\\"rgba(51,51,51,0.8)\\\"\\n    size=\\\"medium\\\"\\n    color=\\\"#fff\\\"\\n    type=\\\"ball-scale-multiple\\\">\\n    <p style=\\\"font-size: 20px; color: white\\\">Cargando...</p>>\\n    </ngx-spinner>\\n\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" [hidden]=\\\"buttonDisbaled\\\" [disabled]=\\\"!formAddDestiny.valid\\\" class=\\\"btn btn-success\\\">Agregar</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"activeModal.dismiss('Close click')\\\">Cerrar</button>\\n    </div>   \\n\\n</form> \\n\\n\\n\\n\\n\\n\"","import { CodeLiquidationService } from './../../_services/code-liquidation.service';\nimport { AllCountryDto } from './../../_models/country';\nimport { DestinyService } from 'src/app/_services/destiny.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AllPlaceDto } from 'src/app/_models/place';\nimport { PlaceService } from 'src/app/_services/place.service';\nimport { AllProvinceDto } from 'src/app/_models/province';\nimport { AllCitiesDto } from 'src/app/_models/city';\nimport { CityService } from 'src/app/_services/city.service';\nimport { ProvinceService } from 'src/app/_services/province.service';\nimport { DestinyDto } from 'src/app/_models/destiny';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { AllCategoryDto } from 'src/app/_models/category';\nimport { TransportService } from 'src/app/_services/transport.service';\nimport { AllTransportDto } from 'src/app/_models/transport';\nimport { CountryService } from 'src/app/_services/country.service';\nimport { codeLiquidationBaseDto } from 'src/app/_models/codeLiquidation';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-add-destiny',\n  templateUrl: './add-destiny.component.html',\n  styleUrls: ['./add-destiny.component.css']\n})\nexport class AddDestinyComponent implements OnInit {\n\n  places : AllPlaceDto[] = [];\n  transports : AllTransportDto[] = [];\n  provinceMock : AllProvinceDto[] =[];\n  provinces  : AllProvinceDto[] = [];\n  countries : AllCountryDto[] = [];\n  countriesMock : AllCountryDto[] = [];\n  cities     : AllCitiesDto[] = [];\n  citiesMock : AllCitiesDto[] = [];\n  model = new DestinyDto;\n  codeLiquidations : codeLiquidationBaseDto[] = [];\n  codeLiquidationsMock : codeLiquidationBaseDto[] = [];\n  error : string;\n  @Input() destiniesAdded : DestinyDto[] = [];\n  isCollapsed = false;\n  categories : AllCategoryDto[];\n  buttonDisbaled = true;\n  selectedCountry : number;\n  selectedProvince : number;\n  selectedCity : number;\n  selectedCodeLiquidation : number;\n  selectedCategory : number;\n  selectedTransport : number;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private placeService : PlaceService,\n    private provinceService : ProvinceService,\n    private cityService : CityService,\n    private destinyService : DestinyService,\n    private categoryService : CategoryService,\n    private transportService : TransportService,\n    private countryservice : CountryService,\n    private codeLiquidationService : CodeLiquidationService,\n    private spinner: NgxSpinnerService\n    ) { }\n\n  ngOnInit() {\n    this.selectedCountry = this.model.countryId;\n    this.selectedProvince = this.model.provinceId;\n    this.AllPlace();\n    this.AllProvince();\n    this.allCategories();\n    this.allTransports();\n    this.allCountries();\n    this.allCodeLiquidation();\n  }\n\n  allTransports(){\n    this.transportService.getAll().subscribe(\n      x => this.transports = x\n    );\n  }\n\n  allCodeLiquidation(){\n    this.codeLiquidationService.getAll().subscribe(\n      x => {\n            this.codeLiquidationsMock = x;\n            this.codeLiquidations = x;\n           }\n    );\n  }\n\n  allCountries(){\n    this.countryservice.getAllCountries().subscribe(\n      x => {\n            this.countriesMock = x;\n            this.countries = x;\n            }\n    );\n  }\n\n  allCategories(){\n    this.categoryService.getallCategories().subscribe(\n      x => this.categories = x\n      );\n  }\n\n  AllProvince(){\n    this.provinceService.getAll().subscribe(\n      x => {\n            this.provinceMock = x;\n            this.provinces = x;\n          }\n    );\n  }\n\n  changeCity(e : any){\n    console.log(e);\n  }\n\n  sendDataToComponent(model : DestinyDto[]){\n    this.destinyService.sendMessage(model);\n    this.activeModal.close(null);\n    \n  }\n\n  AllPlace(){\n    this.placeService.getAll().subscribe(\n      x => this.places = x.sort((a,b) => a.order - b.order)\n          \n    );\n  }\n\n  onChange(e : any){\n    console.log(e);\n  }\n  \n  onSubmit(){\n    let exist;\n    if (!this.model.countryId){\n      if (this.destiniesAdded != null){\n        exist = this.destiniesAdded.find( \n          x=> x.cityId == this.model.cityId && x.provinceId == this.model.provinceId\n          );\n      }\n      \n        if (exist){\n          this.error = \"Provincia y Localidad existentes\";\n          return\n        }\n    }\n\n    this.error = \"\";\n    let newDestiny = new DestinyDto;\n    newDestiny.placeId = this.model.placeId;\n    newDestiny.cityId = this.model.cityId;\n    newDestiny.countryId = this.model.countryId;\n    newDestiny.provinceId = this.model.provinceId;\n    newDestiny.days = this.model.days;\n    newDestiny.categoryId = this.model.categoryId;\n    newDestiny.codeLiquidationId = this.model.codeLiquidationId;\n    newDestiny.startDate = this.model.startDate;\n    newDestiny.transportId = this.model.transportId;\n    \n    this.destiniesAdded = this.destiniesAdded || [];\n    this.destiniesAdded.push(newDestiny);\n    this.sendDataToComponent(this.destiniesAdded);\n    \n  }\n  \n  toogle(place : AllPlaceDto){\n    this.buttonDisbaled = false;\n    this.model = new DestinyDto();\n    this.model.placeId = place.id;\n\n    place.checked = true;\n    this.places.forEach(x =>\n          {\n            if (x.id != place.id){\n              x.checked = !place.checked;\n            }\n          } \n      );\n      \n      this.countries = this.countriesMock;\n      if ( this.countries[0].placeId != place.id ){\n          this.provinces = this.provinceMock.filter(x => x.placeId == place.id);\n          let firstProvince = this.provinces.sort()[0];\n          if (this.provinces.length == 1 ){\n            this.model.provinceId = firstProvince.id;\n          }else{\n            this.model.provinceId = this.selectedProvince;\n          }\n          \n          this.citiesProvince(firstProvince.id);\n          this.countries = [];\n      }else{\n        //this.model.countryId = this.countries[0].id;\n      }\n      \n      this.codeLiquidations = this.codeLiquidationsMock.filter(x=> x.placeId == place.id).sort(x=> x.percentage);\n      this.cities = [];\n  }\n\n  changeCityId(cityId : number){\n    this.model.cityId = cityId;\n  }\n\n  citiesThisProvince(provinceId : any, place : AllPlaceDto){\n    console.log(this.provinces.length+\" \"+this.countries.length);\n    if(this.provinces.length == 0 && this.countries.length > 0){\n      //si hay paises y provincias => va a viajar fuera del pais\n      this.model.cityId = null;\n      this.model.provinceId = null;\n    }\n    else if(this.provinces.length == 1 && this.countries.length == 0){\n        //si hay paises y provincias => va a viajar dentro del pais\n        //la persona va a viajar dentro de corrientes\n          if (this.citiesMock.length == 0){\n              this.citiesProvince(provinceId); \n          }\n          this.cities = this.citiesMock; \n          this.model.cityId = this.cities[0].id;\n          this.model.provinceId = provinceId;\n          //la propiedad citiesMock contiene todas las localidades de Corrientes Solamente.\n    }\n    else if (this.provinces.length > 1 && this.countries.length == 0 ){\n      //la persona va a viajar fuera de corrientes pero dentro del pais\n      this.citiesProvince(provinceId);\n      this.model.countryId = null;\n    }\n  }\n\n  citiesProvince(provinceId : number){\n    this.spinner.show();\n    this.cityService.GetByIdCity(provinceId).subscribe(\n      x => {\n        this.cities = x;\n        if (this.provinces.length != 1){\n          this.model.cityId = this.selectedCity;\n        }else{\n          this.model.cityId = this.cities[0].id;\n        } \n        this.spinner.hide();\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9hZGQtbmV3LWV4cGVuZGl0dXJlL2FkZC1uZXctZXhwZW5kaXR1cmUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"    \\n<form (ngSubmit)=\\\"addNewConcept()\\\" #addNewExpForm=\\\"ngForm\\\" action=\\\"\\\">\\n\\n    <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Nuevo</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <label for=\\\"\\\">Gastos</label>\\n                        <select required class=\\\"form-control\\\" #expenditureId=\\\"ngModel\\\" name=\\\"expenditureId\\\" \\n                                [(ngModel)]=\\\"modelExp.id\\\" required>\\n                                <option *ngIf=\\\"selectedExpenditure == modelExp.id\\\" [ngValue]=\\\"selectedExpenditure\\\" disabled>\\n                                        Seleccione un Transporte...\\n                                </option>\\n                                <option *ngFor=\\\"let exp of expendituresCbox\\\" value=\\\"{{exp.id}}\\\">{{exp.name}}</option>\\n                        </select>\\n\\n                        <div *ngIf=\\\"expenditureId.invalid && (expenditureId.dirty || expenditureId.touched)\\\" \\n                            class=\\\"alert alert-danger mt-1\\\">\\n                            <div *ngIf=\\\"expenditureId.errors.required\\\">\\n                                Campo requerido.\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <label for=\\\"\\\">Importe</label>\\n                        <input required [(ngModel)]=\\\"modelExp.amount\\\" #amount=\\\"ngModel\\\" \\n                        name=\\\"amount\\\" class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Costo\\\"\\n                        value=\\\"{{modelExp.amount}}\\\" required minlength=\\\"1\\\" maxlength=\\\"8\\\">\\n\\n                        <div *ngIf=\\\"amount.invalid && (amount.dirty || amount.touched)\\\"\\n                            class=\\\"alert alert-danger mt-1\\\">\\n                            <div *ngIf=\\\"amount.errors.required\\\">\\n                                Campo requerido.\\n                            </div>\\n                            <div *ngIf=\\\"amount.errors.minlength\\\">\\n                                Debe contener al menos un digíto\\n                            </div>\\n                            <div *ngIf=\\\"amount.errors.maxlength\\\">\\n                               No debe contener mas de 8 digítos\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                            <label for=\\\"\\\">Descripción</label>\\n                            <textarea required [(ngModel)]=\\\"modelExp.description\\\" #description=\\\"ngModel\\\" \\n                            placeholder=\\\"Descripción\\\" value=\\\"{{modelExp.description}}\\\"\\n                            name=\\\"description\\\" class=\\\"form-control\\\" type=\\\"text\\\"></textarea>\\n\\n                            <div *ngIf=\\\"description.invalid && (description.dirty || description.touched)\\\"\\n                                class=\\\"alert alert-danger mt-1\\\">\\n                                <div *ngIf=\\\"description.errors.required\\\">\\n                                    Campo requerido.\\n                                </div>\\n                                <div *ngIf=\\\"description.errors.minlength\\\">\\n                                    Debe contener al menos un digíto\\n                                </div>\\n                                <div *ngIf=\\\"description.errors.maxlength\\\">\\n                                   No debe contener mas de 4 digítos\\n                                </div>\\n                            </div>\\n\\n                    </div>\\n                </div>\\n            \\n            <div *ngIf=\\\"msgExist\\\" class=\\\"alert alert-danger\\\">\\n                {{msgExist}}\\n            </div>\\n        </div>\\n    </div>\\n      \\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!addNewExpForm.valid\\\">Agregar</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"activeModal.dismiss('Close click')\\\">Cerrar</button>\\n      </div>\\n\\n</form>\"","import { AllExpenditureDto } from '../../_models/expenditureType';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Expenditure } from 'src/app/_models/solicitationSubsidy';\nimport { ExpenditureService } from 'src/app/_services/expenditure.service';\n\n@Component({\n  selector: 'app-add-new-expenditure',\n  templateUrl: './add-new-expenditure.component.html',\n  styleUrls: ['./add-new-expenditure.component.css']\n})\nexport class AddNewExpenditureComponent implements OnInit {\n\n  modelExp = new Expenditure();\n  @Input() expendituresAdded : Expenditure[] = [];\n  expendituresCbox : AllExpenditureDto[] = [];\n  msgExist : string;\n  selectedExpenditure : number;\n\n  constructor(\n          public activeModal: NgbActiveModal,\n          private expenditureService : ExpenditureService) { }\n\n  ngOnInit() {\n    this.allExpenditure();\n  }\n\n  addNewConcept(){\n    let exist;\n    if (this.expendituresAdded != null){\n      exist = this.expendituresAdded.find(x => x.expenditureTypeId == this.modelExp.id);\n    }\n    if (exist){\n        this.msgExist = \"Tipo de gasto ya existente\";\n        return;\n    }\n    \n    this.msgExist = \"\";\n    let newExp = new Expenditure();\n    newExp.id = this.modelExp.id;\n    newExp.description = this.modelExp.description;\n    newExp.amount = this.modelExp.amount;\n    newExp.expenditureTypeId = this.modelExp.id;\n    this.expendituresAdded = this.expendituresAdded || [];\n    this.expendituresAdded.push(newExp);\n    this.sendData();\n  }\n\n  sendData(){\n    this.expenditureService.sendMessage(this.expendituresAdded);\n    this.activeModal.close(null);\n  }\n\n  allExpenditure(){\n    this.expenditureService.getAll().subscribe(\n      x => this.expendituresCbox = x\n    );\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9hZGQtc3VwZXJ2aXNvci9hZGQtc3VwZXJ2aXNvci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col card ml-1\\\">\\n            <ul *ngFor=\\\"let user of usersSelected\\\">\\n                <li>{{user.userName}}</li>\\n            </ul>\\n        </div>\\n        <div class=\\\"col-2 card ml-1\\\">\\n            <label for=\\\"\\\">Asignar a</label>\\n        </div>\\n        <div class=\\\"col card ml-1 mr-1\\\" >\\n            <ul *ngFor=\\\"let s of supervisors\\\">\\n                <div class=\\\"form-check\\\">\\n                    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\"\\n                    (click)=\\\"checkSupervisor(s)\\\" id=\\\"{{s.id}}\\\">\\n                </div>\\n                <li class=\\\"ml-3\\\">{{s.userName}}</li>\\n            </ul>\\n        </div>\\n    </div>\\n\\n  </div>\\n  \\n  <div class=\\\"alert alert-danger\\\">\\n      <ul>{{ msj }}</ul>\\n  </div>\\n  \\n  <div class=\\\"modal-footer\\\">\\n      <button type=\\\"submit\\\" (click)=\\\"save()\\\" class=\\\"btn btn-success\\\">Agregar</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"activeModal.dismiss('Close click')\\\">Cerrar</button>\\n  </div>   \\n\\n\\n\"","import { AspNetUsersRolesService } from './../../_services/asp-net-users-roles.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { UserRoles } from 'src/app/_models/userRoles';\nimport { SupervisorUserAgentService } from 'src/app/_services/supervisor-user-agent.service';\n\n@Component({\n  selector: 'app-add-supervisor',\n  templateUrl: './add-supervisor.component.html',\n  styleUrls: ['./add-supervisor.component.css']\n})\nexport class AddSupervisorComponent implements OnInit {\n\n  @Input() usersSelected : User[];\n  @Input() allUsers : User[];\n  supervisors : User[] = [];\n  supervisorSelected : User[] = [];\n  msj = '';\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private aspNetRolesService : AspNetUsersRolesService,\n    private supervisorUserAgentService : SupervisorUserAgentService\n    ) { }\n\n  ngOnInit() {\n    this.aspNetRolesService.getAllUsersRoles().subscribe(\n      rolUser => {\n        let userSupervisor : User;\n        rolUser.forEach(\n          user =>{\n            userSupervisor = this.allUsers.find(x => x.id == user.userId);\n            if (userSupervisor != undefined){\n              this.supervisors.push(userSupervisor);\n            } \n            \n          }); \n\n      }\n    );\n  }\n\n  checkSupervisor(supervisor : User){ \n    if (this.supervisorSelected.find(x => x.id == supervisor.id)){\n      const indexDeleteAll = this.supervisorSelected.indexOf(supervisor, 0);\n      if (indexDeleteAll > -1) {\n        this.supervisorSelected.splice(indexDeleteAll, 1);\n      }\n    }else{\n        this.supervisorSelected.push(supervisor);\n    }\n  }\n\n  save(){\n    if (this.supervisorSelected.length == 0){\n      this.msj = 'No Selecciono ningún Supervisor';\n      return;\n    }\n    this.supervisorUserAgentService.create(this.supervisorSelected).subscribe(\n      x => {\n        this.msj = '';\n        console.log(x);\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9saXN0LW5vdGlmaWNhdGlvbnMvbGlzdC1ub3RpZmljYXRpb25zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">Notificaciones nuevas</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <div *ngFor=\\\"let j of Contenido\\\" class=\\\"small alert\\\" [ngClass]=\\\"{'alert-secondary': j.read,'alert-success' : !j.read}\\\">\\n    <div class=\\\"row h-10\\\">    \\n          <h6 class=\\\"mr-auto pl-1\\\">Titulo : {{j.tittle}}\\n              <a class=\\\"pl-3\\\" (click)=\\\"delete(j.id)\\\">\\n                  <fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\n              </a>\\n          </h6>\\n\\n          <button id=\\\"collapseExample{{j.id}}\\\" type=\\\"button\\\" class=\\\"btn btn-default mr-2 small\\\" (click)=\\\"onChange(j)\\\"\\n                [attr.aria-expanded]=\\\"j.colapse\\\" aria-controls=\\\"collapseExample\\\">\\n                <fa-icon icon=\\\"{{verOcultar}}\\\"></fa-icon>\\n          </button>\\n      </div>\\n      <div id=\\\"{{j.id}}\\\" class=\\\"text-justify pt-3 pb-3\\\" [ngbCollapse]=\\\"!j.colapse\\\">\\n          <textarea class=\\\"form-control text-left\\\" rows=\\\"5\\\" readonly>{{j.textData}}</textarea>\\n      </div>\\n  </div>\\n\\n  <ngb-pagination (pageChange)=\\\"loadPage($event)\\\" [collectionSize]=\\\"col_size\\\" [pageSize]=\\\"itemsPerPage\\\" [(page)]=\\\"page\\\"\\naria-label=\\\"Default pagination\\\"></ngb-pagination>\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" hidden=\\\"{{ButtonHidden}}\\\" class=\\\"btn btn-primary\\\" (click)=\\\"activeModal.dismiss('Close click')\\\">Cerrar</button>\\n</div>\"","import { NotificationsService } from './../../_services/notifications.service';\nimport { Component, Input } from '@angular/core';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Notifications } from '../../_models/notifications';\nimport { NgbdModalContent } from '../modals.component';\n\n@Component({\n  selector: 'app-list-notifications',\n  templateUrl: './list-notifications.component.html',\n  styleUrls: ['./list-notifications.component.css']\n})\nexport class ListNotificationsComponent {\n\n  Contenido: Notifications[];\n  @Input() Encabezado;\n  @Input() button;\n  @Input() ButtonHidden;\n  col_size: number;\n  itemsPerPage: number = 5;\n  page = 0;\n  verOcultar: string = 'angle-down';\n  notificationRidden = new Notifications();\n  colapseOrNo: boolean;\n  public isCollapsed = true;\n\n  constructor(public activeModal: NgbActiveModal, \n    private notifService: NotificationsService,\n    private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getAllNotifications(this.page);\n  }\n\n  loadPage(page: number) {\n    if (page != 0) {\n      this.getAllNotifications(page - 1);\n    }\n  }\n\n  getAllNotifications(page: number): void {\n    this.notifService.getPaginator(page).subscribe(result => {\n      this.Contenido = result.list,\n        this.col_size = result.totalRecords\n    }\n    )\n  }\n\n  delete(id : number){\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = \"Eliminar\";\n    modalRef.componentInstance.Contenido = \"¿Desea Eliminar?\";\n    modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n    modalRef.componentInstance.GuardaroEliminarClass = \"btn-danger\";\n    modalRef.componentInstance.MsgClose = \"Cancelar\";\n    modalRef.componentInstance.MsgCloseClass = \"btn-default\"\n    modalRef.result.then(() => {\n          this.notifService.delete(id).subscribe(\n            ()=>{\n              this.getAllNotifications(this.page)\n            }\n            ,\n            error => {\n                console.log(\"error\", error);\n            }\n          );\n          },\n          () => {\n            console.log('Backdrop click');\n          })\n  }\n\n  ocultar(event: boolean) {\n    this.isCollapsed = event;\n  }\n\n  mostrar(event: boolean) {\n    this.isCollapsed = !event\n  }\n\n  onChange(notification: any) {\n    console.log(notification);\n    //this.isCollapsed = !this.isCollapsed;\n\n    if (this.verOcultar == 'angle-down') {\n      this.verOcultar = 'angle-up';\n    } else {\n      this.verOcultar = 'angle-down';\n    }\n\n    //si no esta leido que vaya a la base de datos y actualize\n    //colapsable abierto\n    if (notification.read == false) {\n\n      this.notifService.notificationRidden(notification).subscribe(\n        //x => this.getAllNotifications(this.page),\n        () => {\n            notification.colapse = !notification.colapse,\n            notification.read = !notification.colapse;\n        },\n        error => {\n          console.log(\"error\", error);\n        }\n      );\n    } else {\n      //cerramos el colapsable\n      notification.colapse = !notification.colapse;\n    }\n  }\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">{{Encabezado}}</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>{{Contenido}}</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn {{GuardaroEliminarClass}}\\\" hidden=\\\"{{GuardaroEliminarHidden}}\\\" (click)=\\\"activeModal.close('Close click')\\\">{{GuardaroEliminar}}</button>\\n    <button type=\\\"button\\\" class=\\\"btn {{MsgCloseClass}}\\\" hidden=\\\"{{MsgCloseHidden}}\\\" (click)=\\\"activeModal.dismiss('Close click')\\\">{{MsgClose}}</button>\\n</div>\\n    \\n\\n\"","import { Component, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'ngbd-modal-content',\n  templateUrl: 'modals.component.html'\n})\nexport class NgbdModalContent {\n  @Input() Contenido;\n  @Input() Encabezado;\n  @Input() GuardaroEliminar;\n  @Input() MsgClose;\n  @Input() GuardaroEliminarClass;\n  @Input() MsgCloseClass;\n  @Input() MsgCloseHidden;\n  @Input() GuardaroEliminarHidden;\n\n  constructor(public activeModal: NgbActiveModal) {}\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmFyL25hdmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nav *ngIf=\\\"isLogged | async\\\" class=\\\"navbar navbar-expand-lg navbar-dark bg-dark mb-3 font-weight-light\\\">\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\r\\n\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      \\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a routerLink=\\\"/\\\" class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\">\\r\\n          <fa-icon icon=\\\"home\\\"></fa-icon> Home\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a routerLink=\\\"/users\\\" class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\">\\r\\n          <fa-icon icon=\\\"users\\\"></fa-icon> Usuarios\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <!--<a style=\\\"color: white;\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>-->\\r\\n        <a class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['/roles']\\\">\\r\\n          <fa-icon icon=\\\"key\\\"></fa-icon> Roles\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <!--<a style=\\\"color: white;\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>-->\\r\\n        <a class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['/category']\\\">\\r\\n          <fa-icon icon=\\\"tags\\\"></fa-icon> Categorías\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <!--<a style=\\\"color: white;\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>-->\\r\\n        <a class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['/distribution']\\\">\\r\\n          <fa-icon icon=\\\"building\\\"></fa-icon> Reparticiones\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <!--<a style=\\\"color: white;\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>-->\\r\\n          <a class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['/transport']\\\">\\r\\n            <fa-icon icon=\\\"car\\\"></fa-icon> Transporte\\r\\n          </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <!--<a style=\\\"color: white;\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>-->\\r\\n        <a class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['/expenditure']\\\">\\r\\n          <fa-icon icon=\\\"money-check-alt\\\"></fa-icon> Gastos\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <!--<a style=\\\"color: white;\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>-->\\r\\n        <a class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['/organism']\\\">\\r\\n          <fa-icon icon=\\\"sitemap\\\"></fa-icon> Organismos\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a routerLink=\\\"/SolicitationSubsidy\\\" class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\">\\r\\n          <fa-icon icon=\\\"home\\\"></fa-icon>Solicitar Viático\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n          <a routerLink=\\\"/holidays\\\" class=\\\"nav-item text-white nav-link\\\" href=\\\"#\\\">\\r\\n            <fa-icon icon=\\\"home\\\"></fa-icon>Feriados\\r\\n          </a>\\r\\n        </li>\\r\\n\\r\\n    </ul>\\r\\n\\r\\n    <ul class=\\\"navbar-nav ml-auto small\\\">\\r\\n      <li class=\\\"nav-item dropdown\\\">\\r\\n        <div class=\\\"d-inline-block pull-right\\\" ngbDropdown #myDrop=\\\"ngbDropdown\\\">\\r\\n          <button *ngIf=\\\"cantNotif == 0\\\" class=\\\"btn btn-light mr-2 small\\\" id=\\\"dropdownManual\\\" ngbDropdownAnchor (focus)=\\\"myDrop.open()\\\">\\r\\n            <fa-icon icon=\\\"bell\\\"></fa-icon>\\r\\n          </button>\\r\\n          <button *ngIf=\\\"cantNotif != 0\\\" class=\\\"btn btn-light mr-2 small\\\" id=\\\"dropdownManual\\\" ngbDropdownAnchor (focus)=\\\"myDrop.open()\\\">\\r\\n              <fa-icon style=\\\"color:red;\\\" icon=\\\"bell\\\"></fa-icon>\\r\\n              <span  style=\\\"background-color:red;\\\" class=\\\"badge badge-primary badge-pill\\\">{{notification.length}}</span>\\r\\n          </button>\\r\\n          <div ngbDropdownMenu aria-labelledby=\\\"dropdownManual\\\">\\r\\n              <div class=\\\"p-2\\\">\\r\\n                <ul *ngIf=\\\"cantNotif == 0\\\" class=\\\"dropdown-item text-center small alert alert-primary h-3\\\">\\r\\n                      No hay notificaciones nuevas\\r\\n                </ul>\\r\\n                <button *ngFor=\\\"let j of notification\\\" class=\\\"dropdown-item small alert\\\" [ngClass]=\\\"{'alert-light h-0 p-1 mb-1': j.read,'alert-success h-3 p-1 mb-1' : !j.read}\\\" (click)=\\\"seeThisNotification(j)\\\">\\r\\n                    {{j.tittle}}\\r\\n                </button>\\r\\n                <button (click)=\\\"seeAllNotification()\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\">\\r\\n                  <p class=\\\"small\\\">ver todos</p>\\r\\n                </button>\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      \\r\\n      <li class=\\\"nav-item dropdown small\\\">\\r\\n          <div class=\\\"d-inline-block pull-right\\\" ngbDropdown #myDropCloseSession=\\\"ngbDropdown\\\">\\r\\n            <button class=\\\"btn btn-outline-light mr-2 small\\\" id=\\\"dropdownManual\\\" ngbDropdownAnchor (focus)=\\\"myDropCloseSession.open()\\\">\\r\\n             <!-- <fa-icon icon=\\\"user\\\"></fa-icon>-->\\r\\n              <img class=\\\"rounded-circle\\\" src=\\\"{{urlImage}}\\\" alt=\\\"\\\">\\r\\n            </button>\\r\\n            <div ngbDropdownMenu aria-labelledby=\\\"dropdownManual\\\">\\r\\n                <button routerLink=\\\"/settingUser/{{idUser}}\\\" class=\\\"dropdown-item small\\\"><fa-icon icon=\\\"address-card\\\"></fa-icon> Mi Perfil</button>\\r\\n              <button (click)=\\\"logout()\\\" class=\\\"dropdown-item small\\\"><fa-icon icon=\\\"sign-out-alt\\\"></fa-icon> Cerrar Sesión</button>\\r\\n            </div>\\r\\n          </div>\\r\\n      </li>      \\r\\n\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<router-outlet class=\\\"small\\\"></router-outlet>\\r\\n\"","import { AuthenticationService } from './../_services/authentication.service';\nimport { Observable } from 'rxjs';\nimport { Notifications } from './../_models/notifications';\nimport { NotificationsService } from './../_services/notifications.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { MessBetweenCompService } from '../_services/mess-between-comp.service';\nimport { NgbdModalContent } from '../modals/modals.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ListNotificationsComponent } from '../modals/list-notifications/list-notifications.component';\n\n@Component({\n  selector: 'app-navar',\n  templateUrl: './navar.component.html',\n  styleUrls: ['./navar.component.css']\n})\nexport class NavarComponent implements OnInit {\n\n  constructor(private notificaionServices : NotificationsService, \n              private authService : AuthenticationService,\n              private messaBetweenComp : MessBetweenCompService,\n              private modalService: NgbModal ) { }\n\n  notification : Notifications[];\n  isLogged : Observable<boolean>;\n  idUser : number;\n  cantNotif : number = 0;\n  @Input() urlImage : string;\n\n\n  retriveNotifications(){\n    this.notificaionServices.getAllNotifications().subscribe(\n      x => {\n      this.notification = x,\n      this.cantNotif = this.notification.length\n      }, () => {\n        console.log('');\n      }\n      );\n  }\n\n  ngOnInit() {\n    if (this.isLogged){\n      this.retriveNotifications();\n    }\n        \n    this.idUser = this.authService.userId('id');\n    \n    this.isLogged = this.authService.isLoggedIn;\n    \n    this.messaBetweenComp.getMessage().subscribe( \n      () => this.urlImage = this.authService.urlFile(this.idUser, 25, 25) + \"r=\" + (Math.random() * 100) + 1 \n    );\n    \n    if (!this.urlImage){\n      this.urlImage = this.authService.urlFile(this.idUser, 25,25)+ \"r=\" + (Math.random() * 100) + 1;\n    }\n    \n  }\n\n  logout(){\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = \"Cerrar Sesión\";\n    modalRef.componentInstance.Contenido = \"¿Desea salir de la aplicación?\";\n    modalRef.componentInstance.GuardaroEliminar = \"Salir\";\n    modalRef.componentInstance.MsgClose = \"Cancelar\";\n    modalRef.componentInstance.GuardaroEliminarClass = \"btn-primary\";\n    modalRef.componentInstance.MsgCloseClass = \"btn-default\";\n    modalRef.result.then(() => {    \n      this.authService.logout();\n    },\n    () => {\n      console.log('Backdrop click');\n    })\n  }\n\n  //MODALS\n  seeThisNotification(notificationridden : any) {\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = \"Notificación\";\n    modalRef.componentInstance.Contenido = notificationridden.textData;\n    modalRef.componentInstance.MsgClose = \"Cerrar\";\n    modalRef.componentInstance.MsgCloseClass = \"btn-primary\";\n    modalRef.componentInstance.GuardaroEliminarHidden = true;\n    \n    this.notificaionServices.notificationRidden(notificationridden).subscribe(\n        () => this.retriveNotifications()\n    )\n\n  }\n\n  seeAllNotification() {\n    const modalRef = this.modalService.open(ListNotificationsComponent);\n    modalRef.componentInstance.Encabezado = \"Todas las Notificaciones\";\n    modalRef.componentInstance.button = \"Entendido\";\n    modalRef.componentInstance.ButtonHidden = false;\n    modalRef.result.then(() => {\n      /*this.notificationridden.id = id,\n      this.notificationridden.read = true,\n      this.notificationridden.textData = \"\";\n      this.notificationridden.tittle = \"\" \n      this.notificaionServices.notificationRidden(this.notificationridden).subscribe(\n        x => this.notificaionServices.getAllNotifications().subscribe(\n          x => console.log(x)\n          \n        )\n      )*/\n    },\n      () => {\n        console.log('Backdrop click');\n    })\n  }\n  \n\n  delete(id : number){\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = \"Eliminar\";\n    modalRef.componentInstance.Contenido = \"¿Desea Eliminar?\";\n    modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n    modalRef.componentInstance.MsgClose = \"Cancelar\";\n    modalRef.componentInstance.MsgCloseClass = \"btn-default\";\n    modalRef.componentInstance.GuardaroEliminarClass = \"btn-danger\";\n    modalRef.result.then(() => {\n          this.notificaionServices.delete(id).subscribe(\n            ()=>{\n              \n            }\n            ,\n            error => {\n                console.log(\"error\", error);\n            }\n          );\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXNtcy9jcmVhdGUvY3JlYXRlLW9yZ2FuaXNtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/organism\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Crear</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #OrganismForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" required name=\\\"name\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nombre\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Nombre Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.description\\\" required #description=\\\"ngModel\\\" name=\\\"description\\\" type=\\\"text\\\"\\n              placeholder=\\\"Descripción\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && description.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Descripción Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\" ><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"CategoryForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n</div>\"","import { CreateOrganismDto } from './../../_models/organism';\nimport { Component, OnInit } from '@angular/core';\nimport { OrganismService } from 'src/app/_services/organism.service';\n\n@Component({\n  selector: 'app-create-organism',\n  templateUrl: './create-organism.component.html',\n  styleUrls: ['./create-organism.component.css']\n})\nexport class CreateOrganismComponent implements OnInit {\n\n  responseSuccess : any;\n  error = '';\n  model = new CreateOrganismDto();\n  constructor(private organismServcice : OrganismService) { }\n\n  ngOnInit() {}\n\n    onSubmit(){\n      this.organismServcice.createOrganism(this.model).subscribe(\n        x=>this.responseSuccess = x,\n        error => this.error = error.error.notifications\n      );\n    }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXNtcy9tb2RpZnkvbW9kaWZ5LW9yZ2FuaXNtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/organism\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Modificar</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #OrganismForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" required name=\\\"name\\\" type=\\\"text\\\"\\n              placeholder=\\\"Nombre\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Nombre Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.description\\\" required #description=\\\"ngModel\\\" name=\\\"description\\\" type=\\\"text\\\"\\n              placeholder=\\\"Descripción\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && description.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Descripción Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\" ><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"CategoryForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UpdateOrganismDto } from 'src/app/_models/organism';\nimport { OrganismService } from 'src/app/_services/organism.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-modify-organism',\n  templateUrl: './modify-organism.component.html',\n  styleUrls: ['./modify-organism.component.css']\n})\nexport class ModifyOrganismComponent implements OnInit {\n\n  model = new UpdateOrganismDto();\n  id : number;\n  responseSuccess : any;\n  error = '';\n\n  constructor(private organismService : OrganismService,\n    private route : ActivatedRoute,\n    private router : Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n\n    this.organismService.findById(this.id).subscribe(\n      x => {this.model.id = x.id, this.model.name = x.name, this.model.description = x.description}\n    );\n\n  }\n\n  onSubmit(){\n    this.organismService.updateOrganism(this.model).subscribe(\n      x=> this.responseSuccess = x,\n      error => this.error = error.error.notifications\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXNtcy9vcmdhbmlzbXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container mb-1\\\" >\\n\\t<label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Name </label>\\n\\t<div class=\\\"d-inline-block pl-1 pr-1\\\">\\n\\t\\t<input (keyup)=\\\"findWhileWrite()\\\" [(ngModel)]=\\\"filters.name\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n\\t</div>\\n</div>\\n\\n<a href=\\\"\\\" class=\\\"btn btn-success mb-3\\\" routerLink=\\\"create\\\">\\n\\t<fa-icon icon=\\\"user-plus\\\"></fa-icon>\\n</a>\\n<table class=\\\"table table-hover\\\">\\n\\t<thead>\\n\\t\\t<tr style=\\\"font-weight: bold;\\\">\\n\\t\\t\\t<td>Name</td>\\n\\t\\t\\t<td>Descripción</td>\\n\\t\\t\\t<td></td>\\n\\t\\t\\t<td></td>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let org of organism\\\">\\n\\t\\t\\t<td>{{org.name}}</td>\\n\\t\\t\\t<td>{{org.description}}</td>\\n\\t\\t\\t<td><a href=\\\"\\\" routerLink=\\\"/distribution/{{org.id}}\\\">Reparticiones</a></td>\\n\\t\\t\\t<td>\\n\\t\\t\\t\\t<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"pr-3\\\" routerLink=\\\"/organism/update/{{org.id}}\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:gray;\\\" icon=\\\"edit\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/organism\\\" (click)=\\\"openEliminar(org.id,org.name,org.description)\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<ngb-pagination (pageChange)=\\\"loadPage($event)\\\" [collectionSize]=\\\"col_size\\\" [pageSize]=\\\"itemsPerPage\\\" [(page)]=\\\"page\\\"\\n aria-label=\\\"Default pagination\\\"></ngb-pagination>\\n\"","import { CreateOrganismDto } from './../_models/organism';\nimport { Component, OnInit } from '@angular/core';\nimport { OrganismService } from '../_services/organism.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbdModalContent } from '../modals/modals.component';\n\n@Component({\n  selector: 'app-organisms',\n  templateUrl: './organisms.component.html',\n  styleUrls: ['./organisms.component.css']\n})\nexport class OrganismsComponent implements OnInit {\n\n  filters = { page: 0, name : \"\"} \n  organism : CreateOrganismDto[];\n  col_size : number;\n  itemsPerPage : number = 10;\n\n  constructor(private organismService : OrganismService,\n    private modalService : NgbModal) { }\n\n  ngOnInit() {\n    this.getAllOrganism(this.filters); \n  }\n\n  getAllOrganism(page : any){\n    this.organismService.getPaginator(this.filters).subscribe(\n      result => {\n        this.organism = result.list,\n        this.col_size = result.totalRecords\n      },\n      error => console.log(error)\n    ); \n  }\n\n  loadPage(){\n    if (this.filters.page != 0){\n      this.filters.page = this.filters.page - 1;\n      this.getAllOrganism(this.filters);\n    }\n  }\n\n  openEliminar(id: number, name: string, descp: string) {\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = \"Eliminar\";\n    modalRef.componentInstance.Contenido = \"¿Desea eliminar el Organismo : \" + name + \" \" + descp + \"?\";\n    modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n    modalRef.componentInstance.GuardaroEliminarClass = \"btn-danger\";\n    modalRef.componentInstance.MsgClose = \"Cancelar\";\n    modalRef.result.then(() => {\n      this.organismService.deleteOrganism(id).subscribe(\n        data => {\n            this.getAllOrganism(this.filters.page);\n        },\n        error => {\n            console.log(\"error\", error);\n        }\n    );\n    },\n      () => {\n        console.log('Backdrop click');\n    })\n  }\n\n  findWhileWrite(){\n    this.getAllOrganism(this.filters);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container col-4\\\">\\n    <h2>Registrar</h2>\\n    <form (ngSubmit)=\\\"userForm.form.valid && onSubmit()\\\" method=\\\"post\\\" #userForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.dni\\\" maxlength=\\\"8\\\" #dni=\\\"ngModel\\\" required name=\\\"dni\\\" id=\\\"dni\\\" type=\\\"number\\\"\\n                placeholder=\\\"Dni\\\">\\n            <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"dni.invalid && dni.dirty\\\" class=\\\"alert alert-danger\\\">\\n                Dni Incorrecto\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.email\\\" required #email=\\\"ngModel\\\" name=\\\"email\\\" type=\\\"text\\\"\\n                placeholder=\\\"email\\\" value=\\\"\\\">\\n        </div>\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"email.dirty && email.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Email Incorrecto\\n        </div>\\n        <div class=\\\"from-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.phoneNumber\\\" required #phoneNumber=\\\"ngModel\\\" name=\\\"phoneNumber\\\"\\n                type=\\\"text\\\" placeholder=\\\"Telefóno\\\" value=\\\"\\\">\\n        </div>\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"phoneNumber.dirty && phoneNumber.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Telefóno Incorrecto\\n        </div>\\n\\n        <div style=\\\"padding-top : 8px;\\\" class=\\\"from-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" type=\\\"password\\\"\\n                placeholder=\\\"Contraseña\\\" value=\\\"\\\">\\n        </div>\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"password.dirty && password.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Password Incorrecto\\n        </div>\\n\\n        <div class=\\\"form-group\\\" style=\\\"padding-top : 10px;\\\">\\n            <button style=\\\"margin: 15px;\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!userForm.form.valid\\\">Save</button>\\n            <a class=\\\"btn btn-primary\\\" href=\\\"\\\" routerLink=\\\"/login\\\">Login</a>\\n        </div>\\n        \\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"password.dirty && password.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Contraseña con caracteres invalidos\\n        </div>\\n    </form>\\n    <div *ngIf=\\\"userForm.form.invalid && !userForm.form.dirty\\\">\\n        Hay Campos erroneos en el formulario, verifiquelos\\n    </div>\\n    <div class=\\\"\\\">\\n        <ul style=\\\"margin-top : 15px;\\\" *ngIf=\\\"errors.length != 0\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n            <li *ngFor=\\\"let error of errors\\\">{{ error.value }}</li>\\n        </ul>\\n    </div>\\n</div>\"","import { Router } from '@angular/router';\nimport { Register } from './../_models/register';\nimport { UserService } from './../_services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Login } from '../login/login';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  model = new Register();\n  errors: any[] = [];\n  login = new Login();\n  loading: boolean;\n  error = '';  \n  constructor(private userService : UserService, private router : Router) { }\n\n  onSubmit(){\n    this.errors = [];\n    this.registerUser();    \n  }\n\n  registerUser(){\n    this.model.userName = this.model.email;\n    this.userService.register(this.model).subscribe(\n      result => {\n        this.router.navigate(['Home']);\n      },\n        error => {\n          this.errors = error.error.notifications;\n        }      \n    );\n    console.log(this.model);\n  }\n  \n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL2NyZWF0ZS9jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container col-4\\\">\\n   <h2>Crear Rol</h2>\\n    <form action=\\\"\\\">\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"descripción\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"descripción\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"descripción\\\">\\n          </div>          \\n        <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-success\\\">Crear</button>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-roles',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateRolesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navarStyle {\\r\\n    font-size : 13px;\\r\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n    padding-top: 1px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZXMvcm9sZXMtcGVybWlzc2lvbnMvcm9sZXMtcGVybWlzc2lvbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQix5SUFBeUk7SUFDekksaUJBQWlCO0dBQ2xCIiwiZmlsZSI6InNyYy9hcHAvcm9sZXMvcm9sZXMtcGVybWlzc2lvbnMvcm9sZXMtcGVybWlzc2lvbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZhclN0eWxlIHtcclxuICAgIGZvbnQtc2l6ZSA6IDEzcHg7XHJcbiAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LCBDYW50YXJlbGwsICdPcGVuIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xyXG4gICAgcGFkZGluZy10b3A6IDFweDtcclxuICB9Il19 */\"","module.exports = \"<div class=\\\"col-3\\\">\\n  <ngx-treeview class=\\\"navarStyle\\\" [config]=\\\"config\\\" [items]=\\\"items\\\" (filterChange)=\\\"onFilterChange($event)\\\" \\n  (selectedChange)=\\\"values = $event\\\">\\n  </ngx-treeview>\\n  <button (click)=\\\"save()\\\" style=\\\"margin-top: 25px;\\\" class=\\\"btn btn-success navarStyle\\\">Guardar</button>\\n</div>\\n\"","import { RoleClaimPermission } from './../../_models/role-claim-permission';\nimport { Roles } from './../../_models/roles';\nimport { Component, OnInit } from '@angular/core';\nimport { UpdateRoleClaimPermission } from '../../_models/update-role-claim-permission';\nimport { TreeviewItem, TreeviewConfig } from 'node_modules/ngx-treeview'\nimport { RolesPermissionsService } from '../../_services/roles-permissions.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-roles-permissions',\n  templateUrl: './roles-permissions.component.html',\n  styleUrls: ['./roles-permissions.component.css']\n})\nexport class RolesPermissionsComponent implements OnInit {\n\n\n  model: Roles;\n  id : string;\n  constructor(private rolesServices: RolesPermissionsService, private route: ActivatedRoute) { }\n\n  dropdownEnabled = true;\n  items: TreeviewItem[] = [];\n  values: number[];\n  updateRoleClaimPermission: UpdateRoleClaimPermission = new UpdateRoleClaimPermission()\n\n  config = TreeviewConfig.create({\n    hasAllCheckBox: true,\n    hasFilter: true,\n    hasCollapseExpand: true,\n    decoupleChildFromParent: false,\n    maxHeight: 400\n  });\n\n  buttonClasses = [\n    'btn-outline-primary',\n    'btn-outline-secondary',\n    'btn-outline-success',\n    'btn-outline-danger',\n    'btn-outline-warning',\n    'btn-outline-info',\n    'btn-outline-light',\n    'btn-outline-dark'\n  ];\n  buttonClass = this.buttonClasses[0];\n\n  ngOnInit() {\n\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n\n    this.rolesServices.getAllRoleClaims(this.id).subscribe(claims => {\n      this.items = claims.map(x => new TreeviewItem(x));\n    });\n\n  }\n\n  onFilterChange(value: string) {\n    console.log('filter:', value);\n  }\n\n  mapToRoleClaimPermission(treeViewItem: TreeviewItem) {\n    var roleClaim = new RoleClaimPermission();\n    roleClaim.checked = treeViewItem.checked;\n    roleClaim.text = treeViewItem.text;\n    roleClaim.value = treeViewItem.value;\n    if (treeViewItem.children)\n      roleClaim.children = treeViewItem.children.map(x => this.mapToRoleClaimPermission(x));\n    return roleClaim;\n  }\n\n  save() {\n    \n    let childrensUpdate: UpdateRoleClaimPermission;\n\n    this.updateRoleClaimPermission.id = this.id;\n\n    this.updateRoleClaimPermission.Claims = this.items.map(x => this.mapToRoleClaimPermission(x));\n\n    // this.items.forEach(function(value){\n    //       value.children.forEach(function(value1){\n    //          //childrensUpdate.childrens. = value1.text;\n    //          //childrensUpdate.childrens = value1.value;\n    //     });\n    // });\n    console.log(childrensUpdate);\n    this.rolesServices.saveRoleClaims(this.updateRoleClaimPermission);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Roles</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let rol of modelRoles\\\">\\n        <th scope=\\\"row\\\">{{rol.name}}</th>\\n        <th scope=\\\"row\\\"><a routerLink=\\\"/roles/permissions/{{rol.id}}\\\">Permisos</a></th>\\n      </tr>\\n    </tbody>\\n  </table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Roles } from '../_models/roles';\nimport { RoleService } from '../_services/role.service';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n    modelRoles : Roles;\n\n    constructor(private rolesService : RoleService){}\n    ngOnInit(){\n      this.rolesService.getAllRoles().subscribe(x=>\n        this.modelRoles = x\n        );\n    }\n}\n","module.exports = \".small{\\r\\n    font-size: 12px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc29saWNpdGF0aW9uLXN1YnNpZHkvY3JlYXRlL2NyZWF0ZS1zb2xpY2l0YXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL3NvbGljaXRhdGlvbi1zdWJzaWR5L2NyZWF0ZS9jcmVhdGUtc29saWNpdGF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc21hbGx7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbn0iXX0= */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/SolicitationSubsidy\\\">\\n    <fa-icon icon=\\\"angle-left\\\"></fa-icon>\\n</a>\\n<div class=\\\"container\\\">\\n    <div>\\n        <h2 *ngIf=\\\"!id\\\">Crear</h2>\\n        <h2 *ngIf=\\\"id\\\">Modificar</h2>\\n    </div>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #solicitationSubsidy=\\\"ngForm\\\">\\n        <div class=\\\"navar navbar-collapse\\\"> \\n            <label for=\\\"\\\">Total</label>\\n            <ul class=\\\"navbar-nav ml-auto\\\">\\n                <li>\\n                    <div class=\\\"form-inline my-2 my-lg-0\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control text-right\\\" name=\\\"total\\\"\\n                        disabled #total=\\\"ngModel\\\" [(ngModel)]=\\\"model.total\\\" value=\\\"{{model.total | number}}\\\">\\n                    </div>\\n                </li>\\n            </ul>\\n        </div>\\n\\n        <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group pt-1 col\\\">\\n                        <label for=\\\"\\\">Motivo</label>\\n                        <textarea required class=\\\"form-control\\\" #motive=\\\"ngModel\\\"\\n                        [ngClass]=\\\"{'is-invalid' : motive.invalid && (motive.dirty || motive.touched)}\\\"\\n                         name=\\\"motive\\\" minlength=\\\"10\\\" maxlength=\\\"245\\\" [(ngModel)]=\\\"model.motive\\\">\\n                        </textarea>\\n\\n                        <div *ngIf=\\\"motive.invalid && (motive.dirty || motive.touched)\\\" class=\\\"alert alert-danger mt-1\\\">\\n                            <div *ngIf=\\\"motive.errors.required\\\">\\n                                Campo requerido.\\n                            </div>\\n                            <div *ngIf=\\\"motive.errors.minlength\\\">\\n                                Debe contener al menos un digíto\\n                            </div>\\n                            <div *ngIf=\\\"motive.errors.maxlength\\\">\\n                               No debe contener mas de 4 digítos\\n                            </div>\\n                        </div>\\n                </div>\\n        </div>\\n\\n        <div class=\\\"form-row mt-1 mb-1\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success small\\\" (click)=\\\"AddDestiny()\\\">\\n                    <fa-icon icon=\\\"plus\\\"></fa-icon> Destino\\n            </button> \\n            <a (click)=\\\"deleteAllDestinies()\\\" \\n                *ngIf=\\\"model.destinies.length > 0\\\"\\n                class=\\\"btn btn-danger ml-1 text-white small\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon> Eliminar Todos\\n            </a>\\n\\n            <button\\n            class=\\\"btn btn-default ml-auto mb-1 small\\\"\\n            type=\\\"button\\\" \\n            [hidden]=\\\"!model.destinies\\\"\\n            (click)=\\\"onChangeColapse()\\\"\\n            *ngIf=\\\"model.destinies.length > 0\\\"\\n            [attr.aria-expanded]=\\\"!isCollapsedDestiny\\\" \\n            aria-controls=\\\"collapseDestiny\\\"\\n            >\\n                <fa-icon icon=\\\"{{verOcultarIconDestiny}}\\\"></fa-icon>\\n                {{verOcultarTextDestiny}} ({{model.destinies.length}})\\n        </button>\\n        </div>\\n        <!--Destino-->\\n        <table *ngIf=\\\"model.destinies.length > 0\\\" class=\\\"table table-sm\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">Fecha</th>\\n                    <th scope=\\\"col\\\">Provincia</th>\\n                    <th scope=\\\"col\\\">Localidades</th>\\n                    <th scope=\\\"col\\\">Categoría</th>\\n                    <th scope=\\\"col\\\">Transporte</th>\\n                    <th scope=\\\"col\\\">Dias</th>\\n                    <th scope=\\\"col\\\"></th>\\n                </tr>  \\n            </thead>\\n            <tbody id=\\\"collapseDestiny\\\" [ngbCollapse]=\\\"isCollapsedDestiny\\\" *ngFor=\\\"let destiny of model.destinies\\\">\\n                <tr>\\n                    <td>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"input-group\\\">\\n                            <input class=\\\"form-control small\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                                    name=\\\"dp{{destiny.provinceId}}{{destiny.cityId}}\\\"\\n                                    [displayMonths]=\\\"displayMonths\\\"\\n                                    [navigation]=\\\"navigation\\\" \\n                                    [outsideDays]=\\\"outsideDays\\\"\\n                                    [showWeekNumbers]=\\\"showWeekNumbers\\\"\\n                                    [ngClass]=\\\"{'is-invalid' : 'dp+destiny.provinceId+destiny.cityId'.invalid &&\\n                                    ('dp+destiny.provinceId+destiny.cityId'.dirty || 'dp+destiny.provinceId+destiny.cityId'.touched)}\\\"\\n                                    ngbDatepicker #d=\\\"ngbDatepicker\\\" #dp{{destiny.provinceId}}{{destiny.cityId}}=\\\"ngModel\\\" minlength=\\\"8\\\" maxlength=\\\"8\\\"\\n                                    [(ngModel)]=\\\"destiny.startDate\\\" required>\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                                        <fa-icon icon=\\\"calendar-alt\\\"></fa-icon>\\n                                    </button>\\n                                </div>\\n                            </div>\\n        \\n                            <div *ngIf=\\\"'dp+destiny.provinceId+destiny.cityId'.invalid && ('dp+destiny.provinceId+destiny.cityId'.dirty || 'dp+destiny.provinceId+destiny.cityId'.touched)\\\" class=\\\"alert alert-danger mt-1\\\">\\n                                <div *ngIf=\\\"dp+destiny.provinceId+destiny.errors.required\\\">\\n                                    Campo requerido.\\n                                </div>\\n                                <div *ngIf=\\\"'dp+destiny.provinceId+destiny'.errors.minlength\\\">\\n                                    Debe contener al menos 8 digítos\\n                                </div>\\n                                <div *ngIf=\\\"'dp+destiny.provinceId+destiny'.errors.maxlength\\\">\\n                                    No debe contener mas de 8 digítos\\n                                </div>\\n                            </div>\\n                        </div>  \\n                    </td>\\n\\n                    <td colspan=\\\"2\\\" *ngIf=\\\"destiny.countryId\\\">\\n                            <select class=\\\"form-control small\\\"\\n                            #countryId{{destiny.provinceId}}{{destiny.countryId}}=\\\"ngModel\\\" \\n                            (change)=\\\"changeValue($event)\\\"\\n                            name=\\\"countryId{{destiny.provinceId}}{{destiny.countryId}}\\\"\\n                            [(ngModel)]=\\\"destiny.countryId\\\">\\n                            <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.id\\\">\\n                                {{country.name}}\\n                            </option>\\n                        </select>\\n                    </td>\\n                    <td  *ngIf=\\\"!destiny.countryId\\\">\\n                        <!-- filas para agregar-->\\n                        <select (change)=\\\"citiesThisProvince(destiny.provinceId)\\\" \\n                            class=\\\"form-control small\\\"\\n                            #provinceId{{destiny.provinceId}}=\\\"ngModel\\\"\\n                            name=\\\"provinceId{{destiny.provinceId}}\\\" \\n                            [(ngModel)]=\\\"destiny.provinceId\\\">\\n                            <option *ngFor=\\\"let province of provinces\\\" [value]=\\\"province.id\\\">\\n                                {{province.name}}\\n                            </option>\\n                        </select>\\n                    </td>\\n                    <td  *ngIf=\\\"!destiny.countryId\\\">\\n                        <select (change)=\\\"changeValue($event)\\\" \\n                            class=\\\"form-control small\\\"\\n                            #cityId{{destiny.cityId}}=\\\"ngModel\\\"\\n                            name=\\\"cityId{{destiny.cityId}}\\\" \\n                            [(ngModel)]=\\\"destiny.cityId\\\">\\n                            <option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.id\\\">\\n                                {{city.name}}\\n                            </option>\\n                        </select>\\n                    </td>\\n                    <td>\\n                        <select (change)=\\\"changeValue($event)\\\" \\n                            class=\\\"form-control small\\\"\\n                            #categoryId{{destiny.categoryId}}=\\\"ngModel\\\"\\n                            name=\\\"categoryId{{destiny.categoryId}}\\\" \\n                            [(ngModel)]=\\\"destiny.categoryId\\\">\\n                            <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n                                {{category.description}}\\n                            </option>\\n                        </select>\\n                    </td>\\n                    <td>\\n                        <select (change)=\\\"changeValue($event)\\\" \\n                            class=\\\"form-control small\\\"\\n                            #transportId{{destiny.transportId}}=\\\"ngModel\\\"\\n                            name=\\\"transportId{{destiny.transportId}}\\\" \\n                            [(ngModel)]=\\\"destiny.transportId\\\">\\n                            <option *ngFor=\\\"let transport of transports\\\" [value]=\\\"transport.id\\\">\\n                                {{transport.model}}-{{transport.brand}}\\n                            </option>\\n                        </select>\\n                    </td>\\n                    <td>\\n                        <input required [(ngModel)]=\\\"destiny.days\\\" \\n                        #days{{destiny.categoryId}}=\\\"ngModel\\\" \\n                        placeholder=\\\"Dias\\\" value=\\\"{{destiny.days}}\\\"\\n                        name=\\\"{{destiny.categoryId}}\\\" class=\\\"form-control small\\\" type=\\\"text\\\">\\n                    </td>\\n\\n                    <td>\\n                        <a class=\\\"btn btn-danger text-white small\\\" (click)=\\\"removeDestiny(destiny)\\\">\\n                            <fa-icon icon=\\\"trash\\\"></fa-icon>\\n                        </a>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"form-row\\\">\\n            <a (click)=\\\"openAddNewConcept()\\\" class=\\\"btn btn-success mb-1 text-white small\\\">\\n                <fa-icon icon=\\\"plus\\\"></fa-icon> Concepto de Gasto\\n            </a>\\n\\n            <a (click)=\\\"deleteAllConcepts()\\\" \\n                *ngIf=\\\"model.expenditures.length > 0\\\"\\n                class=\\\"btn btn-danger ml-1 mt-1 mb-1 text-white small\\\">\\n                    <fa-icon icon=\\\"trash\\\"></fa-icon> Eliminar Todos\\n            </a>\\n            <!--Concepto de Gasto-->\\n            <button \\n            type=\\\"button\\\" \\n            type=\\\"button\\\"\\n            class=\\\"btn btn-default ml-auto mb-1 small\\\" \\n            [hidden]=\\\"!model.expenditures\\\"\\n            (click)=\\\"changeCollapseExpenditure()\\\"\\n            *ngIf=\\\"model.expenditures.length > 0\\\"\\n            [attr.aria-expanded]=\\\"!isCollapsedExpenditure\\\"\\n            aria-controls=\\\"collapseExpenditure\\\">\\n            <fa-icon icon=\\\"{{verOcultarIconExpenditure}}\\\"></fa-icon>\\n                {{verOcultarTextExpenditure}}\\n                ({{model.expenditures.length}})\\n        </button>\\n            <table *ngIf=\\\"model.expenditures.length > 0\\\" class=\\\"table table-sm\\\">\\n                <thead>\\n                    <tr>\\n                    <th scope=\\\"col\\\">Gastos</th>\\n                    <th scope=\\\"col\\\">Importe</th>\\n                    <th scope=\\\"col\\\">Descripción</th>\\n                    <th scope=\\\"col\\\"></th>\\n                    </tr>\\n                </thead>\\n                <tbody id=\\\"collapseExpenditure\\\" [ngbCollapse]=\\\"isCollapsedExpenditure\\\" \\n                        *ngFor=\\\"let modelExp of model.expenditures\\\">\\n                    <tr>\\n                        <td>\\n                            <select (change)=\\\"changeValue($event)\\\" \\n                                class=\\\"form-control small\\\"\\n                                #expenditureId{{modelExp.id}}=\\\"ngModel\\\"\\n                                name=\\\"expenditureId{{modelExp.id}}\\\" \\n                                [(ngModel)]=\\\"modelExp.expenditureTypeId\\\">\\n                                <option *ngFor=\\\"let exp of Allexpenditures\\\" [value]=\\\"exp.id\\\">\\n                                    {{exp.name}}\\n                                </option>\\n                            </select>\\n                        </td>    <!-- filas para agregar-->\\n\\n                        <td>\\n                            <input required [(ngModel)]=\\\"modelExp.amount\\\" #amount{{modelExp.id}}=\\\"ngModel\\\" \\n                            name=\\\"amount{{modelExp.id}}\\\" class=\\\"form-control small\\\" type=\\\"number\\\" placeholder=\\\"Costo\\\"\\n                            value=\\\"{{modelExp.amount}}\\\">\\n                        </td>\\n                        <td>\\n                            <input required [(ngModel)]=\\\"modelExp.description\\\" \\n                                #description{{modelExp.id}}=\\\"ngModel\\\" \\n                                placeholder=\\\"Descripción\\\" value=\\\"{{modelExp.description}}\\\"\\n                                name=\\\"description{{modelExp.id}}\\\" class=\\\"form-control small\\\" type=\\\"text\\\">\\n                            \\n                        </td>\\n                        <td>\\n                            <a class=\\\"btn btn-danger text-white\\\" (click)=\\\"removeExpenditure(modelExp)\\\">\\n                                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n                            </a>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n        <div class=\\\"form-row float-right\\\">\\n            <button [disabled]=\\\"!solicitationSubsidy.valid\\\" class=\\\"btn btn-success small\\\">\\n                <fa-icon icon=\\\"save\\\"></fa-icon> Guardar\\n            </button>\\n        </div>\\n\\n\\n    </form>\\n    <div class=\\\"alert alert-danger mt-5\\\" *ngIf=\\\"msj\\\">\\n        <ul>\\n            <li>{{msj}}</li>\\n        </ul>\\n    </div>\\n    <div class=\\\"alert alert-success mt-5\\\" *ngIf=\\\"msjExito\\\">\\n        <ul>\\n            <li>\\n                {{msjExito}}\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"solicitationSubsidy.form.invalid && (solicitationSubsidy.dirty || solicitationSubsidy.touched)\\\" \\n        class=\\\"alert alert-danger mt-5\\\">\\n        <div>\\n                Hay Campos erroneos en el formulario, verifiquelos\\n        </div>\\n    </div>\\n</div>\"","import { SolicitationSubsidyService } from './../../_services/solicitation-subsidy.service';\nimport { CodeLiquidationService } from './../../_services/code-liquidation.service';\nimport { CountryService } from './../../_services/country.service';\nimport { AllCountryDto } from './../../_models/country';\nimport { CityBaseDto } from './../../_models/city';\nimport { DestinyDto } from 'src/app/_models/destiny';\nimport { AddDestinyComponent } from './../../modals/add-destiny/add-destiny.component';\nimport { PlaceService } from './../../_services/place.service';\nimport { AllPlaceDto, PlaceBaseDto } from './../../_models/place';\nimport { AddNewExpenditureComponent } from './../../modals/add-new-expenditure/add-new-expenditure.component';\nimport { ExpenditureTypeBaseDto, AllExpenditureDto } from '../../_models/expenditureType';\nimport { ExpenditureService } from '../../_services/expenditure.service';\nimport { MotiveService } from './../../_services/motive.service';\nimport { CityService } from './../../_services/city.service';\nimport { AllProvinceDto, ProvinceBaseDto } from './../../_models/province';\nimport { AllCategoryDto } from './../../_models/category';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { CreateSolicitationSubsidyDto, SolicitationSubsidyBaseDto, Expenditure } from './../../_models/solicitationSubsidy';\nimport { Component, OnInit } from '@angular/core';\nimport { TransportService } from 'src/app/_services/transport.service';\nimport { AllTransportDto } from 'src/app/_models/transport';\nimport { ProvinceService } from 'src/app/_services/province.service';\nimport { AllCitiesDto } from 'src/app/_models/city';\nimport { AllMotiveDto } from 'src/app/_models/motive';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { DestinyService } from 'src/app/_services/destiny.service';\nimport { codeLiquidationBaseDto } from 'src/app/_models/codeLiquidation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SolicitationSubsidyComponent } from '../solicitation-subsidy.component';\nimport { ExpendituresUserService } from 'src/app/_services/expenditures-user.service';\n\n@Component({\n  selector: 'app-create-solicitation',\n  templateUrl: './create-solicitation.component.html',\n  styleUrls: ['./create-solicitation.component.css']\n})\nexport class CreateSolicitationComponent implements OnInit {\n\n  isCollapsedDestiny = false;\n  categories : AllCategoryDto[] = [];\n  transports : AllTransportDto[] = [];\n  isCollapsedExpenditure = false;\n  ConceptExpenditureList : Expenditure[]=[];\n  subscriptionExpenditure: Subscription;\n  subscriptionDestiny : Subscription;\n  _disabled = false;\n  motives    : AllMotiveDto[] = []; \n  expenditures : AllExpenditureDto[];\n  Allexpenditures : AllExpenditureDto[];\n  destinies : DestinyDto[] = [];\n  model = new CreateSolicitationSubsidyDto;\n  radioButtonRequired : boolean = true;\n  provinces : ProvinceBaseDto[];\n  cities : CityBaseDto[];\n  verOcultarIconDestiny = \"arrow-circle-up\";\n  verOcultarTextDestiny = \"Ocultar\";\n  verOcultarIconExpenditure = \"arrow-circle-up\";\n  verOcultarTextExpenditure = \"Ocultar\";\n  countries : AllCountryDto[] = [];\n  codeLiquidations : codeLiquidationBaseDto[] = [];\n  id : number;\n  citiesModify : CityBaseDto[] = [];\n  msj = '';\n  msjExito = '';\n\n  constructor(\n      private route : ActivatedRoute,\n      private router : Router,\n      private motiveService : MotiveService,\n      private expenditureService : ExpenditureService,\n      private modalService: NgbModal,\n      private destinyService : DestinyService,\n      private provinceService : ProvinceService,\n      private cityService : CityService,\n      private categoryService : CategoryService,\n      private transportService : TransportService,\n      private countryService : CountryService,\n      private codeLiquidationService : CodeLiquidationService,\n      private solicitationSubsidyService : SolicitationSubsidyService,\n      private expenditureAgentService : ExpendituresUserService\n      ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      x =>{\n        this.id = x.id\n    });\n    \n    this.model.destinies = [];\n    this.model.expenditures = [];\n\n    if (this.id){\n        this.solicitationSubsidyService.getByIdSolicitation(this.id)\n        .subscribe(\n          x => {\n                this.model = x;\n                  if (this.model.destinies != null){\n                    for (let index = 0; index < this.model.destinies.length; index++) {\n                      let dateToShow = new Date(Date.parse(this.model.destinies[index].startDate));\n                      this.model.destinies[index].startDate = {day : dateToShow.getDate(), month : dateToShow.getMonth()+1, year : dateToShow.getFullYear() };\n                      this.citiesThisProvinceModify(this.model.destinies[index].provinceId);\n                  }                 \n                }\n                  this.allProvice();\n                }\n        );\n    }\n      this.allMotive();\n      this.allexpenditures();\n      this.allExpenditureFromModal();\n      this.allDestinyFromModal();\n      this.allCategories();\n      this.allTransport();\n      this.allCountries();\n      this.allCodeLiquidation();\n      this.totalResultExpenditure();\n  }\n\n  allTransport(){\n    this.transportService.getAll().subscribe(\n      x => this.transports = x\n    );\n  }\n\n  allCodeLiquidation(){\n    this.codeLiquidationService.getAll()\n    .subscribe(\n      x => this.codeLiquidations = x\n    );\n  }\n\n  allCountries(){\n    this.countryService.getAllCountries()\n    .subscribe(\n      x => this.countries = x\n    );\n  }\n  allCategories(){\n    this.categoryService.getallCategories()\n    .subscribe(\n      x=> this.categories = x\n    );\n  }  \n  allProvice(){\n    this.provinceService.getAll()\n    .subscribe(\n      x=> this.provinces = x\n    );\n  }\n\n  allDestinyFromModal(){\n    this.subscriptionDestiny = this.destinyService.getMessage()\n    .subscribe(\n      x =>{\n            this.model.destinies = x;\n            x.forEach(\n              x =>{\n                  if (x.cityId !== undefined && x.provinceId !== undefined){ \n                    //se ingreso una ciudad y una provincia\n                    this.allProvice();\n                    this.citiesThisProvince(x.provinceId);\n                }\n              }\n            );\n      }  \n    );\n  }\n\n  citiesThisProvince(provinceId : number){\n    this.cityService.GetByIdCity(provinceId).subscribe(\n      x=>{\n          this.cities = x;\n         } \n    );\n  }\n\n\n  citiesThisProvinceModify(provinceId : number){\n    this.cityService.GetByIdCity(provinceId).subscribe(\n      x=>{\n          this.cities = this.citiesModify.concat(x);\n         } \n    );\n  }\n\n  allExpenditureFromModal(){\n    this.subscriptionExpenditure = this.expenditureService.getMessage()\n    .subscribe(\n      x=>{\n        this.model.expenditures = x;\n      },\n      error => console.log(error)\n    );\n  }\n\n  allMotive(){\n    this.motiveService.getAll().subscribe(\n      x => this.motives = x\n    );\n  }\n\n  allexpenditures(){\n    this.expenditureService.getAll().subscribe(\n      x => {this.Allexpenditures = x}\n    );\n  }\n\n\n  removeExpenditure(expenditure : Expenditure){\n      let minus : number = 0;\n      const index = this.model.expenditures.indexOf(expenditure, 0);\n      minus = minus + expenditure.amount;\n      if (index > -1) {\n        this.model.expenditures.splice(index, 1);\n        this.deleteFromDatabaseExpenditure(expenditure.id);\n      }\n      \n      this.totalResultExpenditure();\n      \n   }\n\n   removeDestiny(destiny : DestinyDto){\n      let minus : number = 0;\n      const index = this.model.destinies.indexOf(destiny, 0);\n      let codLiq = this.codeLiquidations.find(x => x.id == destiny.codeLiquidationId);\n      \n      let category = this.categories.find(x => x.id == destiny.categoryId);\n\n      minus = minus + (codLiq.percentage * category.advance);\n      if (index > -1) {\n        this.deleteFromDatabaseDestinies(destiny.id);\n        this.model.destinies.splice(index, 1);\n      }\n\n      this.totalResultExpenditure();\n   }\n\n   deleteAllConcepts(){\n     let array = this.model.expenditures;\n     let minus : number = 0;\n     if (array === undefined){\n       return;\n     }\n      for (let i = array.length - 1; i > -1; i--) {\n          minus = minus + array[i].amount;\n          const indexDeleteAll = this.model.expenditures.indexOf(array[i], 0);\n          if (indexDeleteAll > -1) {\n            this.deleteFromDatabaseExpenditure(this.model.expenditures[i].id);\n            this.model.expenditures.splice(indexDeleteAll, 1);\n          }\n      }\n\n      this.totalResultExpenditure();\n   }\n\n   deleteAllDestinies(){\n    let array = this.model.destinies;\n    let minus : number = 0;\n    if (array === undefined){\n      return;\n    }\n     for (let i = array.length - 1; i > -1; i--) {\n          let codLiq = this.codeLiquidations.find(x => x.id == array[i].codeLiquidationId);\n          let category = this.categories.find(x => x.id == array[i].categoryId);\n\n          minus = minus + (codLiq.percentage * category.advance);\n          const indexDeleteAll = this.model.destinies.indexOf(array[i], 0);\n          if (indexDeleteAll > -1) {\n            this.deleteFromDatabaseDestinies(array[i].id);\n            this.model.destinies.splice(indexDeleteAll, 1);\n          }\n     }\n     this.totalResultExpenditure();\n  }\n\n     //MODALS\n  openAddNewConcept() {\n    const modalRef = this.modalService.open(AddNewExpenditureComponent);\n    if (this.model.expenditures === undefined)\n    {\n      this.model.expenditures = [];\n    }\n\n    let listExpenditures : Expenditure[] = this.model.expenditures;\n\n    modalRef.componentInstance.expendituresAdded = listExpenditures;\n    modalRef.result.then(x=> {\n      this.totalResultExpenditure();\n    },\n    j => {\n        console.log(j);      \n      }\n    );\n  }\n\n  AddDestiny(){\n    const modalRef = this.modalService.open(AddDestinyComponent,{size : 'lg'});\n\n    if (this.model.destinies === undefined)\n    {\n      this.model.destinies = [];\n    }\n\n    let listDestinies : DestinyDto[] = this.model.destinies;\n\n    modalRef.componentInstance.destiniesAdded = listDestinies;\n    \n    modalRef.result.then(\n      x =>this.totalResultExpenditure()\n    ,\n    j => {\n          console.log(j);\n        }\n    );   \n  }\n\n  ngOnDestroy() {\n    this.subscriptionExpenditure.unsubscribe();\n    this.subscriptionDestiny.unsubscribe();\n  }\n\n  changeValue(e : any){\n    console.log(e);\n  }\n\n  deleteFromDatabaseExpenditure(id : number){\n    this.expenditureAgentService.delete(id)\n    .subscribe(\n      () => []\n    );\n  }\n\n  deleteFromDatabaseDestinies(id : number){\n    this.destinyService.delete(id)\n    .subscribe(\n      () => []\n    );\n  }\n\n  onSubmit(){\n      let array = this.model.destinies;\n      for (let index = 0; index < array.length; index++) {\n        const dataSend = array[index].startDate.day+\"/\"+array[index].startDate.month+\"/\"+array[index].startDate.year;\n        this.model.destinies[index].startDate = dataSend;\n      }\n\n      if (this.model.destinies.length == 0){\n        this.msj = 'Debe ingresar al menos un destino';\n        return;\n      }\n      if(this.id){\n        this.solicitationSubsidyService.updateSolicitation(this.model).subscribe(\n          () => {\n            this.router.navigate(['SolicitationSubsidy']);\n            this.msjExito = 'Solicitud Enviada';\n          } \n        );\n      }else{\n        this.solicitationSubsidyService.createSolicitation(this.model).subscribe(\n          () => {\n              this.router.navigate(['SolicitationSubsidy']);\n              this.msjExito = 'Solicitud Actualizada';\n          }\n        );\n      }\n\n  }\n\n  onChangeColapse(){\n    this.isCollapsedDestiny = !this.isCollapsedDestiny;\n    if (this.isCollapsedDestiny){\n      this.verOcultarIconDestiny = \"arrow-circle-down\";\n      this.verOcultarTextDestiny = \"Ver\";\n      return\n    }\n    this.verOcultarIconDestiny = \"arrow-circle-up\";\n    this.verOcultarTextDestiny = \"Ocultar\";\n  }\n\n  changeCollapseExpenditure(){\n    this.isCollapsedExpenditure = !this.isCollapsedExpenditure;\n    if (this.isCollapsedExpenditure){\n      this.verOcultarIconExpenditure = \"arrow-circle-down\";\n      this.verOcultarTextExpenditure = \"Ver\";\n      return\n    }\n    this.verOcultarIconExpenditure = \"arrow-circle-up\";\n    this.verOcultarTextExpenditure = \"Ocultar\";    \n  }\n\n    totalResultExpenditure(){\n      let resultExpenditure = 0;\n      let resultDestiny = 0;\n      this.model.expenditures.forEach(\n        expenditure => resultExpenditure = resultExpenditure +  expenditure.amount\n      );\n\n      this.model.destinies.forEach(\n        destiny => {\n          let category = this.categories.find(category => category.id == destiny.categoryId);\n          let codLiquidation = this.codeLiquidations.find(codLiq => codLiq.id == destiny.codeLiquidationId);\n          resultDestiny = resultDestiny + (category.advance * destiny.days * codLiquidation.percentage);\n        }\n      );\n\n      this.model.total = resultExpenditure + resultDestiny;\n    }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NvbGljaXRhdGlvbi1zdWJzaWR5L2RldGFpbC9zb2xpY2l0YXRpb24tc3Vic2lkeWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <button href=\\\"\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"/SolicitationSubsidy\\\">\\n    <fa-icon icon=\\\"angle-left\\\"></fa-icon> \\n  </button>\\n</div>\\n\\n<label for=\\\"\\\">Motivo</label>\\n<textarea rows=\\\"10\\\" style=\\\"height: 100px\\\" class=\\\"h-45 form-control\\\" disabled>{{model.motive}}</textarea>\\n<br>\\n<label for=\\\"\\\">Gastos</label>\\n<table class=\\\"table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Importe</th>\\n      <th scope=\\\"col\\\">Nombre</th>\\n      <th scope=\\\"col\\\">Descripción</th>\\n      \\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let exp of model.expenditures\\\">\\n      <td>\\n        {{exp.amount}}\\n      </td>\\n      <td>\\n        {{exp.expenditureTypeName}}\\n      </td>\\n      <td>\\n        {{exp.description}}\\n      </td>\\n      \\n    </tr>\\n  </tbody>\\n</table>\\n\\n<label for=\\\"\\\">Destinos</label>\\n<table class=\\\"table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Dias</th>\\n      <th scope=\\\"col\\\">Fecha de Inicio</th>\\n      <th scope=\\\"col\\\">Categoría</th>\\n      <th scope=\\\"col\\\">Pais</th>\\n      <th scope=\\\"col\\\">Provincia</th>\\n      <th scope=\\\"col\\\">Localidad</th>\\n      <th scope=\\\"col\\\">Transporte</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let des of model.destinies\\\">\\n      <td>\\n        {{des.days}}\\n      </td>\\n      <td>\\n          {{des.startDate | date:'dd/MM/yyyy'}}\\n        </td>\\n      <td>\\n        {{des.categoryName}}\\n      </td>\\n      <td>\\n        <li style=\\\"list-style-type: none;\\\" *ngIf=\\\"des.countryName\\\">{{des.countryName}}</li>\\n        <li style=\\\"list-style-type: none;\\\" *ngIf=\\\"!des.countryName\\\">ARGENTINA</li>\\n      </td>\\n      <td >\\n        <li style=\\\"list-style-type: none;\\\" *ngIf=\\\"des.provinceName\\\"> {{des.provinceName}} </li>\\n      </td>\\n      <td>\\n        <li style=\\\"list-style-type: none;\\\" *ngIf=\\\"des.cityName\\\">{{des.cityName}}</li>\\n      </td>\\n      <td>\\n        {{des.transportModel}} - {{des.transportBrand}}\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n  <div class=\\\"form-row mt-1 float-right\\\">\\n    <div class=\\\"mr-1 mt-3\\\">\\n        <label for=\\\"\\\">Total</label>\\n    </div>\\n    <div>\\n        <input type=\\\"text\\\" disabled value=\\\"{{model.total | number}}\\\" class=\\\"form-control\\\">\\n    </div>\\n  </div>\\n\"","import { SolicitationSubsidyService } from './../../_services/solicitation-subsidy.service';\nimport { SolicitationSubsidyBaseDto } from './../../_models/solicitationSubsidy';\nimport { Component, OnInit } from '@angular/core';\nimport { ExpendituresUserService } from 'src/app/_services/expenditures-user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ExpenditureUserBaseDto } from 'src/app/_models/expenditureUser';\n\n@Component({\n  selector: 'app-solicitation-subsidydetail',\n  templateUrl: './solicitation-subsidydetail.component.html',\n  styleUrls: ['./solicitation-subsidydetail.component.css']\n})\nexport class SolicitationSubsidydetailComponent implements OnInit {\n\n  id : number;\n  model = new SolicitationSubsidyBaseDto;\n\n  constructor(\n    private route : ActivatedRoute,\n    private solicitationSubsidyService : SolicitationSubsidyService\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      x => {\n        this.id = x.id;\n            if (this.id){\n              this.solicitationSubsidyService.getByIdSolicitation(this.id)\n              .subscribe(\n                  solicitation => this.model = solicitation\n              );\n            }\n        }\n    );\n\n  }\n\n}\n","module.exports = \".long-value-input {\\r\\n    width: 600px;\\r\\n    height: 60px;\\r\\n    padding: 0 10px;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc29saWNpdGF0aW9uLXN1YnNpZHkvc29saWNpdGF0aW9uLXN1YnNpZHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsaUJBQWlCO0dBQ2xCIiwiZmlsZSI6InNyYy9hcHAvc29saWNpdGF0aW9uLXN1YnNpZHkvc29saWNpdGF0aW9uLXN1YnNpZHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb25nLXZhbHVlLWlucHV0IHtcclxuICAgIHdpZHRoOiA2MDBweDtcclxuICAgIGhlaWdodDogNjBweDtcclxuICAgIHBhZGRpbmc6IDAgMTBweDtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfSJdfQ== */\"","module.exports = \"<div class=\\\"container mb-1\\\" >\\n  <label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Transporte </label>\\n  <div class=\\\"d-inline-block pl-1 pr-1 col-2\\\">\\n    <select  (change)=\\\"filter()\\\" [(ngModel)]=\\\"filters.transportId\\\" class=\\\"form-control d-inline-block pl-1\\\">\\n      <option value=\\\"\\\"></option>\\n      <option *ngFor=\\\"let transp of transports\\\" value=\\\"{{transp.id}}\\\">\\n        {{transp.type}}\\n      </option>\\n    </select>\\n  </div>\\n  \\n  <label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Lugar </label>\\n  <div class=\\\"d-inline-block pl-1 pr-1 col-2\\\">\\n    <select  (change)=\\\"filter()\\\" [(ngModel)]=\\\"filters.placeId\\\" class=\\\"form-control d-inline-block pl-1\\\">\\n      <option value=\\\"\\\"></option>\\n      <option >\\n       \\n      </option>\\n    </select>\\n  </div>\\n\\n  <label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Destino </label>\\n  <div class=\\\"d-inline-block pl-1 pr-1 col-2\\\">\\n    <select  (change)=\\\"filter()\\\" [(ngModel)]=\\\"filters.destinyId\\\" class=\\\"form-control d-inline-block pl-1\\\">\\n      <option value=\\\"\\\"></option>\\n      <option>\\n        \\n      </option>\\n    </select>\\n  </div>\\n\\n  <label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Usuario</label>\\n  <div class=\\\"d-inline-block pl-1 pr-1 col-2\\\">\\n    <input (keyup)=\\\"filter()\\\" [(ngModel)]=\\\"filters.userName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"d-inline-block pb-2 pt-2\\\">\\n        <a href=\\\"\\\" class=\\\"btn btn-success\\\" routerLink=\\\"/SolicitationSubsidy/create\\\">\\n          Agregar\\n        </a>\\n      </div>\\n    \\n      <table class=\\\"table table-hover\\\">\\n      <thead>\\n        <tr style=\\\"font-weight: bold;\\\">\\n          <th>Agente</th>\\n          <th>Fecha de Creación</th>\\n          <th>Motivo</th>\\n          <th>Localidades</th>\\n          <th>Total</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let sol of solicitationSubsidies\\\">\\n          <td>{{sol.user.userName}}</td>\\n          <td>{{sol.createDate | date:'dd/MM/yyyy'}}</td>\\n          <td><p class=\\\"long-value-input\\\">{{sol.motive}}</p></td>\\n          <td>\\n            <ul *ngFor=\\\"let d of sol.destinies\\\">\\n                <ul *ngIf=\\\"countryName\\\">{{d.countryName}} - </ul>\\n                <ul *ngIf=\\\"!countryName\\\">ARGENTINA - </ul>\\n                <ul>{{d.provinceName}} - </ul>\\n                <ul>{{d.cityName}}</ul>\\n            </ul>\\n          </td>\\n          <td>{{sol.total}}</td>\\n          <td>\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n              <a class=\\\"pr-3\\\" routerLink=\\\"/SolicitationSubsidy/modify/{{sol.id}}\\\">\\n                <fa-icon style=\\\"color:gray;\\\" icon=\\\"edit\\\"></fa-icon>\\n              </a>\\n              <a class=\\\"pr-3\\\" routerLink=\\\"/SolicitationSubsidy\\\" (click)=\\\"openEliminar(sol)\\\">\\n                <fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\n              </a>\\n              <a href=\\\"\\\" class=\\\"pr-3\\\" routerLink=\\\"/SolicitationSubsidy/detail/{{sol.id}}\\\">\\n                <fa-icon style=\\\"color:gray;\\\" icon=\\\"info-circle\\\"></fa-icon>\\n              </a>\\n              <a href=\\\"\\\" routerLink=\\\"/SolicitationSubsidy/detail/{{sol.id}}\\\">\\n                <fa-icon style=\\\"color: greenyellow;\\\" icon=\\\"envelope\\\"></fa-icon>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      </table>\\n\\n      <ngb-pagination (pageChange)=\\\"loadPage($event)\\\" [collectionSize]=\\\"col_size\\\" [pageSize]=\\\"itemsPerPage\\\" [(page)]=\\\"filters.page\\\"\\naria-label=\\\"Default pagination\\\"></ngb-pagination>\\n</div>\\n\\n\"","import { AllSolicitationSubsidyDto } from './../_models/solicitationSubsidy';\nimport { TransportService } from 'src/app/_services/transport.service';\nimport { SolicitationSubsidyService } from './../_services/solicitation-subsidy.service';\nimport { Component, OnInit } from '@angular/core';\nimport { SolicitationSubsidyBaseDto } from '../_models/solicitationSubsidy';\nimport { NgbdModalContent } from '../modals/modals.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-solicitation-subsidy',\n  templateUrl: './solicitation-subsidy.component.html',\n  styleUrls: ['./solicitation-subsidy.component.css']\n})\nexport class SolicitationSubsidyComponent implements OnInit {\n\n  filters = {\n    page : 0,\n    userName : \"\"\n  }\n\n   //paginator\n   col_size : number;\n   page = 0;\n   itemsPerPage : number = 10;\n   //\n   solicitationSubsidies : AllSolicitationSubsidyDto[];\n   error = '';\n   transports : any;\n\n  constructor(\n    private solicitationSubsidy : SolicitationSubsidyService,\n    private transportService : TransportService,\n    private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getAll(this.filters);\n    this.getAllTransport();\n    \n  }\n\n  getAll(filters : any){\n    this.solicitationSubsidy.getAllSolicitationSubsidies(filters).subscribe(\n      x => {\n          this.solicitationSubsidies = x.list;\n          this.col_size = x.totalRecords;\n        }\n    );\n  }\n\n  getAllTransport(){\n    this.transportService.getAll().subscribe(\n      x => this.transports = x.response\n    );\n  }\n  \n  filter(){\n    this.getAll(this.filters);\n  }\n\n    //MODALS\n    openEliminar(solicitud : SolicitationSubsidyBaseDto) {\n      const modalRef = this.modalService.open(NgbdModalContent);\n      modalRef.componentInstance.Encabezado = \"Eliminar\";\n      modalRef.componentInstance.Contenido = \"¿Desea eliminar el transporte : \" + solicitud.motive + \"?\";\n      modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n      modalRef.componentInstance.GuardaroEliminarClass = \"btn-danger\";\n      modalRef.componentInstance.MsgClose = \"Cancelar\";\n      modalRef.result.then(() => {\n        this.solicitationSubsidy.delete(solicitud.id).subscribe(\n          data => {\n            this.getAll(this.filters);\n          },\n          error => {\n              console.log(\"error\", error);\n          }\n      );\n      },\n        () => {\n          console.log('Backdrop click');\n      })\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zcG9ydHMvY3JlYXRlL2NyZWF0ZS10cmFuc3BvcnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/transport\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Crear</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #DistributionForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"modelTransport.model\\\" #name=\\\"ngModel\\\"\\n           required name=\\\"model\\\" type=\\\"text\\\" placeholder=\\\"Modelo\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Modelo Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"modelTransport.type\\\" required \\n          #type=\\\"ngModel\\\" name=\\\"type\\\" type=\\\"text\\\" placeholder=\\\"Tipo\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && type.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Tipo Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"modelTransport.brand\\\" required \\n          #brand=\\\"ngModel\\\" name=\\\"brand\\\" type=\\\"text\\\" placeholder=\\\"Marca\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && brand.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Marca Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"modelTransport.carPlate\\\" required \\n          #carPlate=\\\"ngModel\\\" name=\\\"carPlate\\\" type=\\\"text\\\" placeholder=\\\"Patente\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && carPlate.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Patente Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\"><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"DistributionForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TransportService } from 'src/app/_services/transport.service';\nimport { CreateTransportDto } from 'src/app/_models/transport';\n\n@Component({\n  selector: 'app-create-transport',\n  templateUrl: './create-transport.component.html',\n  styleUrls: ['./create-transport.component.css']\n})\nexport class CreateTransportComponent implements OnInit {\n\n  modelTransport = new CreateTransportDto();\n  error = '';\n\n  responseSuccess : any;\n\n\n  constructor(private transportService : TransportService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    this.transportService.createTransport(this.modelTransport).subscribe(\n        x =>{\n          this.modelTransport = this.responseSuccess = x,\n          this.modelTransport.id = null,\n          this.modelTransport.brand = \"\";\n          this.modelTransport.carPlate = \"\";\n          this.modelTransport.type = \"\";\n          this.modelTransport.model = \"\";\n          this.error = null;\n        }, \n        error => this.error = error.error.notifications\n      );\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zcG9ydHMvbW9kaWZ5L21vZGlmeS10cmFuc3BvcnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/transport\\\">\\n  <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\n</a>\\n<div class=\\\"container col-4 navarStyle\\\">\\n  <h2>Crear</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #DistributionForm=\\\"ngForm\\\">\\n      \\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"modelTransport.model\\\" #name=\\\"ngModel\\\"\\n           required name=\\\"model\\\" type=\\\"text\\\" placeholder=\\\"Modelo\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && name.invalid\\\" clas=\\\"alert alert-danger\\\">\\n          Modelo Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"modelTransport.type\\\" required \\n          #type=\\\"ngModel\\\" name=\\\"type\\\" type=\\\"text\\\" placeholder=\\\"Tipo\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && type.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Tipo Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"modelTransport.brand\\\" required \\n          #brand=\\\"ngModel\\\" name=\\\"brand\\\" type=\\\"text\\\" placeholder=\\\"Marca\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && brand.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Marca Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"modelTransport.carPlate\\\" required \\n          #carPlate=\\\"ngModel\\\" name=\\\"carPlate\\\" type=\\\"text\\\" placeholder=\\\"Patente\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && carPlate.invalid\\\" class=\\\"alert alert-danger\\\">\\n          Patente Incorrecta\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success navarStyle\\\"><fa-icon icon=\\\"save\\\"></fa-icon></button>\\n      </div>\\n\\n  </form>\\n  <!--<div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"DistributionForm.form.invalid\\\">\\n      Hay Campos erroneos en el formulario, verifiquelos\\n  </div>-->\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <ul *ngFor=\\\"let e of error\\\">\\n        <li>{{e.value}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"responseSuccess\\\">\\n    <ul>\\n        <li>Guardado</li>\\n    </ul>\\n  </div>\\n\\n</div>\\n\"","import { TransportService } from './../../_services/transport.service';\nimport { Component, OnInit } from '@angular/core';\nimport { UpdateTransportDto } from 'src/app/_models/transport';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-modify-transport',\n  templateUrl: './modify-transport.component.html',\n  styleUrls: ['./modify-transport.component.css']\n})\nexport class ModifyTransportComponent implements OnInit {\n\n  modelTransport = new UpdateTransportDto();\n  id : number;\n  error = '';\n\n  responseSuccess : any;\n\n  constructor(private route : ActivatedRoute,\n    private router : Router,\n    private tranportService : TransportService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n\n    this.tranportService.findByIdTransport(this.id).subscribe(\n      x => {\n         this.modelTransport.id = x.id;\n         this.modelTransport.brand = x.brand;\n         this.modelTransport.carPlate = x.carPlate;\n         this.modelTransport.model = x.model;\n         this.modelTransport.type = x.type;\n        }\n    );\n  }\n\n  onSubmit() {\n    this.modelTransport.id = this.id;\n    this.tranportService.updateTransport(this.modelTransport).subscribe(\n      x => {\n        this.responseSuccess = x; \n        this.router.navigate(['/transport']);\n      },\n        error => {\n          this.error = error.error.notifications\n      }      \n    );\n    //this.router.navigate(['/distribution']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zcG9ydHMvdHJhbnNwb3J0cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<a href=\\\"\\\" class=\\\"btn btn-success mb-3\\\" routerLink=\\\"create\\\">\\n\\t<fa-icon icon=\\\"user-plus\\\"></fa-icon>\\n</a>\\n\\n<table class=\\\"table table-hover\\\">\\n\\t<thead>\\n\\t\\t<tr style=\\\"font-weight: bold;\\\">\\n      <td>Tipo</td>\\n      <td>Modelo</td>\\n      <td>Marca</td>\\t\\t\\t\\n      <td>Patente</td>\\n      <td>Acción</td>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let trans of transport\\\">\\n\\t\\t\\t<td>{{trans.type}}</td>\\n\\t\\t\\t<td>{{trans.model}}</td>\\n\\t\\t\\t<td>{{trans.brand}}</td>\\n\\t\\t\\t<td>{{trans.carPlate}}</td>\\n\\t\\t\\t<td>\\n\\t\\t\\t\\t<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"pr-3\\\" routerLink=\\\"/transport/update/{{trans.id}}\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:gray;\\\" icon=\\\"edit\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/transport\\\" (click)=\\\"openEliminar(trans.id,trans.carPlate,trans.model)\\\">\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<ngb-pagination (pageChange)=\\\"loadPage($event)\\\" [collectionSize]=\\\"col_size\\\" [pageSize]=\\\"itemsPerPage\\\" [(page)]=\\\"page\\\"\\n aria-label=\\\"Default pagination\\\"></ngb-pagination>\"","import { CreateTransportDto } from './../_models/transport';\nimport { TransportService } from './../_services/transport.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgbdModalContent } from '../modals/modals.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-transports',\n  templateUrl: './transports.component.html',\n  styleUrls: ['./transports.component.css']\n})\nexport class TransportsComponent implements OnInit {\n\n  page = 0;\n  transport : CreateTransportDto[];\n  col_size : number;\n  itemsPerPage : number = 10;\n\n  constructor(private transportService : TransportService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getAllTransports(this.page); \n  }\n\n  getAllTransports(page : number){\n    this.transportService.getPaginator(page).subscribe(\n      result => {\n        this.transport = result.list,\n        this.col_size = result.totalRecords\n      },\n      error => console.log(error)\n    ); \n\n  }\n\n  loadPage(page : number){\n    if (page != 0){\n      this.getAllTransports(page-1);\n    }\n  }\n\n    //MODALS\n    openEliminar(id: number, name: string, descp: string) {\n      const modalRef = this.modalService.open(NgbdModalContent);\n      modalRef.componentInstance.Encabezado = \"Eliminar\";\n      modalRef.componentInstance.Contenido = \"¿Desea eliminar el transporte : \" + name + \" \" + descp + \"?\";\n      modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n      modalRef.componentInstance.GuardaroEliminarClass = \"btn-danger\";\n      modalRef.componentInstance.MsgClose = \"Cancelar\";\n      modalRef.result.then(() => {\n        this.transportService.deleteTransport(id).subscribe(\n          data => {\n              this.getAllTransports(this.page);\n          },\n          error => {\n              console.log(\"error\", error);\n          }\n      );\n      },\n        () => {\n          console.log('Backdrop click');\n      })\n    }\n\n\n}\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n.navarStyle {\\r\\n  font-size : 13px;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n  padding-top: 1px;\\r\\n}\\r\\n\\r\\ninput{\\r\\nfont-size : 13px;\\r\\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;  \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsK0JBQStCLENBQUMsV0FBVztDQUM1Qzs7QUFFRDtFQUNFLCtCQUErQixDQUFDLFNBQVM7Q0FDMUM7O0FBRUQ7RUFDRSxpQkFBaUI7RUFDakIseUlBQXlJO0VBQ3pJLGlCQUFpQjtDQUNsQjs7QUFFRDtBQUNBLGlCQUFpQjtBQUNqQix5SUFBeUk7Q0FDeEkiLCJmaWxlIjoic3JjL2FwcC91c2Vycy9jcmVhdGUvY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctdmFsaWRbcmVxdWlyZWRdLCAubmctdmFsaWQucmVxdWlyZWQgIHtcclxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM0MkE5NDg7IC8qIGdyZWVuICovXHJcbn1cclxuXHJcbi5uZy1pbnZhbGlkOm5vdChmb3JtKSAge1xyXG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXHJcbn1cclxuXHJcbi5uYXZhclN0eWxlIHtcclxuICBmb250LXNpemUgOiAxM3B4O1xyXG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgJ09wZW4gU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7XHJcbiAgcGFkZGluZy10b3A6IDFweDtcclxufVxyXG5cclxuaW5wdXR7XHJcbmZvbnQtc2l6ZSA6IDEzcHg7XHJcbmZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgJ09wZW4gU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7ICBcclxufSJdfQ== */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/users\\\">\\r\\n    <fa-icon icon=\\\"angle-left\\\"></fa-icon>    \\r\\n</a>\\r\\n<div class=\\\"container col-4 navarStyle\\\">\\r\\n    <h2>Crear</h2>\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\r\\n        \\r\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.dni\\\" #Dni=\\\"ngModel\\\" required name=\\\"Dni\\\" id=\\\"Dni\\\" type=\\\"number\\\"\\r\\n                placeholder=\\\"Dni\\\">\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Dni.invalid\\\" clas=\\\"alert alert-danger\\\">\\r\\n            Dni Incorrecto\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.userName\\\" required #Usuario=\\\"ngModel\\\" name=\\\"Usuario\\\" type=\\\"text\\\"\\r\\n                placeholder=\\\"Username\\\" value=\\\"\\\">\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Usuario.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n            Usuario Incorrecto\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.password\\\" #Usuario=\\\"ngModel\\\" name=\\\"Password\\\" type=\\\"password\\\"\\r\\n                placeholder=\\\"Nueva Contraseña\\\" value=\\\"\\\">\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Password.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n            Contraseña Incorrecta\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" style=\\\"margin-bottom : 0px;\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <li *ngFor=\\\"let rol of model.rolesUser\\\" style=\\\"list-style:none\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"{{rol.id}}\\\" value=\\\"{{rol.id}}\\\" [(ngModel)]=\\\"rol.rolBelongUser\\\" />\\r\\n                        <label class=\\\"navarStyle\\\" style=\\\"text-transform: capitalize; padding-left: 5px;font-size: 11px;\\\" for=\\\"exampleCheck1\\\">{{rol.name}}</label>\\r\\n                    </div>\\r\\n                </li>\\r\\n            </div>\\r\\n        </div> \\r\\n\\r\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.phoneNumber\\\" required #PhoneNumber=\\\"ngModel\\\" name=\\\"phoneNumber\\\"\\r\\n                type=\\\"text\\\" placeholder=\\\"Telefóno\\\" value=\\\"\\\">\\r\\n        </div>\\r\\n        \\r\\n        <select class=\\\"form-control\\\" #distributionId=\\\"ngModel\\\" name=\\\"distributionId\\\" [(ngModel)]=\\\"model.distributionId\\\"\\r\\n        required>\\r\\n            <option class=\\\"form-control\\\" *ngIf=\\\"selecteddistributionId == model.distributionId\\\" [ngValue]=\\\"selecteddistributionId\\\" disabled>\\r\\n                Seleccione una Distribución...\\r\\n            </option>\\r\\n            <option class=\\\"form-control\\\" *ngFor=\\\"let dist of distribution\\\" value=\\\"{{dist.id}}\\\">{{dist.name}}</option>\\r\\n        </select>\\r\\n\\r\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && PhoneNumber.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n            Telefóno Incorrecto\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\r\\n            <button class=\\\"btn btn-success navarStyle\\\" [disabled]=\\\"!userForm.form.valid\\\"><fa-icon icon=\\\"save\\\"></fa-icon></button>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors\\\">\\r\\n        <ul *ngFor=\\\"let e of errors\\\">\\r\\n            <li>{{e.value}}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"userForm.form.invalid\\\">\\r\\n        Hay Campos erroneos en el formulario, verifiquelos\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\"","import { DistributionService } from './../../_services/distribution.service';\r\nimport { UserService } from './../../_services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { createUser } from '../users'\r\nimport { RoleService } from '../../_services/role.service';\r\nimport { DistributionBaseDto } from 'src/app/_models/distributions';\r\n@Component({\r\n  selector: 'app-createuser',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\nexport class CreateuserComponent implements OnInit {\r\n\r\n  model = new createUser();\r\n  distribution : DistributionBaseDto[];\r\n  errors : any;\r\n  selecteddistributionId : number;\r\n\r\n  constructor(private UserService : UserService, private rolService : RoleService,\r\n    private distributionService : DistributionService) {}\r\n\r\n\r\n  addUser(){    \r\n    this.UserService.createWithObjectUser(this.model).subscribe(\r\n      data => {\r\n          console.log(\"POST Request is successful \", data);\r\n      },\r\n        error => {\r\n          this.errors = error.error.notifications;\r\n     } \r\n    );\r\n\r\n  }\r\n\r\n  getAllRoles(){\r\n    this.rolService.getAll().subscribe(\r\n      rol => this.model.rolesUser = rol\r\n    );\r\n  }\r\n  onSubmit(){\r\n    this.addUser();\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.getAllRoles();\r\n\r\n    this.distributionService.allDistribution().subscribe(\r\n      x => {\r\n        this.distribution = x;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n  }\\r\\n  \\r\\n.ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n  \\r\\n.navarStyle {\\r\\n    font-size : 13px;\\r\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n    padding-top: 1px;\\r\\n  }\\r\\n  \\r\\ninput{\\r\\nfont-size : 13px;\\r\\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;  \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvbW9kaWZ5L21vZGlmeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksK0JBQStCLENBQUMsV0FBVztHQUM1Qzs7QUFFSDtJQUNJLCtCQUErQixDQUFDLFNBQVM7Q0FDNUM7O0FBRUQ7SUFDSSxpQkFBaUI7SUFDakIseUlBQXlJO0lBQ3pJLGlCQUFpQjtHQUNsQjs7QUFFSDtBQUNBLGlCQUFpQjtBQUNqQix5SUFBeUk7Q0FDeEkiLCJmaWxlIjoic3JjL2FwcC91c2Vycy9tb2RpZnkvbW9kaWZ5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctdmFsaWRbcmVxdWlyZWRdLCAubmctdmFsaWQucmVxdWlyZWQgIHtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgIzQyQTk0ODsgLyogZ3JlZW4gKi9cclxuICB9XHJcbiAgXHJcbi5uZy1pbnZhbGlkOm5vdChmb3JtKSAge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjYTk0NDQyOyAvKiByZWQgKi9cclxufVxyXG5cclxuLm5hdmFyU3R5bGUge1xyXG4gICAgZm9udC1zaXplIDogMTNweDtcclxuICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgJ09wZW4gU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7XHJcbiAgICBwYWRkaW5nLXRvcDogMXB4O1xyXG4gIH1cclxuICBcclxuaW5wdXR7XHJcbmZvbnQtc2l6ZSA6IDEzcHg7XHJcbmZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgJ09wZW4gU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7ICBcclxufSJdfQ== */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/users\\\">\\n    <fa-icon icon=\\\"angle-left\\\"></fa-icon>\\n</a>\\n\\n<ngb-tabset #t=\\\"ngbTabset\\\">\\n    <ngb-tab id=\\\"tab-selectbyid1\\\" title=\\\"Usuario\\\">\\n        <ng-template ngbTabContent>\\n            <div class=\\\"container col-4 navarStyle\\\">\\n                    <h2>Modificar</h2>\\n                    <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n                        \\n                        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.dni\\\" #Dni=\\\"ngModel\\\" required name=\\\"Dni\\\" id=\\\"Dni\\\" type=\\\"number\\\"\\n                                placeholder=\\\"Dni\\\">\\n                        </div>\\n                \\n                        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Dni.invalid\\\" clas=\\\"alert alert-danger\\\">\\n                            Dni Incorrecto\\n                        </div>\\n                \\n                        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.userName\\\" required #Usuario=\\\"ngModel\\\" name=\\\"Usuario\\\" type=\\\"text\\\"\\n                                placeholder=\\\"Username\\\" value=\\\"\\\">\\n                        </div>\\n                \\n                        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Usuario.invalid\\\" class=\\\"alert alert-danger\\\">\\n                            Usuario Incorrecto\\n                        </div>\\n                \\n                        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.password\\\" #Usuario=\\\"ngModel\\\" name=\\\"Password\\\" type=\\\"password\\\"\\n                                placeholder=\\\"Nueva Contraseña\\\" value=\\\"\\\">\\n                        </div>\\n                \\n                        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Password.invalid\\\" class=\\\"alert alert-danger\\\">\\n                            Contraseña Incorrecta\\n                        </div>\\n                \\n                        <div class=\\\"form-group\\\" style=\\\"margin-bottom : 0px;\\\">\\n                            <div class=\\\"row\\\">\\n                                <li *ngFor=\\\"let rol of model.rolesUser\\\" style=\\\"list-style:none\\\">\\n                                    <div class=\\\"col\\\">\\n                                        <input type=\\\"checkbox\\\" name=\\\"{{rol.id}}\\\" value=\\\"{{rol.id}}\\\" [(ngModel)]=\\\"rol.rolBelongUser\\\" />\\n                                        <label class=\\\"navarStyle\\\" style=\\\"text-transform: capitalize; padding-left: 5px;font-size: 11px;\\\" for=\\\"exampleCheck1\\\">{{rol.name}}</label>\\n                                    </div>\\n                                </li>\\n                            </div>\\n                        </div> \\n                \\n                        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.phoneNumber\\\" required #PhoneNumber=\\\"ngModel\\\" name=\\\"phoneNumber\\\"\\n                                type=\\\"text\\\" placeholder=\\\"Telefóno\\\" value=\\\"\\\">\\n                        </div>\\n                        \\n                        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && PhoneNumber.invalid\\\" class=\\\"alert alert-danger\\\">\\n                            Telefóno Incorrecto\\n                        </div>\\n                        \\n                        <select class=\\\"form-control\\\" #distributionId=\\\"ngModel\\\" name=\\\"distributionId\\\" [(ngModel)]=\\\"model.distributionId\\\">\\n                            <option *ngFor=\\\"let dist of distribution\\\" value=\\\"{{dist.id}}\\\">{{dist.name}}</option>\\n                        </select>\\n                \\n                        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-success navarStyle\\\" [disabled]=\\\"!userForm.form.valid\\\">\\n                                <fa-icon icon=\\\"save\\\"></fa-icon>\\n                            </button>\\n                        </div>\\n                \\n                    </form>\\n                    <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"userForm.form.invalid\\\">\\n                        Hay Campos erroneos en el formulario, verifiquelos\\n                    </div>\\n            </div>\\n        </ng-template>\\n    </ngb-tab>\\n    <ngb-tab id=\\\"tab-selectbyid2\\\">\\n        <ng-template ngbTabTitle>Auditoría</ng-template>\\n        <ng-template ngbTabContent>\\n            <app-audit-users [userId]=\\\"id\\\"></app-audit-users>\\n        </ng-template>\\n    </ngb-tab>\\n</ngb-tabset>\"","import { DistributionService } from './../../_services/distribution.service';\nimport { UsersComponent } from '../users.component';\nimport { UserService } from '../../_services/user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { modifyUser } from '../users';\n\n\n@Component({\n  selector: 'app-modifyuser',\n  templateUrl: './modify.component.html',\n  styleUrls: ['./modify.component.css']\n})\nexport class ModifyuserComponent implements OnInit {\n\n  id: number;\n  distribution : DistributionService[];\n  model = new modifyUser;\n\n  constructor(private router : Router,private route: ActivatedRoute, private userService: UserService,\n    private distributionService : DistributionService) {\n  }\n  \n\n  onChange(rol){\n    console.log(rol.rolBelongUser);\n  }\n\n  onSubmit() {\n    this.model.id = this.id;\n    this.userService.updateUsers(this.model).subscribe(\n      () => {\n        this.router.navigate(['/users']);\n      },\n        () => {\n      }      \n    );\n    this.router.navigate([UsersComponent]);\n  }\n  \n  ngOnInit() {\n    //le asigno el id que extraigo de la url\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n\n    this.userService.getById(this.id).subscribe(i => {\n        this.model.dni = i.dni,\n        this.model.userName = i.userName,\n        this.model.id = i.id,\n        this.model.phoneNumber = i.phoneNumber,\n        this.model.rolesUser = i.rolesUser;\n    });\n\n    this.distributionService.allDistribution().subscribe(\n      x => {\n        this.distribution = x;\n      }\n    );\n\n  }\n}\n","module.exports = \".my-drop-zone { border: dotted 3px lightgray; }\\r\\n.nv-file-over { border: dotted 3px red; }\\r\\n/* Default class applied to drop zones on over */\\r\\n.another-file-over-class { border: dotted 3px green; }\\r\\nhtml, body { height: 100%; }\\r\\n.image {\\r\\n    opacity: 1;\\r\\n    display: block;\\r\\n    width: 200px;\\r\\n    height: 200px;\\r\\n    transition: .5s ease;\\r\\n    -webkit-backface-visibility: hidden;\\r\\n            backface-visibility: hidden;\\r\\n}\\r\\n.imageUrl {\\r\\n    opacity: 1;\\r\\n    display: block;\\r\\n    width: 200px;\\r\\n    height: 200px;\\r\\n    transition: .5s ease;\\r\\n    -webkit-backface-visibility: hidden;\\r\\n            backface-visibility: hidden;\\r\\n}\\r\\n.text {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    font-size: 16px;\\r\\n}\\r\\n.textDanger {\\r\\n    background-color: #FF0A0A;\\r\\n    color: white;\\r\\n    font-size: 16px;\\r\\n}\\r\\n.container-image {\\r\\n    position: relative;\\r\\n    width: 200px;\\r\\n    height: 200px;\\r\\n}\\r\\n.container-image-url {\\r\\n    position: relative;\\r\\n    width: 25;\\r\\n    height: 25;\\r\\n}\\r\\n.middle {\\r\\n    transition: .5s ease;\\r\\n    opacity: 0;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n    -ms-transform: translate(-50%, -50%);\\r\\n    text-align: center;\\r\\n  }\\r\\n.middle-url {\\r\\n    transition: .5s ease;\\r\\n    opacity: 0;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 75%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n    -ms-transform: translate(-50%, -50%);\\r\\n    text-align: center;\\r\\n  }\\r\\n.container:hover .image {\\r\\n    opacity: 0.3;\\r\\n  }\\r\\n.container:hover .middle {\\r\\n    opacity: 1;\\r\\n  }\\r\\n.container:hover .middle-url {\\r\\n    opacity: 1;\\r\\n  }\\r\\n.btn-file {\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n}\\r\\n.btn-file input[type=file] {\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    min-width: 100%;\\r\\n    min-height: 100%;\\r\\n    font-size: 10px;\\r\\n    text-align: right;\\r\\n    filter: alpha(opacity=0);\\r\\n    outline: none;\\r\\n    background: transparent;\\r\\n    cursor: inherit;\\r\\n    display: block;\\r\\n}\\r\\n.inputfile{\\r\\n\\twidth: 0.1px;\\r\\n\\theight: 0.1px;\\r\\n\\topacity: 0;\\r\\n\\toverflow: hidden;\\r\\n\\tposition: absolute;\\r\\n\\tz-index: -1;\\r\\n}\\r\\n.inputfile + label {\\r\\n    font-size: 1.25em;\\r\\n    font-weight: 700;\\r\\n    color: white;\\r\\n    background-color: black;\\r\\n    /* display: inline-block; */\\r\\n    position: absolute;\\r\\n    left: 45px;\\r\\n    top: 90px;\\r\\n}\\r\\n.inputfile:focus + label,\\r\\n.inputfile + label:hover {\\r\\n    background-color: red;\\r\\n}\\r\\n.inputfile + label {\\r\\n\\tcursor: pointer; /* \\\"hand\\\" cursor */\\r\\n}\\r\\n.inputfile:focus + label {\\r\\n\\toutline: 1px dotted #000;\\r\\n\\toutline: -webkit-focus-ring-color auto 5px;\\r\\n}\\r\\n.inputfile + label * {\\r\\n\\tpointer-events: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvcGhvdG8tcHJvZmlsZS9waG90by1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLDZCQUE2QixFQUFFO0FBQy9DLGdCQUFnQix1QkFBdUIsRUFBRTtBQUFDLGlEQUFpRDtBQUMzRiwyQkFBMkIseUJBQXlCLEVBQUU7QUFFdEQsYUFBYSxhQUFhLEVBQUU7QUFFNUI7SUFDSSxXQUFXO0lBQ1gsZUFBZTtJQUNmLGFBQWE7SUFDYixjQUFjO0lBQ2QscUJBQXFCO0lBQ3JCLG9DQUE0QjtZQUE1Qiw0QkFBNEI7Q0FDL0I7QUFFRDtJQUNJLFdBQVc7SUFDWCxlQUFlO0lBQ2YsYUFBYTtJQUNiLGNBQWM7SUFDZCxxQkFBcUI7SUFDckIsb0NBQTRCO1lBQTVCLDRCQUE0QjtDQUMvQjtBQUVEO0lBQ0ksMEJBQTBCO0lBQzFCLGFBQWE7SUFDYixnQkFBZ0I7Q0FDbkI7QUFFRDtJQUNJLDBCQUEwQjtJQUMxQixhQUFhO0lBQ2IsZ0JBQWdCO0NBQ25CO0FBRUQ7SUFDSSxtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGNBQWM7Q0FDakI7QUFFRDtJQUNJLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1YsV0FBVztDQUNkO0FBRUQ7SUFDSSxxQkFBcUI7SUFDckIsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixTQUFTO0lBQ1QsVUFBVTtJQUNWLHlDQUFpQztZQUFqQyxpQ0FBaUM7SUFDakMscUNBQXFDO0lBQ3JDLG1CQUFtQjtHQUNwQjtBQUVIO0lBQ0kscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsU0FBUztJQUNULFVBQVU7SUFDVix5Q0FBaUM7WUFBakMsaUNBQWlDO0lBQ2pDLHFDQUFxQztJQUNyQyxtQkFBbUI7R0FDcEI7QUFFRDtJQUNFLGFBQWE7R0FDZDtBQUVEO0lBQ0UsV0FBVztHQUNaO0FBRUQ7SUFDRSxXQUFXO0dBQ1o7QUFFRDtJQUNFLG1CQUFtQjtJQUNuQixpQkFBaUI7Q0FDcEI7QUFDRDtJQUNJLE9BQU87SUFDUCxTQUFTO0lBQ1QsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2Qsd0JBQXdCO0lBQ3hCLGdCQUFnQjtJQUNoQixlQUFlO0NBQ2xCO0FBRUQ7Q0FDQyxhQUFhO0NBQ2IsY0FBYztDQUNkLFdBQVc7Q0FDWCxpQkFBaUI7Q0FDakIsbUJBQW1CO0NBQ25CLFlBQVk7Q0FDWjtBQUVEO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2Isd0JBQXdCO0lBQ3hCLDRCQUE0QjtJQUM1QixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLFVBQVU7Q0FDYjtBQUVEOztJQUVJLHNCQUFzQjtDQUN6QjtBQUVEO0NBQ0MsZ0JBQWdCLENBQUMsbUJBQW1CO0NBQ3BDO0FBRUQ7Q0FDQyx5QkFBeUI7Q0FDekIsMkNBQTJDO0NBQzNDO0FBRUQ7Q0FDQyxxQkFBcUI7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC91c2Vycy9waG90by1wcm9maWxlL3Bob3RvLXByb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5teS1kcm9wLXpvbmUgeyBib3JkZXI6IGRvdHRlZCAzcHggbGlnaHRncmF5OyB9XHJcbi5udi1maWxlLW92ZXIgeyBib3JkZXI6IGRvdHRlZCAzcHggcmVkOyB9IC8qIERlZmF1bHQgY2xhc3MgYXBwbGllZCB0byBkcm9wIHpvbmVzIG9uIG92ZXIgKi9cclxuLmFub3RoZXItZmlsZS1vdmVyLWNsYXNzIHsgYm9yZGVyOiBkb3R0ZWQgM3B4IGdyZWVuOyB9XHJcblxyXG5odG1sLCBib2R5IHsgaGVpZ2h0OiAxMDAlOyB9XHJcblxyXG4uaW1hZ2Uge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgaGVpZ2h0OiAyMDBweDtcclxuICAgIHRyYW5zaXRpb246IC41cyBlYXNlO1xyXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcblxyXG4uaW1hZ2VVcmwge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgaGVpZ2h0OiAyMDBweDtcclxuICAgIHRyYW5zaXRpb246IC41cyBlYXNlO1xyXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcblxyXG4udGV4dCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4udGV4dERhbmdlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkYwQTBBO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4uY29udGFpbmVyLWltYWdlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbi5jb250YWluZXItaW1hZ2UtdXJsIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiAyNTtcclxuICAgIGhlaWdodDogMjU7XHJcbn1cclxuXHJcbi5taWRkbGUge1xyXG4gICAgdHJhbnNpdGlvbjogLjVzIGVhc2U7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4ubWlkZGxlLXVybCB7XHJcbiAgICB0cmFuc2l0aW9uOiAuNXMgZWFzZTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDc1JTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICAuY29udGFpbmVyOmhvdmVyIC5pbWFnZSB7XHJcbiAgICBvcGFjaXR5OiAwLjM7XHJcbiAgfVxyXG4gIFxyXG4gIC5jb250YWluZXI6aG92ZXIgLm1pZGRsZSB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxuXHJcbiAgLmNvbnRhaW5lcjpob3ZlciAubWlkZGxlLXVybCB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxuXHJcbiAgLmJ0bi1maWxlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuLmJ0bi1maWxlIGlucHV0W3R5cGU9ZmlsZV0ge1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBtaW4td2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MCk7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICBjdXJzb3I6IGluaGVyaXQ7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmlucHV0ZmlsZXtcclxuXHR3aWR0aDogMC4xcHg7XHJcblx0aGVpZ2h0OiAwLjFweDtcclxuXHRvcGFjaXR5OiAwO1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHotaW5kZXg6IC0xO1xyXG59XHJcblxyXG4uaW5wdXRmaWxlICsgbGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxLjI1ZW07XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAvKiBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7ICovXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiA0NXB4O1xyXG4gICAgdG9wOiA5MHB4O1xyXG59XHJcblxyXG4uaW5wdXRmaWxlOmZvY3VzICsgbGFiZWwsXHJcbi5pbnB1dGZpbGUgKyBsYWJlbDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5pbnB1dGZpbGUgKyBsYWJlbCB7XHJcblx0Y3Vyc29yOiBwb2ludGVyOyAvKiBcImhhbmRcIiBjdXJzb3IgKi9cclxufVxyXG5cclxuLmlucHV0ZmlsZTpmb2N1cyArIGxhYmVsIHtcclxuXHRvdXRsaW5lOiAxcHggZG90dGVkICMwMDA7XHJcblx0b3V0bGluZTogLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yIGF1dG8gNXB4O1xyXG59XHJcblxyXG4uaW5wdXRmaWxlICsgbGFiZWwgKiB7XHJcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <div class=\\\"navbar navbar-default\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <h3>Imagen de Perfil</h3>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"container\\\">\\n        <div *ngIf=\\\"!url\\\" class=\\\"container-image col-md-6\\\">\\n            <img src=\\\"{{urlImage}}\\\" class=\\\"image\\\">\\n            <input class=\\\"inputfile\\\" type=\\\"file\\\"  name=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onSelectFile($event)\\\" ng2FileSelect\\n                    [uploader]=\\\"uploader\\\" value=\\\"Cambiar\\\" />\\n                    <label for=\\\"file\\\" class=\\\"btn btn-default\\\">  <fa-icon icon=\\\"upload\\\"></fa-icon> Choose a file</label>\\n            <br>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"eliminarPerfil()\\\">\\n                    <fa-icon icon=\\\"trash\\\"></fa-icon>\\n            </button>\\n        </div>\\n</div>\\n\\n<div *ngIf=\\\"url\\\" class=\\\"container-image-url col-md-6\\\">\\n        <img [src]=\\\"url\\\" class=\\\"imageUrl\\\">\\n\\n        <ul *ngFor=\\\"let item of uploader.queue\\\">\\n            <div class=\\\"middle-url\\\">\\n                <span class=\\\"btn btn-default btn-file ml-3 pl-3\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn text\\\" (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\n                        <fa-icon icon=\\\"upload\\\"></fa-icon>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn textDanger\\\" (click)=\\\"removePreview()\\\">\\n                        <fa-icon icon=\\\"trash\\\"></fa-icon>\\n                    </button>\\n                </span>\\n            </div>\\n\\n        </ul>\\n</div>\\n    <br>\\n    <!--<div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n        <div class=\\\"col-md-3\\\">\\n\\n            <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\"\\n                [uploader]=\\\"uploader\\\" class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n                <fa-icon icon=\\\"upload\\\"></fa-icon>\\n                <b>Arrastre su imagen aqui</b>\\n            </div>\\n            <br>\\n        </div>\\n         <h3>Upload queue</h3>\\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\\n    </div>-->\\n\\n</div>\"","import { UserService } from './../../_services/user.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { AuthenticationService } from '../../_services/authentication.service';\nimport { FileUploader, FileItem } from 'ng2-file-upload';\nimport { environment } from '../../../environments/environment';\nimport { Subject } from 'rxjs';\nimport { MessBetweenCompService } from '../../_services/mess-between-comp.service';\nimport { $ } from 'protractor';\n\n@Component({\n  selector: 'app-photo-profile',\n  templateUrl: './photo-profile.component.html',\n  styleUrls: ['./photo-profile.component.css']\n})\nexport class PhotoProfileComponent implements OnInit {\n\n  constructor(private authService : AuthenticationService, \n              private messaBetweenComp : MessBetweenCompService,\n              private userService : UserService) { }\n\n    //image\n    uploader:FileUploader;\n    hasBaseDropZoneOver = false;\n    baseUrl = environment.apiUrl; \n    idUser : number;\n    urlImage : string;\n    subject = new Subject<any>();\n   \n    fileOverBase(e:any):void {\n      this.hasBaseDropZoneOver = e;\n    }\n  \n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl,\n      authToken: 'Bearer ' + this.authService.userId('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        this.urlImage = this.authService.urlFile(this.idUser, 200,200) + \"r=\" + (Math.random() * 100) + 1;\n        this.messaBetweenComp.sendMessage(this.urlImage);\n      }\n    }    \n  }\n\n  url = '';\n  onSelectFile(event) {\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n      reader.onload = (event : any) => { // called once readAsDataURL is completed\n        this.url = event.target.result;\n    }\n    }\n  }\n  ngOnInit() {\n    //image\n    this.initializeUploader();\n    this.idUser = this.authService.userId('id');\n    this.urlImage = this.authService.urlFile(this.idUser, 200,200) + \"r=\" + (Math.random() * 100) + 1;\n  }\n\n  removePreview(){\n    this.url='';\n    this.uploader.cancelAll();\n    this.uploader.clearQueue();\n  }\n\n  eliminarPerfil(){\n    let url = this.authService.urlFile(this.idUser, 200,200);\n    this.userService.deleteProfilePhoto(this.idUser).subscribe(\n      data => {\n        this.urlImage =  url + \"r=\" + (Math.random() * 100) + 1,\n        this.url = '',\n        this.messaBetweenComp.sendMessage(this.urlImage),\n        console.log(\"POST Request is successful \", data)\n      },\n      error => {\n          console.log(\"Rrror\", error);\n      }\n    );\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3NldHRpbmcvc2V0dGluZ29mdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary\\\" href=\\\"\\\" routerLink=\\\"/users\\\">\\n    <fa-icon icon=\\\"angle-left\\\"></fa-icon>\\n</a>\\n<ngb-tabset #t=\\\"ngbTabset\\\">\\n    <ngb-tab id=\\\"tab-selectbyid1\\\" title=\\\"Perfil\\\">\\n        <ng-template ngbTabContent>\\n            <div class=\\\"container col-4\\\">\\n                <h2>Mi Perfil</h2>\\n                <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n                    \\n                    <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.dni\\\" #Dni=\\\"ngModel\\\" required name=\\\"Dni\\\" id=\\\"Dni\\\" type=\\\"number\\\"\\n                            placeholder=\\\"Dni\\\">\\n                    </div>\\n                \\n                    <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Dni.invalid\\\" clas=\\\"alert alert-danger\\\">\\n                        Dni Incorrecto\\n                    </div>\\n                \\n                    <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.userName\\\" required #Usuario=\\\"ngModel\\\" name=\\\"Usuario\\\" type=\\\"text\\\"\\n                            placeholder=\\\"Username\\\" value=\\\"\\\">\\n                    </div>\\n                \\n                    <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Usuario.invalid\\\" class=\\\"alert alert-danger\\\">\\n                        Usuario Incorrecto\\n                    </div>\\n                \\n                    <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.password\\\" #Usuario=\\\"ngModel\\\" name=\\\"Password\\\" type=\\\"password\\\"\\n                            placeholder=\\\"Nueva Contraseña\\\" value=\\\"\\\">\\n                    </div>\\n                \\n                    <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Password.invalid\\\" class=\\\"alert alert-danger\\\">\\n                        Contraseña Incorrecta\\n                    </div>\\n                \\n                    <div class=\\\"form-group\\\" style=\\\"margin-bottom : 0px;\\\">\\n                        <div class=\\\"row\\\">\\n                            <li *ngFor=\\\"let rol of model.rolesUser\\\" style=\\\"list-style:none\\\">\\n                                <div class=\\\"col\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"{{rol.id}}\\\" value=\\\"{{rol.id}}\\\" [(ngModel)]=\\\"rol.rolBelongUser\\\" />\\n                                    <label class=\\\"navarStyle\\\" style=\\\"text-transform: capitalize; padding-left: 5px;font-size: 11px;\\\" for=\\\"exampleCheck1\\\">{{rol.name}}</label>\\n                                </div>\\n                            </li>\\n                        </div>\\n                    </div> \\n                \\n                    <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.phoneNumber\\\" required #PhoneNumber=\\\"ngModel\\\" name=\\\"phoneNumber\\\"\\n                            type=\\\"text\\\" placeholder=\\\"Telefóno\\\" value=\\\"\\\">\\n                    </div>\\n                    \\n                    <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && PhoneNumber.invalid\\\" class=\\\"alert alert-danger\\\">\\n                        Telefóno Incorrecto\\n                    </div>\\n                \\n                    <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n                        <button class=\\\"btn btn-success navarStyle\\\" [disabled]=\\\"!userForm.form.valid\\\">\\n                            <fa-icon icon=\\\"save\\\"></fa-icon>\\n                        </button>\\n                    </div>\\n                \\n                \\n                </form>\\n                <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"userForm.form.invalid\\\">\\n                    Hay Campos erroneos en el formulario, verifiquelos\\n                </div>\\n            </div>\\n        </ng-template>\\n    </ngb-tab>\\n    <ngb-tab>\\n        <ng-template ngbTabTitle>Imagen</ng-template>\\n        <ng-template ngbTabContent>\\n            <div class=\\\"container col-4\\\">\\n                <app-photo-profile></app-photo-profile>\\n            </div>\\n        </ng-template>\\n    </ngb-tab>\\n</ngb-tabset>\\n\\n\\n\"","import { environment } from './../../../environments/environment';\nimport { Component, OnInit } from '@angular/core';\nimport { UsersComponent } from '../users.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../_services/user.service';\nimport { modifyUser } from '../users';\nimport { FileUploader } from 'ng2-file-upload';\n\n@Component({\n  selector: 'app-settingofuser',\n  templateUrl: './settingofuser.component.html',\n  styleUrls: ['./settingofuser.component.css']\n})\nexport class SettingofuserComponent implements OnInit {\n\n  \n\n  constructor(private router : Router,\n    private route: ActivatedRoute, \n    private userService: UserService) {\n  }\n  model = new modifyUser;\n  id: number=0;\n\n\n  onChange(rol){\n    console.log(rol.rolBelongUser);\n  }\n\n   onSubmit() {\n    this.model.id = this.id;\n    this.userService.updateProfileUsers(this.model).subscribe(\n      result => {\n        this.router.navigate(['/users']);\n      },\n        error => {\n         console.log(error);\n        }      \n    );\n    this.router.navigate([UsersComponent]);\n  }\n  \n  ngOnInit() {\n    //le asigno el id que extraigo de la url\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n    \n    this.userService.getById(this.id).subscribe(i => {\n        this.model.dni = i.dni,\n        this.model.userName = i.userName,\n        this.model.id = i.id,\n        this.model.phoneNumber = i.phoneNumber,\n        this.model.rolesUser = i.rolesUser;\n    })\n  }\n\n}\n","module.exports = \"@import url('https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css');\\r\\n.navarStyle {\\r\\n    font-size : 13px;\\r\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n    padding-top: 1px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RkFBd0Y7QUFDeEY7SUFDSSxpQkFBaUI7SUFDakIseUlBQXlJO0lBQ3pJLGlCQUFpQjtHQUNsQiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IHVybCgnaHR0cHM6Ly9zdGFja3BhdGguYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvNC4xLjMvY3NzL2Jvb3RzdHJhcC5taW4uY3NzJyk7XHJcbi5uYXZhclN0eWxlIHtcclxuICAgIGZvbnQtc2l6ZSA6IDEzcHg7XHJcbiAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LCBDYW50YXJlbGwsICdPcGVuIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xyXG4gICAgcGFkZGluZy10b3A6IDFweDtcclxuICB9Il19 */\"","module.exports = \"<div class=\\\"container mb-1\\\" >\\r\\n\\t\\t<label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Repartición </label>\\r\\n\\t\\t<div class=\\\"d-inline-block pl-1 pr-1 col-2\\\">\\r\\n\\t\\t\\t<select  (change)=\\\"filterList()\\\" [(ngModel)]=\\\"filters.distributionId\\\" \\r\\n\\t\\t\\t\\tclass=\\\"form-control d-inline-block pl-1\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let dist of distributions\\\" value=\\\"{{dist.id}}\\\">\\r\\n\\t\\t\\t\\t\\t{{dist.name}}\\r\\n\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">D.N.I </label>\\r\\n\\t\\t<div class=\\\"d-inline-block pl-1 pr-1 col-2\\\">\\r\\n\\t\\t\\t<input (keyup)=\\\"findWhileWrite()\\\" [(ngModel)]=\\\"filters.dni\\\"  type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<label class=\\\"d-inline-block pl-1 pr-1\\\" for=\\\"\\\">Usuario</label>\\r\\n\\t\\t<div class=\\\"d-inline-block pl-1 pr-1 col-2\\\">\\r\\n\\t\\t\\t<input (keyup)=\\\"findWhileWrite()\\\" [(ngModel)]=\\\"filters.userName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n\\t\\t</div>\\r\\n</div>\\r\\n\\r\\n\\t<div class=\\\"d-inline-block pb-2 pt-2\\\">\\r\\n\\t\\t<a href=\\\"\\\" class=\\\"btn btn-success\\\" routerLink=\\\"/users/create\\\">\\r\\n\\t\\t\\t<fa-icon icon=\\\"user-plus\\\"></fa-icon>\\r\\n\\t\\t</a>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"d-inline-block pl-1 pb-2 pt-2\\\">\\r\\n\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"AddSupervisor()\\\">\\r\\n\\t\\t\\t\\tEnlazar a Supervisor\\r\\n\\t\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n<table class=\\\"table table-hover\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr style=\\\"font-weight: bold;\\\">\\r\\n\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t<div class=\\\"form-check\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-check-input\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t\\t<td>Dni</td>\\r\\n\\t\\t\\t<td>Usuario</td>\\r\\n\\t\\t\\t<td>Repartición</td>\\r\\n\\t\\t\\t<td>Accción<td>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr *ngFor=\\\"let user of user_list\\\">\\r\\n\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t<div class=\\\"form-check\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-check-input\\\"\\r\\n\\t\\t\\t\\t\\t(click)=\\\"check(user)\\\" id=\\\"{{user.id}}\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t\\t<td>{{user.dni}}</td>\\r\\n\\t\\t\\t<td>{{user.userName}}</td>\\r\\n\\t\\t\\t<td>{{user.distribution.name}}</td>\\r\\n\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\r\\n\\t\\t\\t\\t\\t<a class=\\\"pr-3\\\" routerLink=\\\"/users/update/{{user.id}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:gray;\\\" icon=\\\"edit\\\"></fa-icon>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/users\\\" (click)=\\\"openEliminar(user.id,user.dni,user.userName)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<fa-icon style=\\\"color:red;\\\" icon=\\\"trash\\\"></fa-icon>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\\r\\n\\r\\n<ngb-pagination (pageChange)=\\\"loadPage($event)\\\" [collectionSize]=\\\"col_size\\\" [pageSize]=\\\"itemsPerPage\\\" [(page)]=\\\"filters.page\\\"\\r\\n aria-label=\\\"Default pagination\\\"></ngb-pagination>\"","import { AddSupervisorComponent } from './../modals/add-supervisor/add-supervisor.component';\r\nimport { DistributionBaseDto } from 'src/app/_models/distributions';\r\nimport { Roles, RoleUserDto } from './../_models/roles';\r\nimport { NgbdModalContent } from './../modals/modals.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport { User } from './users';\r\nimport { DistributionService } from '../_services/distribution.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\n\r\nexport class UsersComponent implements OnInit {\r\n  filters = { page: 0, distributionId: null, dni : \"\" }\r\n  user_list: User[];\r\n  roles_list: Roles;\r\n  col_size: number;\r\n  itemsPerPage: number = 10;\r\n  value: number;\r\n  distributions: DistributionBaseDto[];\r\n  displayedColumns = ['dni', 'userName'];\r\n  changeRolDto = new RoleUserDto();\r\n  users_check : User[]=[];\r\n\r\n\r\n  constructor(private var_user_service: UserService, \r\n              private modalService: NgbModal,\r\n              private distributionService: DistributionService,\r\n              private route: ActivatedRoute) {}\r\n\r\n\r\n  ngOnInit() {\r\n    //le asigno el id que extraigo de la url\r\n    this.route.params.subscribe(\r\n      p => this.filters.distributionId = p.distributionId\r\n    );\r\n      \r\n    this.distributionService.allDistribution().subscribe(\r\n      x => {\r\n        this.distributions = x;\r\n        this.getAllUsers(this.filters);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  loadPage(page : any) {\r\n    if (page > 0) {\r\n      this.filters.page = page - 1;\r\n      this.getAllUsers(this.filters);\r\n    }\r\n  }\r\n\r\n  filterList() {\r\n    this.getAllUsers(this.filters);\r\n  }\r\n\r\n  findWhileWrite(){\r\n    this.getAllUsers(this.filters);\r\n  }\r\n\r\n  getAllUsers(filters: any): void {\r\n    this.var_user_service.getPaginator(filters).subscribe(result => {\r\n      this.user_list = result.list\r\n      this.col_size = result.totalRecords\r\n    });\r\n  }\r\n  //MODALS\r\n  openEliminar(id: number, dni: number, usuario: string) {\r\n    const modalRef = this.modalService.open(NgbdModalContent);\r\n    modalRef.componentInstance.Encabezado = \"Eliminar\";\r\n    modalRef.componentInstance.Contenido = \"¿Desea eliminar a \" + dni + \" \" + usuario + \"?\";\r\n    modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\r\n    modalRef.componentInstance.MsgClose = \"Cancelar\";\r\n    modalRef.result.then(() => {\r\n      this.var_user_service.deleteUser(id).subscribe(\r\n        data => {\r\n          this.getAllUsers(this.filters);\r\n        },\r\n        error => {\r\n          console.log(\"error\", error);\r\n        }\r\n      );\r\n    },\r\n      () => {\r\n        console.log('Backdrop click');\r\n      })\r\n  }\r\n\r\n  check(user : User){\r\n\r\n    if (this.users_check.find(x => x.id == user.id)){\r\n      const indexDeleteAll = this.users_check.indexOf(user, 0);\r\n      if (indexDeleteAll > -1) {\r\n        this.users_check.splice(indexDeleteAll, 1);\r\n      }\r\n    }else{\r\n      this.users_check.push(user);\r\n    }\r\n  }\r\n\r\n  AddSupervisor(){\r\n    const modalRef = this.modalService.open(AddSupervisorComponent,{size :\"lg\"});\r\n    modalRef.componentInstance.usersSelected = this.users_check;\r\n    modalRef.componentInstance.allUsers = this.user_list;\r\n    modalRef.result.then(\r\n        data => {\r\n          console.log(\"data\", data);\r\n        },\r\n        error => {\r\n          console.log(\"error\", error);\r\n        })\r\n  }\r\n\r\n\r\n}\r\n","import { DistributionBaseDto } from 'src/app/_models/distributions';\r\n\r\nexport class User{\r\n  id : number;\r\n  dni: number;\r\n  userName : string;\r\n  phoneNumber : string;\r\n  password : string;\r\n  distributionId : number;\r\n  distribution : DistributionBaseDto;\r\n}\r\n\r\nexport class rolesBelongUser{\r\n  id : number;\r\n  name : string;\r\n  rolBelongUser : string;\r\n}\r\nexport class modifyUser extends User{\r\n  rolesUser : rolesBelongUser[];\r\n}\r\n\r\n\r\nexport class createUser extends modifyUser{\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:63098/api/File/UpdateMyImage/'\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}